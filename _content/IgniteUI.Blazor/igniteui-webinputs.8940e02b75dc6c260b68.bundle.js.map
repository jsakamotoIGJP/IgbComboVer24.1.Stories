{"version":3,"file":"igniteui-webinputs.8940e02b75dc6c260b68.bundle.js","mappings":"wKASYA,E,YAAZ,SAAYA,GACX,6BACA,iCACA,mCACA,kCACA,CALD,CAAYA,IAAAA,EAAmB,KAUxB,IAAIC,GAA4B,QAAS,sBAAuB,2DCVvE,IAAYC,GAAZ,SAAYA,GACX,+BACA,0BACA,CAHD,CAAYA,IAAAA,EAAoB,KAQzB,IAAIC,GAA6B,QAAS,uBAAwB,+C,ICR7DC,E,iCAAZ,SAAYA,GACX,iBACA,uBACA,mBACA,oBACA,CALD,CAAYA,IAAAA,EAAgB,KAUrB,IAAIC,GAAyB,QAAS,mBAAoB,uD,eCN1D,MAAMC,UAAyB,KAAtC,c,oBAES,KAAAC,EAAoB,IAAIC,EAAA,EAIxB,KAAAC,EAAS,IA2BlB,CA9BeC,QACb,OAAOC,KAAKJ,CACb,CAEcK,oBACb,OAAOD,KAAKF,CACb,CACcG,kBAAcL,GAC3BI,KAAKF,EAAIF,EACTI,KAAKJ,EAAEM,EAAIF,KAAKF,CACjB,CACAK,iBAAiBP,GAChBI,KAAKC,cAAgBL,CACtB,CACIQ,QAEH,OADWJ,KAAKD,EAAEM,EAAE,IAErB,CACID,MAAER,GACL,IAAIU,EAAcV,EAClBI,KAAKD,EAAEQ,EAAE,IAAKD,EACf,CACIE,QAEH,OADWR,KAAKD,EAAEM,EAAE,IAErB,CACIG,MAAEZ,GACL,IAAIU,EAAcV,EAClBI,KAAKD,EAAEQ,EAAE,IAAKD,EACf,EA/BO,EAAAG,IAAW,QAASd,EAAkB,oBCIvC,MAAee,UAAwB,KAA9C,c,oBAES,KAAAC,oBAA8B,CAmDvC,CAjDKH,QAEH,OADWR,KAAKD,IAAIM,EAAE,OAEvB,CACIG,MAAEZ,GACL,IAAIU,EAAcV,EAClBI,KAAKD,IAAIQ,EAAE,OAAQD,EACpB,CACAM,wBAAwBC,GACvB,GAAe,MAAXA,EACH,OAAO,KAER,IAAIjB,EAAqBiB,EAAY,KACrC,GAAS,MAALjB,GAAkBkB,MAALlB,EAChB,OAAO,KAER,OAAQA,EAAEmB,eACT,IAAK,YACL,CACC,IAAIhB,EAAI,IAAIiB,EAEZ,OADAjB,EAAEI,iBAAiBU,GACZd,C,CAGR,IAAK,cACL,CACC,IAAIK,EAAI,IAAIa,EAEZ,OADAb,EAAED,iBAAiBU,GACZT,C,CAGR,IAAK,eACL,CACC,IAAII,EAAI,IAAIU,EAEZ,OADAV,EAAEL,iBAAiBU,GACZL,C,CAGR,IAAK,eACL,CACC,IAAIV,EAAI,IAAIqB,EAEZ,OADArB,EAAEK,iBAAiBU,GACZf,C,EAKT,OAAO,IACR,EAnDO,EAAAW,IAAW,QAASC,EAAiB,mBAyDtC,MAAMS,UAAqBT,EAAlC,c,oBAES,KAAAU,EAAoB,IAAIvB,EAAA,EAIxB,KAAAwB,EAAS,IAmDlB,CAtDeC,QACb,OAAOtB,KAAKoB,CACb,CAEcnB,oBACb,OAAOD,KAAKqB,CACb,CACcpB,kBAAcL,GAC3BI,KAAKqB,EAAIzB,EACTI,KAAKoB,EAAElB,EAAIF,KAAKqB,CACjB,CACAlB,iBAAiBP,GAChBI,KAAKC,cAAgBL,CACtB,CACI2B,QAEH,OADWvB,KAAKsB,EAAEjB,EAAE,KAErB,CACIkB,MAAE3B,GACL,IAAIU,EAAcV,EAClBI,KAAKsB,EAAEf,EAAE,KAAMD,EAChB,CACIR,QACH,IAAI0B,EAAOxB,KAAKsB,EAAEjB,EAAE,QACpB,QAAuBS,IAATU,IAAuBxB,KAAayB,WAIlD,OADAD,GAAO,QAAgClC,EAA2B,KAASoC,aAAkCpC,EAA2BU,KAAKsB,EAAEK,EAAuBrC,EAA2BkC,KAC1L,KAASE,aAAkCpC,EAA2BkC,EAC9E,CACI1B,MAAEF,GACL,IAAIU,GAAc,QAAgChB,EAA2BM,GAC7EU,EAAST,EAAA,EAAe+B,MAAMtB,EAAOuB,YACrC7B,KAAKsB,EAAEf,EAAE,OAAQD,EAClB,CACIqB,QAEH,OADW3B,KAAKsB,EAAEQ,EAAE,YAAalC,GAAW,IAAIoB,GAEjD,CACIW,MAAE/B,GACL,IAAIU,EAAcV,EAClBI,KAAKsB,EAAEf,EAAE,WAAYD,EACtB,CACIyB,QAEH,OADW/B,KAAKsB,EAAEjB,EAAE,OAErB,CACI0B,MAAEnC,GACL,IAAIU,EAAcV,EAClBI,KAAKsB,EAAEf,EAAE,OAAQD,EAClB,CACUP,IACT,OAAOC,KAAKsB,CACb,EAvDO,EAAAb,IAAW,QAASU,EAAc,eAAsBT,EAAiBsB,GA6D1E,MAAMd,UAAqBR,EAAlC,c,oBAES,KAAAU,EAAoB,IAAIvB,EAAA,EAIxB,KAAAiC,EAAS,IAuElB,CA1EeR,QACb,OAAOtB,KAAKoB,CACb,CAEcnB,oBACb,OAAOD,KAAK8B,CACb,CACc7B,kBAAcL,GAC3BI,KAAK8B,EAAIlC,EACTI,KAAKoB,EAAElB,EAAIF,KAAK8B,CACjB,CACA3B,iBAAiBP,GAChBI,KAAKC,cAAgBL,CACtB,CACIM,QAEH,OADWF,KAAKsB,EAAEjB,EAAE,KAErB,CACIH,MAAEN,GACL,IAAIU,EAAcV,EAClBI,KAAKsB,EAAEf,EAAE,KAAMD,EAChB,CACIqB,QACH,IAAIH,EAAOxB,KAAKsB,EAAEjB,EAAE,QACpB,QAAuBS,IAATU,IAAuBxB,KAAayB,WAIlD,OADAD,GAAO,QAAgClC,EAA2B,KAASoC,aAAkCpC,EAA2BU,KAAKsB,EAAEK,EAAuBrC,EAA2BkC,KAC1L,KAASE,aAAkCpC,EAA2BkC,EAC9E,CACIG,MAAE/B,GACL,IAAIU,GAAc,QAAgChB,EAA2BM,GAC7EU,EAAST,EAAA,EAAe+B,MAAMtB,EAAOuB,YACrC7B,KAAKsB,EAAEf,EAAE,OAAQD,EAClB,CACIR,QAEH,OADWE,KAAKsB,EAAEW,EAAE,SAAUrC,GAAW,IAAIsC,IAA0BtC,GAAW,IAAIqB,GAEvF,CACIM,QAEH,OADWvB,KAAKsB,EAAEjB,EAAE,OAErB,CACIkB,MAAE3B,GACL,IAAIU,EAAcV,EAClBI,KAAKsB,EAAEf,EAAE,OAAQD,EAClB,CACI2B,QAEH,OADWjC,KAAKsB,EAAEjB,EAAE,gBAErB,CACI4B,MAAErC,GACL,IAAIU,EAAcV,EAClBI,KAAKsB,EAAEf,EAAE,gBAAiBD,EAC3B,CACIyB,QAEH,OADW/B,KAAKsB,EAAEjB,EAAE,aAErB,CACI0B,MAAEnC,GACL,IAAIU,EAAcV,EAClBI,KAAKsB,EAAEf,EAAE,aAAcD,EACxB,CACIe,QAEH,OADWrB,KAAKsB,EAAEjB,EAAE,cAErB,CACIgB,MAAEzB,GACL,IAAIU,EAAcV,EAClBI,KAAKsB,EAAEf,EAAE,cAAeD,EACzB,CACUP,IACT,OAAOC,KAAKsB,CACb,EA3EO,EAAAb,IAAW,QAASS,EAAc,eAAsBR,EAAiBsB,GAiF1E,MAAMf,UAAoBP,EAAjC,c,oBAKS,KAAAU,EAAoB,IAAIvB,EAAA,EAIxB,KAAAsC,EAAS,IAqMlB,CA5MWpC,IACT,OAAOC,KAAKsB,CACb,CAEcA,QACb,OAAOtB,KAAKoB,CACb,CAEcnB,oBACb,OAAOD,KAAKmC,CACb,CACclC,kBAAcL,GAC3BI,KAAKmC,EAAIvC,EACTI,KAAKoB,EAAElB,EAAIF,KAAKmC,CACjB,CACAhC,iBAAiBP,GAChBI,KAAKC,cAAgBL,CACtB,CACIwC,SAEH,OADWpC,KAAKsB,EAAEjB,EAAE,KAErB,CACI+B,OAAGxC,GACN,IAAIU,EAAcV,EAClBI,KAAKsB,EAAEf,EAAE,KAAMD,EAChB,CACIR,QACH,IAAI0B,EAAOxB,KAAKsB,EAAEjB,EAAE,QACpB,QAAuBS,IAATU,IAAuBxB,KAAayB,WAIlD,OADAD,GAAO,QAAgClC,EAA2B,KAASoC,aAAkCpC,EAA2BU,KAAKsB,EAAEK,EAAuBrC,EAA2BkC,KAC1L,KAASE,aAAkCpC,EAA2BkC,EAC9E,CACI1B,MAAEF,GACL,IAAIU,GAAc,QAAgChB,EAA2BM,GAC7EU,EAAST,EAAA,EAAe+B,MAAMtB,EAAOuB,YACrC7B,KAAKsB,EAAEf,EAAE,OAAQD,EAClB,CACI+B,QAEH,OADWrC,KAAKsB,EAAEjB,EAAE,YAErB,CACIgC,MAAEzC,GACL,IAAIU,EAAcV,EAClBI,KAAKsB,EAAEf,EAAE,YAAaD,EACvB,CACIgC,QAEH,OADWtC,KAAKsB,EAAEjB,EAAE,SAErB,CACIiC,MAAE1C,GACL,IAAIU,EAAcV,EAClBI,KAAKsB,EAAEf,EAAE,SAAUD,EACpB,CACIiC,SAEH,OADWvC,KAAKsB,EAAEjB,EAAE,WAErB,CACIkC,OAAG3C,GACN,IAAIU,EAAcV,EAClBI,KAAKsB,EAAEf,EAAE,WAAYD,EACtB,CACIkC,SAEH,OADWxC,KAAKsB,EAAEjB,EAAE,cAErB,CACImC,OAAG5C,GACN,IAAIU,EAAcV,EAClBI,KAAKsB,EAAEf,EAAE,cAAeD,EACzB,CACImC,SAEH,OADWzC,KAAKsB,EAAEjB,EAAE,mBAErB,CACIoC,OAAG7C,GACN,IAAIU,EAAcV,EAClBI,KAAKsB,EAAEf,EAAE,mBAAoBD,EAC9B,CACIoC,QAEH,OADW1C,KAAKsB,EAAEjB,EAAE,mBAErB,CACIqC,MAAE9C,GACL,IAAIU,EAAcV,EAClBI,KAAKsB,EAAEf,EAAE,mBAAoBD,EAC9B,CACIqC,QAEH,OADW3C,KAAKsB,EAAEjB,EAAE,OAErB,CACIsC,MAAE/C,GACL,IAAIU,EAAcV,EAClBI,KAAKsB,EAAEf,EAAE,OAAQD,EAClB,CACIe,QAEH,OADWrB,KAAKsB,EAAEjB,EAAE,aAErB,CACIgB,MAAEzB,GACL,IAAIU,EAAcV,EAClBI,KAAKsB,EAAEf,EAAE,aAAcD,EACxB,CACIwB,QAEH,OADW9B,KAAKsB,EAAEjB,EAAE,gBAErB,CACIyB,MAAElC,GACL,IAAIU,EAAcV,EAClBI,KAAKsB,EAAEf,EAAE,gBAAiBD,EAC3B,CACID,QAEH,OADWL,KAAKsB,EAAEjB,EAAE,eAErB,CACIA,MAAET,GACL,IAAIU,EAAcV,EAClBI,KAAKsB,EAAEf,EAAE,eAAgBD,EAC1B,CACI2B,QAEH,OADWjC,KAAKsB,EAAEjB,EAAE,eAErB,CACI4B,MAAErC,GACL,IAAIU,EAAcV,EAClBI,KAAKsB,EAAEf,EAAE,eAAgBD,EAC1B,CACIyB,QAEH,OADW/B,KAAKsB,EAAEjB,EAAE,mBAErB,CACI0B,MAAEnC,GACL,IAAIU,EAAcV,EAClBI,KAAKsB,EAAEf,EAAE,mBAAoBD,EAC9B,CACIiB,QAEH,OADWvB,KAAKsB,EAAEjB,EAAE,gBAErB,CACIkB,MAAE3B,GACL,IAAIU,EAAcV,EAClBI,KAAKsB,EAAEf,EAAE,gBAAiBD,EAC3B,CACIsC,QAEH,OADW5C,KAAKsB,EAAEjB,EAAE,eAErB,CACIuC,MAAEhD,GACL,IAAIU,EAAcV,EAClBI,KAAKsB,EAAEf,EAAE,eAAgBD,EAC1B,CACIuC,QAEH,OADW7C,KAAKsB,EAAEjB,EAAE,WAErB,CACIwC,MAAEjD,GACL,IAAIU,EAAcV,EAClBI,KAAKsB,EAAEf,EAAE,WAAYD,EACtB,CACIwC,QAEH,OADW9C,KAAKsB,EAAEjB,EAAE,cAErB,CACIyC,MAAElD,GACL,IAAIU,EAAcV,EAClBI,KAAKsB,EAAEf,EAAE,cAAeD,EACzB,CACIqB,QACH,IAAIH,EAAOxB,KAAKsB,EAAEjB,EAAE,oBACpB,QAAuBS,IAATU,IAAuBxB,KAAayB,WAIlD,OADAD,GAAO,QAA6B9B,EAAwB,KAASgC,aAA+BhC,EAAwBM,KAAKsB,EAAEK,EAAoBjC,EAAwB8B,KACxK,KAASE,aAA+BhC,EAAwB8B,EACxE,CACIG,MAAE/B,GACL,IAAIU,GAAc,QAA6BZ,EAAwBE,GACvEU,EAAST,EAAA,EAAe+B,MAAMtB,EAAOuB,YACrC7B,KAAKsB,EAAEf,EAAE,mBAAoBD,EAC9B,CACIyC,QAEH,OADW/C,KAAKsB,EAAEjB,EAAE,SAErB,CACI0C,MAAEnD,GACL,IAAIU,EAAcV,EAClBI,KAAKsB,EAAEf,EAAE,SAAUD,EACpB,CACIJ,QAEH,OADWF,KAAKsB,EAAEjB,EAAE,WAErB,CACIH,MAAEN,GACL,IAAIU,EAAcV,EAClBI,KAAKsB,EAAEf,EAAE,WAAYD,EACtB,CACI0C,QAEH,OADWhD,KAAKsB,EAAEjB,EAAE,eAErB,CACI2C,MAAEpD,GACL,IAAIU,EAAcV,EAClBI,KAAKsB,EAAEf,EAAE,eAAgBD,EAC1B,EA5MO,EAAAG,IAAW,QAASQ,EAAa,cAAqBP,EAAiBsB,GAkNxE,MAAME,UAA8Be,EAAA,EAE1CC,cACCC,MAAYlC,EAAae,EAAG,EAC7B,EAHO,EAAAvB,IAAW,QAASyB,EAAuB,wBAA+Be,EAAA,EAAwBjB,EAAEoB,WAAiBnC,EAAae,IASnI,MAAMhB,UAAkBN,EAA/B,c,oBAKS,KAAAqB,EAAoB,IAAIlC,EAAA,EAIxB,KAAAkD,EAAS,IAyGlB,CAhHWhD,IACT,OAAOC,KAAKqB,CACb,CAEcA,QACb,OAAOrB,KAAK+B,CACb,CAEc9B,oBACb,OAAOD,KAAK+C,CACb,CACc9C,kBAAcL,GAC3BI,KAAK+C,EAAInD,EACTI,KAAK+B,EAAE7B,EAAIF,KAAK+C,CACjB,CACA5C,iBAAiBP,GAChBI,KAAKC,cAAgBL,CACtB,CACIiD,QAEH,OADW7C,KAAKqB,EAAEhB,EAAE,KAErB,CACIwC,MAAEjD,GACL,IAAIU,EAAcV,EAClBI,KAAKqB,EAAEd,EAAE,KAAMD,EAChB,CACIqB,QACH,IAAIH,EAAOxB,KAAKqB,EAAEhB,EAAE,QACpB,QAAuBS,IAATU,IAAuBxB,KAAayB,WAIlD,OADAD,GAAO,QAAgClC,EAA2B,KAASoC,aAAkCpC,EAA2BU,KAAKqB,EAAEM,EAAuBrC,EAA2BkC,KAC1L,KAASE,aAAkCpC,EAA2BkC,EAC9E,CACIG,MAAE/B,GACL,IAAIU,GAAc,QAAgChB,EAA2BM,GAC7EU,EAAST,EAAA,EAAe+B,MAAMtB,EAAOuB,YACrC7B,KAAKqB,EAAEd,EAAE,OAAQD,EAClB,CACIgB,QACH,IAAIE,EAAOxB,KAAKqB,EAAEhB,EAAE,eACpB,QAAuBS,IAATU,IAAuBxB,KAAayB,WAIlD,OADAD,GAAO,QAAiChC,EAA4B,KAASkC,aAAmClC,EAA4BQ,KAAKqB,EAAEM,EAAwBnC,EAA4BgC,KAChM,KAASE,aAAmClC,EAA4BgC,EAChF,CACIF,MAAE1B,GACL,IAAIU,GAAc,QAAiCd,EAA4BI,GAC/EU,EAAST,EAAA,EAAe+B,MAAMtB,EAAOuB,YACrC7B,KAAKqB,EAAEd,EAAE,cAAeD,EACzB,CACIR,QAEH,OADWE,KAAKqB,EAAEY,EAAE,SAAUrC,GAAW,IAAIyD,IAA8BzD,GAAWc,EAAgB4C,iBAAiB1D,IAExH,CACIoD,QAEH,OADWhD,KAAKqB,EAAEhB,EAAE,OAErB,CACI2C,MAAEpD,GACL,IAAIU,EAAcV,EAClBI,KAAKqB,EAAEd,EAAE,OAAQD,EAClB,CACIc,QAEH,OADWpB,KAAKqB,EAAES,EAAE,oBAAqBlC,GAAW,IAAID,GAEzD,CACIyB,MAAExB,GACL,IAAIU,EAAcV,EAClBI,KAAKqB,EAAEd,EAAE,mBAAoBD,EAC9B,CACIJ,QAEH,OADWF,KAAKqB,EAAEhB,EAAE,gBAErB,CACIH,MAAEN,GACL,IAAIU,EAAcV,EAClBI,KAAKqB,EAAEd,EAAE,gBAAiBD,EAC3B,CACID,QAEH,OADWL,KAAKqB,EAAEhB,EAAE,iBAErB,CACIA,MAAET,GACL,IAAIU,EAAcV,EAClBI,KAAKqB,EAAEd,EAAE,iBAAkBD,EAC5B,CACIiB,QAEH,OADWvB,KAAKqB,EAAEhB,EAAE,oBAErB,CACIkB,MAAE3B,GACL,IAAIU,EAAcV,EAClBI,KAAKqB,EAAEd,EAAE,oBAAqBD,EAC/B,CACI2B,QAEH,OADWjC,KAAKqB,EAAEhB,EAAE,aAErB,CACI4B,MAAErC,GACL,IAAIU,EAAcV,EAClBI,KAAKqB,EAAEd,EAAE,aAAcD,EACxB,CACIwB,QAEH,OADW9B,KAAKqB,EAAEhB,EAAE,cAErB,CACIyB,MAAElC,GACL,IAAIU,EAAcV,EAClBI,KAAKqB,EAAEd,EAAE,cAAeD,EACzB,EAhHO,EAAAG,IAAW,QAASO,EAAW,YAAmBN,EAAiBsB,GAsHpE,MAAMqB,UAAkCJ,EAAA,EAE9CC,cACCC,MAAYzC,EAAiBsB,EAAG,EACjC,EAHO,EAAAvB,IAAW,QAAS4C,EAA2B,4BAAmCJ,EAAA,EAAwBjB,EAAEoB,WAAiB1C,EAAiBsB,I,eCxiB/I,MAAeuB,EAGZC,uBAET,OAAO,IACR,CAKYzB,QACX,OAAO/B,KAAKyD,eACZ,CAGA7C,2BAA2B8C,GACvB,IAAKA,EAC2B,OAAO,KAEX,IAAKA,EAASC,MACV,OAAO,KAEX,IACIC,EAAe,MADRF,EAASC,MAAME,KACQ,YAClC,OAAK,KAAcC,aAAaF,GAGzB,KAAcG,OAAOH,GAFjB,IAGf,CACpBI,0BAER,CACAd,cAaQ,KAAAe,oBAA8B,EACI,KAAAC,WAAqB,EAEvB,KAAAC,qBAAkE,GAqClF,KAAAC,wBAAkC,EA6BhD,KAAAC,IAAc,KACd,KAAAC,eAA8B,IAAIC,IAUlC,KAAAC,kBAAyB,KACzB,KAAAC,eAAsB,KACtB,KAAAC,YAAsB,EA7FS1E,KAAa2E,UACd,KAAYC,sBAAsBC,OAAOC,eAAe9E,OAE/FA,KAAKyD,gBAAkBzD,KAAKwD,uBACtBxD,KAAKyD,gBAAiBsB,eAAiB/E,KAC7CA,KAAKgE,0BAC+BhE,KAAagF,qBACbhF,KAAagF,qBAGlD,CAK0CC,qBAAqBC,EAAkBC,GAC5CnF,KAAKmE,qBAAqBiB,KAAK,CAAEF,SAAUA,EAAUC,UAAWA,GACrE,CAEUE,yBACNrF,KAAKiE,oBAAqB,EAC1B,IAAK,IAAIlC,EAAI,EAAGA,EAAI/B,KAAKmE,qBAAqBmB,OAAQvD,IAClD/B,KAAKuF,aACDvF,KAAKmE,qBAAqBpC,GAAGmD,SAC7BlF,KAAKmE,qBAAqBpC,GAAGoD,WAErCnF,KAAKiE,oBAAqB,EAC1BjE,KAAKmE,qBAAqBmB,OAAS,CACvC,CACUE,GAAGN,EAAkBC,GACvBnF,KAAKoE,yBAGLe,IACAA,EAAYA,EAAUtD,YAE1B7B,KAAKiE,oBAAqB,EAC1BiB,GAAW,QAASA,GAChBlF,KAAKkE,UACLlE,KAAKuF,aAAaL,EAAUC,GAE5BnF,KAAKiF,qBAAqBC,EAAUC,GAExCnF,KAAKiE,oBAAqB,EAC1D,CAEsCsB,aAAaL,EAAkBC,GAEzC,CAIhBM,yBAAyB5B,EAAc6B,EAAkBC,GACrD,GAAI3F,KAAKiE,mBACL,OAEJ,IAAI2B,GAAU,QAAW/B,GACzB7D,KAAKoE,wBAAyB,EACxBpE,KAAM4F,GAAWD,EACvB3F,KAAKoE,wBAAyB,CAClC,CACZP,WACH,OAAQ7D,KAAK+B,EAAEvB,CAChB,CACIqD,SAAK1B,GACRnC,KAAK+B,EAAEvB,EAAI2B,CACZ,CAEW0D,WAAWhC,GAElB,OAAK7D,KAAa8F,cACVjC,GAAgC,GAAxBA,EAAKkC,QAAQ,QACb/F,KAAa8F,aAAajC,GAK/B,IACX,CAIUmC,oBACV,OAAOhG,KAAKsE,cAChB,CACU2B,IAAIC,GACLlG,KAAK0E,YACN1E,KAAKsE,eAAe6B,IAAID,EAEhC,CAKUvB,SAASyB,EAAgBC,EAAgBC,GAC3C,GAAItG,KAAK0E,WACL,OAEJ1E,KAAK0E,YAAa,EAClB1E,KAAKwE,kBAAoB4B,EACzBpG,KAAKyE,eAAiB4B,EAEtB,IAAIE,EAAgB,GAChBC,EAAYxG,KAAK+B,EAAU4B,MAAME,KACL,IAA5B2C,EAAST,QAAQ,SACjBS,EAAWA,EAASC,UAAU,IAElCF,GAAgB,QAAS,4BAEhC,IAAIG,EAAqB,GAErBC,GAAS,QAASH,GACtBE,EAAmBtB,KAAKuB,EAAS,KAE1B,IAAI5G,EAAKC,KAAK+B,EAAU4B,MAAMiD,SAC9B,KAAO7G,GAAe,UAAVA,EAAE8D,MACA,QAAV9D,EAAE8D,MACQ,WAAV9D,EAAE8D,MACQ,oBAAV9D,EAAE8G,MACQ,oBAAV9G,EAAE8G,MAA4B,CAC9BL,EAAWzG,EAAE8D,KACmB,IAA5B2C,EAAST,QAAQ,SACjBS,EAAWA,EAASC,UAAU,IAElC,IAAIK,GAAa,QAASN,GAC1BE,EAAmBtB,KAAK0B,EAAa,KACrC/G,EAAIA,EAAE6G,Q,CAGjB,GAAIN,EAAQ,CACX,IAAIS,EAAkBT,EAAOvE,EAAU4B,MAAME,KACG,IAAlCkD,EAAehB,QAAQ,SACvBgB,EAAiBA,EAAeN,UAAU,IAE9C,IAAIO,GAAe,QAASD,GAEtCL,EAAmBtB,KAAK4B,EAAe,IAAMT,EAAgB,KAC7DG,EAAmBtB,KAAK4B,EAAe,IAAML,EAAS,I,EAGvD,QAA4BP,EAAWpG,KAAMuG,EAAgB,IAAKvG,KAAKgG,eAAe,EAAOU,GAIjF1G,KAAaiH,eACbjH,KAAaiH,cAAcb,EAAWC,EAAWC,GAEtDtG,KAAK0E,YAAa,CAC1B,ECxLM,MAAMwC,UAAqCC,EAAA,EAC9CjE,YAAYkE,GAKR,GAJAjE,QACMI,EAAoCI,QACrCJ,EAAoCI,OAAQ,QAASJ,EAA6B,gCAEnF6D,EACA,IAAK,IAAIrF,EAAI,EAAGA,EAAIqF,EAAK9B,OAAQvD,IAC7B/B,KAAKmG,IAAIiB,EAAKrF,GAG1B,CAEUsF,mBACA9D,EAAoCI,QACrCJ,EAAoCI,OAAQ,QAASJ,EAA6B,gCAEvF,IAAI+D,EAAO,IAAIC,EAAA,EAAuFhE,EAAoCI,MAAQjD,EAAiCiD,MAAO,GA6B1L,OA5BA2D,EAAKE,QAAU,CAACC,EAAKC,KACjB,IAAIC,EAAYF,EAIhB,OAHIE,EAAKlE,kBACLkE,EAAOA,EAAKlE,iBAEZkE,EAAKC,OACED,EAAKC,OAAOF,GAEhBC,IAASD,CAAG,EAEvBJ,EAAKO,SAAYJ,GACLA,EAAYhE,gBAExB6D,EAAKQ,WAAcJ,IACf,IAAID,EAAOC,EAAY3C,eAYvB,OAXK0C,IACDA,EAAMlE,EAA4BwE,oBAAoBL,GAElDD,KACKC,EAAI/D,OAAU8D,EAAYhE,gBAAgBtD,iBAC1CsH,EAAYhE,gBAAgBtD,iBAAiBuH,GAE7CD,EAAYhE,gBAAkBiE,IAIpCD,CAAG,EAEPH,CACX,EChDG,MAAMU,EAGHxE,uBAET,OAAO,IAAI7D,CACZ,CAKYoC,QACV,OAAO/B,KAAKyD,eACb,CACQO,0BAER,CACAd,cACAlD,KAAKyD,gBAAkBzD,KAAKwD,uBACtBxD,KAAKyD,gBAAiBsB,eAAiB/E,KAC7CA,KAAKgE,0BACgChE,KAAagF,qBACbhF,KAAagF,qBAGlD,CACUiD,uBAAuBlG,GAC7B/B,KAAKyD,gBAAkB1B,EACjB/B,KAAKyD,gBAAiBsB,eAAiB/E,KACjDA,KAAKgE,0BACgChE,KAAagF,qBACbhF,KAAagF,qBAGlD,CACI3C,QACH,OAAQrC,KAAK+B,EAAE3B,CAChB,CACIiC,MAAEF,GACLnC,KAAK+B,EAAE3B,GAAK+B,CACb,CACIO,QACH,OAAQ1C,KAAK+B,EAAEvB,CAChB,CACIkC,MAAEP,GACLnC,KAAK+B,EAAEvB,GAAK2B,CACb,CAEW0D,WAAWhC,GAElB,OAAK7D,KAAa8F,cACVjC,GAAgC,GAAxBA,EAAKkC,QAAQ,QACb/F,KAAa8F,aAAajC,GAK/B,IACX,CACG1D,iBAAiB+H,GACvBlI,KAAK+B,EAAE5B,iBAAiB+H,EACzB,E,eCnDM,MAAMC,UAA8B5E,EAGjCC,uBAET,OAAO,IAAIxC,CACZ,CAIwCe,QACtC,OAAO/B,KAAKyD,eACb,CACAP,cACCC,QAkCO,KAAAiF,OAAuC,IAhC/C,CAEuBxH,kBAAoB,CAIvCyH,SACH,OAAQrI,KAAK+B,EAAEc,CAChB,CACIwF,OAAGlG,GACNnC,KAAK+B,EAAEc,EAAIV,CACZ,CAIImG,WACH,OAAOtI,KAAK+B,EAAEJ,CACf,CACI2G,SAAKnG,GACRnC,KAAK+B,EAAEJ,GAAI,QAAgCrC,EAA2B6C,GAC/BnC,KAAKwF,GAAG,QAAQ,QAAkClG,EAA2BU,KAAK+B,EAAEJ,GAC5H,CAII4G,kBACH,OAAOvI,KAAK+B,EAAET,CACf,CACIiH,gBAAYpG,GACfnC,KAAK+B,EAAET,GAAI,QAAiC9B,EAA4B2C,GACjCnC,KAAKwF,GAAG,eAAe,QAAmChG,EAA4BQ,KAAK+B,EAAET,GACrI,CAMIkH,YACoC,GAAoB,OAAhBxI,KAAKoI,OAAiB,CACtB,IAAId,EAAO,IAAIJ,EACXuB,EAAYzI,KAAK+B,EAAEjC,EAC5D2I,IACsCA,EAAY,IAAIpF,GAEjBrD,KAAKoI,OAAUd,EAAaoB,WAAWD,E,CAGlF,OAAOzI,KAAKoI,MACb,CACII,UAAMrG,GACkD,OAAhBnC,KAAKoI,SACJpI,KAAKoI,OAAeO,eAAe,MACpC3I,KAAKoI,OAAS,MAElB,IAAId,EAAO,IAAIJ,EACflH,KAAKoI,OAAUd,EAAasB,WAAWzG,GACvC,IAAI0G,EAAW,IAAIC,EAAA,EAAiDpI,EAAwBiD,OACxF8E,EAAYzI,KAAK+B,EAAEjC,EACzD2I,IACmCA,EAAY,IAAIpF,GAEhBwF,EAAiBE,OAASN,EAC3BI,EAASG,QACRhJ,KAAKoI,OAAeO,eAAeE,EAE5E,CAIII,WACH,OAAQjJ,KAAK+B,EAAEiB,CAChB,CACIiG,SAAK9G,GACRnC,KAAK+B,EAAEiB,GAAKb,EAC2BnC,KAAKwF,GAAG,OAAQxF,KAAK+B,EAAEiB,EAC/D,CAIIkG,uBACoC,MAAMpG,EAAI9C,KAAK+B,EAAEX,EACjB,GAAS,MAAL0B,EACA,OAAO,KAGX,IAAMA,EAAUiC,eAAgB,CAC5B,IAAIjF,EAAI,IAAIkI,EACPlF,EAAUa,MACV7D,EAAU2D,gBAAkBX,EAExBhD,EAAEiC,EAAU5B,kBACZL,EAAEiC,EAAU5B,iBAAiB2C,GAGrCA,EAAUiC,eAAiBjF,C,CAEvE,OAAQgD,EAAUiC,cACnB,CACImE,qBAAiB/G,GACRnC,KAAK+B,EAAEX,EAAd,MAALe,EAAuB,KAAkBA,EAAEJ,CAC5C,CAIIoH,oBACH,OAAQnJ,KAAK+B,EAAE7B,CAChB,CACIiJ,kBAAchH,GACjBnC,KAAK+B,EAAE7B,GAAKiC,EAC2BnC,KAAKwF,GAAG,gBAAiBxF,KAAK+B,EAAE7B,EACxE,CAIIkJ,qBACH,OAAQpJ,KAAK+B,EAAE1B,CAChB,CACI+I,mBAAejH,GAClBnC,KAAK+B,EAAE1B,GAAK8B,EAC2BnC,KAAKwF,GAAG,iBAAkBxF,KAAK+B,EAAE1B,EACzE,CAIIgJ,wBACH,OAAQrJ,KAAK+B,EAAER,CAChB,CACI8H,sBAAkBlH,GACrBnC,KAAK+B,EAAER,GAAI,QAAWY,GACiBnC,KAAKwF,GAAG,oBAAqBxF,KAAK+B,EAAER,EAC5E,CAII+H,iBACH,OAAQtJ,KAAK+B,EAAEE,CAChB,CACIqH,eAAWnH,GACdnC,KAAK+B,EAAEE,GAAI,QAAWE,GACiBnC,KAAKwF,GAAG,aAAcxF,KAAK+B,EAAEE,EACrE,CAKIsH,kBACH,OAAQvJ,KAAK+B,EAAED,CAChB,CACIyH,gBAAYpH,GACfnC,KAAK+B,EAAED,GAAI,QAAWK,GACiBnC,KAAKwF,GAAG,cAAexF,KAAK+B,EAAED,EACtE,CAEW+D,WAAWhC,GAGlB,OADiBV,MAAM0C,WAAWhC,KAMpB,MAAd7D,KAAKwI,OAAiBxI,KAAKwI,MAAM3C,YAAc7F,KAAKwI,MAAM3C,WAAWhC,GAAgB7D,KAAKwI,MAAM3C,WAAWhC,GAC3G7D,KAAKkJ,kBAAqBlJ,KAAKkJ,iBAAyBrF,MAAS7D,KAAKkJ,iBAAyBrF,MAAQA,EAAe7D,KAAKkJ,iBAEhH,KACX,CACG/I,iBAAiB+H,GACvBlI,KAAK+B,EAAE5B,iBAAiB+H,EACzB,ECjMM,MAAMsB,UAA+BrC,EAAA,EACxCjE,YAAYkE,GAKR,GAJAjE,QACMgF,EAA8BxE,QAC/BwE,EAA8BxE,OAAQ,QAASwE,EAAuB,0BAEvEf,EACA,IAAK,IAAIrF,EAAI,EAAGA,EAAIqF,EAAK9B,OAAQvD,IAC7B/B,KAAKmG,IAAIiB,EAAKrF,GAG1B,CAEUsF,mBACAc,EAA8BxE,QAC/BwE,EAA8BxE,OAAQ,QAASwE,EAAuB,0BAE3E,IAAIb,EAAO,IAAIC,EAAA,EAA2EY,EAA8BxE,MAAQ3C,EAA2B2C,MAAO,GA6BlK,OA5BA2D,EAAKE,QAAU,CAACC,EAAKC,KACjB,IAAIC,EAAYF,EAIhB,OAHIE,EAAKlE,kBACLkE,EAAOA,EAAKlE,iBAEZkE,EAAKC,OACED,EAAKC,OAAOF,GAEhBC,IAASD,CAAG,EAEvBJ,EAAKO,SAAYJ,GACLA,EAAYhE,gBAExB6D,EAAKQ,WAAcJ,IACf,IAAID,EAAOC,EAAY3C,eAYvB,OAXK0C,IACDA,EAAMU,EAAsBJ,oBAAoBL,GAE5CD,KACKC,EAAI/D,OAAU8D,EAAYhE,gBAAgBtD,iBAC1CsH,EAAYhE,gBAAgBtD,iBAAiBuH,GAE7CD,EAAYhE,gBAAkBiE,IAIpCD,CAAG,EAEPH,CACX,ECzCG,MAAMmC,UAA4BxG,EAAA,EAExCC,cACCC,MAAYnC,EAAWgB,EAAG,EAC3B,EAHO,EAAAvB,IAAW,QAASgJ,EAAqB,sBAA6BxG,EAAA,EAAwBjB,EAAEoB,WAAiBpC,EAAWgB,ICA7H,MAAM0H,UAA0B,KAAvC,c,oBAES,KAAA/I,oBAA8B,EAS9B,KAAAP,EAAoB,IAAIP,EAAA,EAIxB,KAAA8B,EAAS,IAuBlB,CAnCKL,QAEH,OADWtB,KAAKQ,EAAEH,EAAE,OAErB,CACIiB,MAAE1B,GACL,IAAIU,EAAcV,EAClBI,KAAKQ,EAAED,EAAE,OAAQD,EAClB,CAEcE,QACb,OAAOR,KAAKI,CACb,CAEcH,oBACb,OAAOD,KAAK2B,CACb,CACc1B,kBAAcL,GAC3BI,KAAK2B,EAAI/B,EACTI,KAAKI,EAAEF,EAAIF,KAAK2B,CACjB,CACAxB,iBAAiBP,GAChBI,KAAKC,cAAgBL,CACtB,CACIA,QAEH,OADWI,KAAKQ,EAAEsB,EAAE,YAAalC,GAAW,IAAIoB,GAEjD,CACIpB,MAAEA,GACL,IAAIU,EAAcV,EAClBI,KAAKQ,EAAED,EAAE,WAAYD,EACtB,CACIP,QAEH,OADWC,KAAKQ,EAAEyB,EAAE,iBAAkBrC,GAAW,IAAI6J,IAAwB7J,GAAW,IAAIoB,GAE7F,EApCO,EAAAP,IAAW,QAASiJ,EAAmB,qBCDxC,MAAMC,EAGHnG,uBAET,OAAO,IAAIkG,CACZ,CAKY3H,QACV,OAAO/B,KAAKyD,eACb,CACQO,0BAER,CACAd,cA6CQ,KAAA0G,eAAyC,KA5CjD5J,KAAKyD,gBAAkBzD,KAAKwD,uBACtBxD,KAAKyD,gBAAiBsB,eAAiB/E,KAC7CA,KAAKgE,0BACgChE,KAAagF,qBACbhF,KAAagF,qBAGlD,CACUiD,uBAAuBlG,GAC7B/B,KAAKyD,gBAAkB1B,EACjB/B,KAAKyD,gBAAiBsB,eAAiB/E,KACjDA,KAAKgE,0BACgChE,KAAagF,qBACbhF,KAAagF,qBAGlD,CACInB,WACH,OAAQ7D,KAAK+B,EAAET,CAChB,CACIuC,SAAK1B,GACRnC,KAAK+B,EAAET,EAAIa,CACZ,CAII0H,eACoC,MAAM/G,EAAI9C,KAAK+B,EAAEnC,EACjB,GAAS,MAALkD,EACA,OAAO,KAGX,IAAMA,EAAUiC,eAAgB,CAC5B,IAAIjF,EAAIqI,EAAsBJ,oBAAoBjF,GAC9ChD,IACCA,EAAU2D,gBAAkBX,GAEhCA,EAAUiC,eAAiBjF,C,CAEvE,OAAQgD,EAAUiC,cACnB,CACI8E,aAAS1H,GACAnC,KAAK+B,EAAEnC,EAAd,MAALuC,EAAuB,KAAkBA,EAAEJ,CAC5C,CAMI+H,oBACoC,GAA4B,OAAxB9J,KAAK4J,eAAyB,CAC9B,IAAItC,EAAO,IAAIkC,EACXf,EAAYzI,KAAK+B,EAAEhC,EAC5D0I,IACsCA,EAAY,IAAIgB,GAEjBzJ,KAAK4J,eAAkBtC,EAAaoB,WAAWD,E,CAG1F,OAAOzI,KAAK4J,cACb,CACIE,kBAAc3H,GACkD,OAAxBnC,KAAK4J,iBACJ5J,KAAK4J,eAAuBjB,eAAe,MAC5C3I,KAAK4J,eAAiB,MAE1B,IAAItC,EAAO,IAAIkC,EACfxJ,KAAK4J,eAAkBtC,EAAasB,WAAWzG,GAC/C,IAAI0G,EAAW,IAAIC,EAAA,EAA2C9H,EAAkB2C,OAC5E8E,EAAYzI,KAAK+B,EAAEhC,EACzD0I,IACmCA,EAAY,IAAIgB,GAEhBZ,EAAiBE,OAASN,EAC3BI,EAASG,QACRhJ,KAAK4J,eAAuBjB,eAAeE,EAEpF,CAEWhD,WAAWhC,GAElB,OAAK7D,KAAa8F,cACVjC,GAAgC,GAAxBA,EAAKkC,QAAQ,QACb/F,KAAa8F,aAAajC,GAI1C7D,KAAK6J,UAAa7J,KAAK6J,SAAiBhG,MAAS7D,KAAK6J,SAAiBhG,MAAQA,EAAe7D,KAAK6J,SAC7E,MAAtB7J,KAAK8J,eAAyB9J,KAAK8J,cAAcjE,YAAc7F,KAAK8J,cAAcjE,WAAWhC,GAAgB7D,KAAK8J,cAAcjE,WAAWhC,GAEhI,IACX,CACG1D,iBAAiB+H,GACvBlI,KAAK+B,EAAE5B,iBAAiB+H,EACzB,ECnHM,MAAM6B,EACFnJ,kBAEH,KAAcoJ,aAAa,uBAAwBL,GACnD,KAAcM,SAAS,oBAA2BP,EAAmB/F,MACzE,ECLG,MAAMuG,UAAgC3G,EAGnCC,uBAET,OAAO,IAAIvC,CACZ,CAIwCc,QACtC,OAAO/B,KAAKyD,eACb,CACAP,cACCC,OAED,CAEuBvC,kBAAoB,CAIvCyH,SACH,OAAQrI,KAAK+B,EAAEK,EAChB,CACIiG,OAAGlG,GACNnC,KAAK+B,EAAEK,GAAKD,CACb,CAIImG,WACH,OAAOtI,KAAK+B,EAAEjC,CACf,CACIwI,SAAKnG,GACRnC,KAAK+B,EAAEjC,GAAI,QAAgCR,EAA2B6C,GAC/BnC,KAAKwF,GAAG,QAAQ,QAAkClG,EAA2BU,KAAK+B,EAAEjC,GAC5H,CAIIqK,gBACH,OAAQnK,KAAK+B,EAAEM,CAChB,CACI8H,cAAUhI,GACbnC,KAAK+B,EAAEM,EAAIF,CACZ,CAIIiI,aACH,OAAQpK,KAAK+B,EAAEO,CAChB,CACI8H,WAAOjI,GACVnC,KAAK+B,EAAEO,EAAIH,CACZ,CAIIkI,eACH,OAAQrK,KAAK+B,EAAEQ,EAChB,CACI8H,aAASlI,GACZnC,KAAK+B,EAAEQ,GAAKJ,CACb,CAIImI,kBACH,OAAQtK,KAAK+B,EAAES,EAChB,CACI8H,gBAAYnI,GACfnC,KAAK+B,EAAES,GAAKL,CACb,CAIIoI,uBACH,OAAQvK,KAAK+B,EAAEU,EAChB,CACI8H,qBAAiBpI,GACpBnC,KAAK+B,EAAEU,GAAKN,CACb,CAIIqI,uBACH,OAAQxK,KAAK+B,EAAEW,CAChB,CACI8H,qBAAiBrI,GACpBnC,KAAK+B,EAAEW,EAAIP,CACZ,CAII8G,WACH,OAAQjJ,KAAK+B,EAAEY,CAChB,CACIsG,SAAK9G,GACRnC,KAAK+B,EAAEY,GAAKR,EAC2BnC,KAAKwF,GAAG,OAAQxF,KAAK+B,EAAEY,EAC/D,CAII8H,iBACH,OAAQzK,KAAK+B,EAAEV,CAChB,CACIoJ,eAAWtI,GACdnC,KAAK+B,EAAEV,GAAI,QAAWc,GACiBnC,KAAKwF,GAAG,aAAcxF,KAAK+B,EAAEV,EACrE,CAIIqJ,oBACH,OAAQ1K,KAAK+B,EAAED,CAChB,CACI4I,kBAAcvI,GACjBnC,KAAK+B,EAAED,GAAI,QAAWK,GACiBnC,KAAKwF,GAAG,gBAAiBxF,KAAK+B,EAAED,EACxE,CAII6I,mBACH,OAAQ3K,KAAK+B,EAAE1B,CAChB,CACIsK,iBAAaxI,GAChBnC,KAAK+B,EAAE1B,GAAI,QAAW8B,GACiBnC,KAAKwF,GAAG,eAAgBxF,KAAK+B,EAAE1B,EACvE,CAIIuK,mBACH,OAAQ5K,KAAK+B,EAAEE,CAChB,CACI2I,iBAAazI,GAChBnC,KAAK+B,EAAEE,GAAI,QAAWE,GACiBnC,KAAKwF,GAAG,eAAgBxF,KAAK+B,EAAEE,EACvE,CAII4I,uBACH,OAAQ7K,KAAK+B,EAAEA,CAChB,CACI8I,qBAAiB1I,GACpBnC,KAAK+B,EAAEA,GAAI,QAAWI,GACiBnC,KAAKwF,GAAG,mBAAoBxF,KAAK+B,EAAEA,EAC3E,CAII+I,oBACH,OAAQ9K,KAAK+B,EAAER,CAChB,CACIuJ,kBAAc3I,GACjBnC,KAAK+B,EAAER,GAAI,QAAWY,GACiBnC,KAAKwF,GAAG,gBAAiBxF,KAAK+B,EAAER,EACxE,CAIIwJ,mBACH,OAAQ/K,KAAK+B,EAAEa,CAChB,CACImI,iBAAa5I,GAChBnC,KAAK+B,EAAEa,GAAKT,EAC2BnC,KAAKwF,GAAG,eAAgBxF,KAAK+B,EAAEa,EACvE,CAIIoI,eACH,OAAQhL,KAAK+B,EAAEc,CAChB,CACImI,aAAS7I,GACZnC,KAAK+B,EAAEc,GAAI,QAAWV,GACiBnC,KAAKwF,GAAG,WAAYxF,KAAK+B,EAAEc,EACnE,CAII0G,kBACH,OAAQvJ,KAAK+B,EAAEe,CAChB,CACIyG,gBAAYpH,GACfnC,KAAK+B,EAAEe,GAAI,QAAWX,GACiBnC,KAAKwF,GAAG,cAAexF,KAAK+B,EAAEe,EACtE,CAOImI,uBACH,OAAOjL,KAAK+B,EAAEJ,CACf,CACIsJ,qBAAiB9I,GACpBnC,KAAK+B,EAAEJ,GAAI,QAA6BjC,EAAwByC,GACzBnC,KAAKwF,GAAG,oBAAoB,QAA+B9F,EAAwBM,KAAK+B,EAAEJ,GAClI,CAIIuJ,aACH,OAAQlL,KAAK+B,EAAEgB,CAChB,CACImI,WAAO/I,GACVnC,KAAK+B,EAAEgB,GAAI,QAAWZ,GACiBnC,KAAKwF,GAAG,SAAUxF,KAAK+B,EAAEgB,EACjE,CAIIoI,eACH,OAAQnL,KAAK+B,EAAE7B,CAChB,CACIiL,aAAShJ,GACZnC,KAAK+B,EAAE7B,GAAI,QAAWiC,GACiBnC,KAAKwF,GAAG,WAAYxF,KAAK+B,EAAE7B,EACnE,CAIIkL,mBACH,OAAQpL,KAAK+B,EAAEiB,CAChB,CACIoI,iBAAajJ,GAChBnC,KAAK+B,EAAEiB,GAAI,QAAWb,GACiBnC,KAAKwF,GAAG,eAAgBxF,KAAK+B,EAAEiB,EACvE,CACO7C,iBAAiB+H,GACvBlI,KAAK+B,EAAE5B,iBAAiB+H,EACzB,EC7OM,MAAMmD,EACFzK,kBACHsJ,EAAwBD,WACxB,KAAcD,aAAa,0BAA2BE,GACtD,KAAcD,SAAS,cAAqBhJ,EAAa0C,MAC7D,ECLG,MAAM2H,EACF1K,kBACHuH,EAAsB8B,WACtB,KAAcD,aAAa,wBAAyB7B,GACpD,KAAc8B,SAAS,YAAmBjJ,EAAW2C,MACzD,ECLG,MAAM4H,UAAiChI,EAGpCC,uBAET,OAAO,IAAIrC,CACZ,CAIwCY,QACtC,OAAO/B,KAAKyD,eACb,CACAP,cACCC,OAED,CAEuBvC,kBAAoB,CAIvCyH,SACH,OAAQrI,KAAK+B,EAAER,CAChB,CACI8G,OAAGlG,GACNnC,KAAK+B,EAAER,EAAIY,CACZ,CAIImG,WACH,OAAOtI,KAAK+B,EAAEjC,CACf,CACIwI,SAAKnG,GACRnC,KAAK+B,EAAEjC,GAAI,QAAgCR,EAA2B6C,GAC/BnC,KAAKwF,GAAG,QAAQ,QAAkClG,EAA2BU,KAAK+B,EAAEjC,GAC5H,CAII+J,eACoC,MAAM/G,EAAI9C,KAAK+B,EAAEJ,EACjB,GAAS,MAALmB,EACA,OAAO,KAGX,IAAMA,EAAUiC,eAAgB,CAC5B,IAAIjF,EAAIqI,EAAsBJ,oBAAoBjF,GAC9ChD,IACCA,EAAU2D,gBAAkBX,GAEhCA,EAAUiC,eAAiBjF,C,CAEvE,OAAQgD,EAAUiC,cACnB,CACI8E,aAAS1H,GACoC,MAALA,GAAanC,KAAKwE,mBAAsBrC,EAAUwC,UAAWxC,EAAUwC,SAAS3E,KAAKwE,kBAAmBxE,KAAMA,MAE7IA,KAAK+B,EAAEJ,EAAd,MAALQ,EAAuB,KAAkBA,EAAEJ,CAC5C,CAIIkH,WACH,OAAQjJ,KAAK+B,EAAEA,CAChB,CACIkH,SAAK9G,GACRnC,KAAK+B,EAAEA,GAAKI,EAC2BnC,KAAKwF,GAAG,OAAQxF,KAAK+B,EAAEA,EAC/D,CAEW8D,WAAWhC,GAGlB,OADiBV,MAAM0C,WAAWhC,KAMlC7D,KAAK6J,UAAa7J,KAAK6J,SAAiBhG,MAAS7D,KAAK6J,SAAiBhG,MAAQA,EAAe7D,KAAK6J,SAExF,KACX,CAEclF,SAASyB,EAAgBC,EAAgBC,GAC/CnD,MAAMwB,SAASyB,EAAWC,EAAWC,GAErCtG,KAAK0E,YAAa,EACd1E,KAAK6J,UAAa7J,KAAK6J,SAAiBlF,UACnD3E,KAAK6J,SAAiBlF,SAASyB,EAAWC,EAAWrG,MAG9CA,KAAK0E,YAAa,CACtB,CACDvE,iBAAiB+H,GACvBlI,KAAK+B,EAAE5B,iBAAiB+H,EACzB,ECjGM,MAAMsD,EACF5K,kBACH2K,EAAyBtB,WACzB,KAAcD,aAAa,2BAA4BuB,GACvD,KAActB,SAAS,eAAsB9I,EAAcwC,MAC/D,ECTG,MAAM8H,UAAiCtE,EAAA,EAC1CjE,YAAYkE,GAKR,GAJAjE,QACM+G,EAAgCvG,QACjCuG,EAAgCvG,OAAQ,QAASuG,EAAyB,4BAE3E9C,EACA,IAAK,IAAIrF,EAAI,EAAGA,EAAIqF,EAAK9B,OAAQvD,IAC7B/B,KAAKmG,IAAIiB,EAAKrF,GAG1B,CAEUsF,mBACA6C,EAAgCvG,QACjCuG,EAAgCvG,OAAQ,QAASuG,EAAyB,4BAE/E,IAAI5C,EAAO,IAAIC,EAAA,EAA+E2C,EAAgCvG,MAAQ1C,EAA6B0C,MAAO,GA6B1K,OA5BA2D,EAAKE,QAAU,CAACC,EAAKC,KACjB,IAAIC,EAAYF,EAIhB,OAHIE,EAAKlE,kBACLkE,EAAOA,EAAKlE,iBAEZkE,EAAKC,OACED,EAAKC,OAAOF,GAEhBC,IAASD,CAAG,EAEvBJ,EAAKO,SAAYJ,GACLA,EAAYhE,gBAExB6D,EAAKQ,WAAcJ,IACf,IAAID,EAAOC,EAAY3C,eAYvB,OAXK0C,IACDA,EAAMyC,EAAwBnC,oBAAoBL,GAE9CD,KACKC,EAAI/D,OAAU8D,EAAYhE,gBAAgBtD,iBAC1CsH,EAAYhE,gBAAgBtD,iBAAiBuH,GAE7CD,EAAYhE,gBAAkBiE,IAIpCD,CAAG,EAEPH,CACX,ECxCG,MAAMoE,UAAiCnI,EAGpCC,uBAET,OAAO,IAAItC,CACZ,CAIwCa,QACtC,OAAO/B,KAAKyD,eACb,CACAP,cACCC,QAwBO,KAAAiF,OAAmC,IAtB3C,CAEuBxH,kBAAoB,CAIvCyH,SACH,OAAQrI,KAAK+B,EAAE7B,CAChB,CACImI,OAAGlG,GACNnC,KAAK+B,EAAE7B,EAAIiC,CACZ,CAIImG,WACH,OAAOtI,KAAK+B,EAAEJ,CACf,CACI2G,SAAKnG,GACRnC,KAAK+B,EAAEJ,GAAI,QAAgCrC,EAA2B6C,GAC/BnC,KAAKwF,GAAG,QAAQ,QAAkClG,EAA2BU,KAAK+B,EAAEJ,GAC5H,CAMI6G,YACoC,GAAoB,OAAhBxI,KAAKoI,OAAiB,CACtB,IAAId,EAAO,IAAImE,EACXhD,EAAYzI,KAAK+B,EAAEjC,EAC5D2I,IACsCA,EAAY,IAAIvG,GAEjBlC,KAAKoI,OAAUd,EAAaoB,WAAWD,E,CAGlF,OAAOzI,KAAKoI,MACb,CACII,UAAMrG,GACkD,OAAhBnC,KAAKoI,SACJpI,KAAKoI,OAAeO,eAAe,MACpC3I,KAAKoI,OAAS,MAElB,IAAId,EAAO,IAAImE,EACfzL,KAAKoI,OAAUd,EAAasB,WAAWzG,GACvC,IAAI0G,EAAW,IAAIC,EAAA,EAA6C7H,EAAoB0C,OAChF8E,EAAYzI,KAAK+B,EAAEjC,EACzD2I,IACmCA,EAAY,IAAIvG,GAEhB2G,EAAiBE,OAASN,EAC3BI,EAASG,QACRhJ,KAAKoI,OAAeO,eAAeE,EAE5E,CAIII,WACH,OAAQjJ,KAAK+B,EAAER,CAChB,CACI0H,SAAK9G,GACRnC,KAAK+B,EAAER,GAAKY,EAC2BnC,KAAKwF,GAAG,OAAQxF,KAAK+B,EAAER,EAC/D,CAIIoK,oBACH,OAAQ3L,KAAK+B,EAAEE,CAChB,CACI0J,kBAAcxJ,GACjBnC,KAAK+B,EAAEE,GAAKE,EAC2BnC,KAAKwF,GAAG,gBAAiBxF,KAAK+B,EAAEE,EACxE,CAIIqH,iBACH,OAAQtJ,KAAK+B,EAAEA,CAChB,CACIuH,eAAWnH,GACdnC,KAAK+B,EAAEA,GAAI,QAAWI,GACiBnC,KAAKwF,GAAG,aAAcxF,KAAK+B,EAAEA,EACrE,CAIIwH,kBACH,OAAQvJ,KAAK+B,EAAEV,CAChB,CACIkI,gBAAYpH,GACfnC,KAAK+B,EAAEV,GAAI,QAAWc,GACiBnC,KAAKwF,GAAG,cAAexF,KAAK+B,EAAEV,EACtE,CAEWwE,WAAWhC,GAGlB,OADiBV,MAAM0C,WAAWhC,KAMpB,MAAd7D,KAAKwI,OAAiBxI,KAAKwI,MAAM3C,YAAc7F,KAAKwI,MAAM3C,WAAWhC,GAAgB7D,KAAKwI,MAAM3C,WAAWhC,GAEhG,KACX,CACG1D,iBAAiB+H,GACvBlI,KAAK+B,EAAE5B,iBAAiB+H,EACzB,EClIM,MAAM0D,EACFhL,kBACH8K,EAAyBzB,WACzB,KAAcD,aAAa,2BAA4B0B,GACvD,KAAczB,SAAS,eAAsB/I,EAAcyC,MAC/D,ECJG,MAAMkI,UAAoB,KAAjC,c,oBAES,KAAAjM,EAAoB,IAAIC,EAAA,EAIxB,KAAAO,EAAS,IAWlB,CAdeL,QACb,OAAOC,KAAKJ,CACb,CAEcK,oBACb,OAAOD,KAAKI,CACb,CACcH,kBAAcL,GAC3BI,KAAKI,EAAIR,EACTI,KAAKJ,EAAEM,EAAIF,KAAKI,CACjB,CACAD,iBAAiBP,GAChBI,KAAKC,cAAgBL,CACtB,EAfO,EAAAa,IAAW,QAASoL,EAAa,eCPlC,MAAMC,EAGHtI,uBAET,OAAO,IAAIqI,CACZ,CAKY9J,QACV,OAAO/B,KAAKyD,eACb,CACQO,0BAER,CACAd,cACAlD,KAAKyD,gBAAkBzD,KAAKwD,uBACtBxD,KAAKyD,gBAAiBsB,eAAiB/E,KAC7CA,KAAKgE,0BACgChE,KAAagF,qBACbhF,KAAagF,qBAGlD,CACUiD,uBAAuBlG,GAC7B/B,KAAKyD,gBAAkB1B,EACjB/B,KAAKyD,gBAAiBsB,eAAiB/E,KACjDA,KAAKgE,0BACgChE,KAAagF,qBACbhF,KAAagF,qBAGlD,CAEWa,WAAWhC,GAElB,OAAK7D,KAAa8F,cACVjC,GAAgC,GAAxBA,EAAKkC,QAAQ,QACb/F,KAAa8F,aAAajC,GAK/B,IACX,CACG1D,iBAAiB+H,GACvBlI,KAAK+B,EAAE5B,iBAAiB+H,EACzB,E,IC/CW6D,E,WCML,MAAMC,UAAyBC,EAAA,EAAtC,c,oBAES,KAAAlM,EAAoB,IAAIF,EAAA,EAIxB,KAAAW,EAAS,IAmBlB,CAtBeJ,QACb,OAAOJ,KAAKD,CACb,CAEcE,oBACb,OAAOD,KAAKQ,CACb,CACcP,kBAAcL,GAC3BI,KAAKQ,EAAIZ,EACTI,KAAKD,EAAEG,EAAIF,KAAKQ,CACjB,CACAL,iBAAiBP,GAChBI,KAAKC,cAAgBL,CACtB,CACIA,QAEH,OADWI,KAAKI,EAAE0B,EAAE,eAAgBlC,GAAW,IAAIiM,GAEpD,CACIjM,MAAEA,GACL,IAAIU,EAAcV,EAClBI,KAAKI,EAAEG,EAAE,cAAeD,EACzB,EAvBO,EAAAG,IAAW,QAASuL,EAAkB,mBAA0BC,EAAA,EAAajK,GCL9E,MAAMkK,EAGH1I,uBAET,OAAO,IAAIwI,CACZ,CAKYjK,QACV,OAAO/B,KAAKyD,eACb,CACQO,0BAER,CACAd,cACAlD,KAAKyD,gBAAkBzD,KAAKwD,uBACtBxD,KAAKyD,gBAAiBsB,eAAiB/E,KAC7CA,KAAKgE,0BACgChE,KAAagF,qBACbhF,KAAagF,qBAGlD,CACUiD,uBAAuBlG,GAC7B/B,KAAKyD,gBAAkB1B,EACjB/B,KAAKyD,gBAAiBsB,eAAiB/E,KACjDA,KAAKgE,0BACgChE,KAAagF,qBACbhF,KAAagF,qBAGlD,CAIImH,kBACoC,MAAMrJ,EAAI9C,KAAK+B,EAAEnC,EACjB,GAAS,MAALkD,EACA,OAAO,KAGX,IAAMA,EAAUiC,eAAgB,CAC5B,IAAIjF,EAAI,IAAIgM,EACPhJ,EAAUa,MACV7D,EAAU2D,gBAAkBX,EAExBhD,EAAEiC,EAAU5B,kBACZL,EAAEiC,EAAU5B,iBAAiB2C,GAGrCA,EAAUiC,eAAiBjF,C,CAEvE,OAAQgD,EAAUiC,cACnB,CACIoH,gBAAYhK,GACHnC,KAAK+B,EAAEnC,EAAd,MAALuC,EAAuB,KAAkBA,EAAEJ,CAC5C,CAEW8D,WAAWhC,GAElB,OAAK7D,KAAa8F,cACVjC,GAAgC,GAAxBA,EAAKkC,QAAQ,QACb/F,KAAa8F,aAAajC,GAI1C7D,KAAKmM,aAAgBnM,KAAKmM,YAAoBtI,MAAS7D,KAAKmM,YAAoBtI,MAAQA,EAAe7D,KAAKmM,YAEjG,IACX,CACGhM,iBAAiB+H,GACvBlI,KAAK+B,EAAE5B,iBAAiB+H,EACzB,EC1EM,MAAMkE,EACFxL,kBAEH,KAAcoJ,aAAa,sBAAuBkC,GAClD,KAAcjC,SAAS,mBAA0B+B,EAAkBrI,MACvE,GHRJ,SAAYoI,GACX,6BACA,yCACA,gBACA,CAJD,CAAYA,IAAAA,EAAgC,KASrC,IAAIM,GAAyC,QAAS,mCAAoC,uCIL1F,MAAMC,UAAmC,KAAhD,c,oBAES,KAAA1M,EAAoB,IAAIC,EAAA,EAIxB,KAAAO,EAAS,IAmFlB,CAtFeL,QACb,OAAOC,KAAKJ,CACb,CAEcK,oBACb,OAAOD,KAAKI,CACb,CACcH,kBAAcL,GAC3BI,KAAKI,EAAIR,EACTI,KAAKJ,EAAEM,EAAIF,KAAKI,CACjB,CACAD,iBAAiBP,GAChBI,KAAKC,cAAgBL,CACtB,CACIE,QAEH,OADWE,KAAKD,EAAEM,EAAE,QAErB,CACIP,MAAEF,GACL,IAAIU,EAAcV,EAClBI,KAAKD,EAAEQ,EAAE,QAASD,EACnB,CACIiB,QAEH,OADWvB,KAAKD,EAAEM,EAAE,MAErB,CACIkB,MAAE3B,GACL,IAAIU,EAAcV,EAClBI,KAAKD,EAAEQ,EAAE,MAAOD,EACjB,CACIwB,QAEH,OADW9B,KAAKD,EAAEM,EAAE,QAErB,CACIyB,MAAElC,GACL,IAAIU,EAAcV,EAClBI,KAAKD,EAAEQ,EAAE,QAASD,EACnB,CACIc,QAEH,OADWpB,KAAKD,EAAEM,EAAE,WAErB,CACIe,MAAExB,GACL,IAAIU,EAAcV,EAClBI,KAAKD,EAAEQ,EAAE,WAAYD,EACtB,CACIgB,QAEH,OADWtB,KAAKD,EAAEM,EAAE,WAErB,CACIiB,MAAE1B,GACL,IAAIU,EAAcV,EAClBI,KAAKD,EAAEQ,EAAE,WAAYD,EACtB,CACIyB,QAEH,OADW/B,KAAKD,EAAEM,EAAE,cAErB,CACI0B,MAAEnC,GACL,IAAIU,EAAcV,EAClBI,KAAKD,EAAEQ,EAAE,cAAeD,EACzB,CACIe,QAEH,OADWrB,KAAKD,EAAEM,EAAE,WAErB,CACIgB,MAAEzB,GACL,IAAIU,EAAcV,EAClBI,KAAKD,EAAEQ,EAAE,WAAYD,EACtB,CACI2B,QAEH,OADWjC,KAAKD,EAAEM,EAAE,QAErB,CACI4B,MAAErC,GACL,IAAIU,EAAcV,EAClBI,KAAKD,EAAEQ,EAAE,QAASD,EACnB,CACIqB,QAEH,OADW3B,KAAKD,EAAEM,EAAE,YAErB,CACIsB,MAAE/B,GACL,IAAIU,EAAcV,EAClBI,KAAKD,EAAEQ,EAAE,YAAaD,EACvB,EAvFO,EAAAG,IAAW,QAAS6L,EAA4B,8BCJjD,MAAMC,EAGH/I,uBAET,OAAO,IAAI8I,CACZ,CAKYvK,QACV,OAAO/B,KAAKyD,eACb,CACQO,0BAER,CACAd,cACAlD,KAAKyD,gBAAkBzD,KAAKwD,uBACtBxD,KAAKyD,gBAAiBsB,eAAiB/E,KAC7CA,KAAKgE,0BACgChE,KAAagF,qBACbhF,KAAagF,qBAGlD,CACUiD,uBAAuBlG,GAC7B/B,KAAKyD,gBAAkB1B,EACjB/B,KAAKyD,gBAAiBsB,eAAiB/E,KACjDA,KAAKgE,0BACgChE,KAAagF,qBACbhF,KAAagF,qBAGlD,CACIwH,YACH,OAAQxM,KAAK+B,EAAEjC,CAChB,CACI0M,UAAMrK,GACTnC,KAAK+B,EAAEjC,EAAIqC,CACZ,CACIsK,UACH,OAAQzM,KAAK+B,EAAER,CAChB,CACIkL,QAAItK,GACPnC,KAAK+B,EAAER,EAAIY,CACZ,CACIuK,YACH,OAAQ1M,KAAK+B,EAAED,CAChB,CACI4K,UAAMvK,GACTnC,KAAK+B,EAAED,EAAIK,CACZ,CACIwK,eACH,OAAQ3M,KAAK+B,EAAEX,CAChB,CACIuL,aAASxK,GACZnC,KAAK+B,EAAEX,EAAIe,CACZ,CACIyK,eACH,OAAQ5M,KAAK+B,EAAET,CAChB,CACIsL,aAASzK,GACZnC,KAAK+B,EAAET,EAAIa,CACZ,CACI0K,kBACH,OAAQ7M,KAAK+B,EAAEA,CAChB,CACI8K,gBAAY1K,GACfnC,KAAK+B,EAAEA,EAAII,CACZ,CACI2K,eACH,OAAQ9M,KAAK+B,EAAEV,CAChB,CACIyL,aAAS3K,GACZnC,KAAK+B,EAAEV,EAAIc,CACZ,CACIqG,YACH,OAAQxI,KAAK+B,EAAEE,CAChB,CACIuG,UAAMrG,GACTnC,KAAK+B,EAAEE,EAAIE,CACZ,CACI4K,gBACH,OAAQ/M,KAAK+B,EAAEJ,CAChB,CACIoL,cAAU5K,GACbnC,KAAK+B,EAAEJ,EAAIQ,CACZ,CAEW0D,WAAWhC,GAElB,OAAK7D,KAAa8F,cACVjC,GAAgC,GAAxBA,EAAKkC,QAAQ,QACb/F,KAAa8F,aAAajC,GAK/B,IACX,CACG1D,iBAAiB+H,GACvBlI,KAAK+B,EAAE5B,iBAAiB+H,EACzB,ECxGD,IAAY8E,GAAZ,SAAYA,GACX,iCACA,sBACA,CAHD,CAAYA,IAAAA,EAA0B,KAQ/B,IAAIC,GAAmC,QAAS,6BAA8B,0BCJ9E,MAAMC,UAA8B,KAA3C,c,oBAEC,KAAAtN,EAAuB,IAQxB,CAPCgB,SAAShB,GACR,MAAQ,MACP,IAAIuN,EAAO,IAAID,EAEf,OADAC,EAAKvN,EAAuBA,EACrBuN,CACP,EAJM,EAKR,EARO,EAAA1M,IAAW,QAASyM,EAAuB,yBCN5C,MAAME,GAGH5J,uBAET,OAAO,IAAI0J,CACZ,CAKYnL,QACV,OAAO/B,KAAKyD,eACb,CACQO,0BAER,CACAd,cACAlD,KAAKyD,gBAAkBzD,KAAKwD,uBACtBxD,KAAKyD,gBAAiBsB,eAAiB/E,KAC7CA,KAAKgE,0BACgChE,KAAagF,qBACbhF,KAAagF,qBAGlD,CACUiD,uBAAuBlG,GAC7B/B,KAAKyD,gBAAkB1B,EACjB/B,KAAKyD,gBAAiBsB,eAAiB/E,KACjDA,KAAKgE,0BACgChE,KAAagF,qBACbhF,KAAagF,qBAGlD,CACIqI,aACoC,MAAMvK,EAAI9C,KAAK+B,EAAEnC,EACjB,GAAS,MAALkD,EACA,OAAO,KAGX,IAAMA,EAAUiC,eAAgB,CAC5B,IAAIjF,EAAI,IAAI6J,EACP7G,EAAUa,MACV7D,EAAU2D,gBAAkBX,EAExBhD,EAAEiC,EAAU5B,kBACZL,EAAEiC,EAAU5B,iBAAiB2C,GAGrCA,EAAUiC,eAAiBjF,C,CAEvE,OAAQgD,EAAUiC,cACnB,CACIsI,WAAOlL,GACEnC,KAAK+B,EAAEnC,EAAd,MAALuC,EAAuB,KAAkBA,EAAEJ,CAC5C,EC1CM,MAAMuL,WAAoBrB,EAAA,EAAjC,c,oBAEC,KAAAsB,aAAmE,KAQ3D,KAAAlM,EAAoB,IAAIxB,EAAA,EAIxB,KAAAiD,EAAS,IAwIlB,CAnJC0K,sBAC0B,MAArBxN,KAAKuN,aACRvN,KAAKiC,EAAEY,EAAE,gBAAiBjD,GAAWI,KAAKuN,aAAavN,KAAMkN,EAAsBnN,EAAEC,KAAKD,MAAK,GAE/FC,KAAKiC,EAAEE,EAAE,eAEX,CAEcF,QACb,OAAOjC,KAAKqB,CACb,CAEcpB,oBACb,OAAOD,KAAK8C,CACb,CACc7C,kBAAcL,GAC3BI,KAAK8C,EAAIlD,EACTI,KAAKqB,EAAEnB,EAAIF,KAAK8C,CACjB,CACA3C,iBAAiBP,GAChBI,KAAKC,cAAgBL,CACtB,CACIG,QAEH,OADWC,KAAKiC,EAAEH,EAAE,UAAWlC,GAAW,IAAI8J,GAE/C,CACI3J,MAAEH,GACL,IAAIU,EAAcV,EAClBI,KAAKiC,EAAE1B,EAAE,SAAUD,EACpB,CACIF,QAEH,OADWJ,KAAKiC,EAAEH,EAAE,eAAgBlC,GAAWc,EAAgB4C,iBAAiB1D,IAEjF,CACIQ,MAAER,GACL,IAAIU,EAAcV,EAClBI,KAAKiC,EAAE1B,EAAE,cAAeD,EACzB,CACIR,QAEH,OADWE,KAAKiC,EAAEH,EAAE,gBAAiBlC,GAAW,IAAID,GAErD,CACIG,MAAEF,GACL,IAAIU,EAAcV,EAClBI,KAAKiC,EAAE1B,EAAE,eAAgBD,EAC1B,CACIV,QAEH,OADWI,KAAKiC,EAAEH,EAAE,cAAelC,GAAW,IAAIqB,GAEnD,CACIrB,MAAEA,GACL,IAAIU,EAAcV,EAClBI,KAAKiC,EAAE1B,EAAE,aAAcD,EACxB,CACID,QAEH,OADWL,KAAKiC,EAAE5B,EAAE,gBAErB,CACIA,MAAET,GACL,IAAIU,EAAcV,EAClBI,KAAKiC,EAAE1B,EAAE,gBAAiBD,EAC3B,CACIJ,QAEH,OADWF,KAAKiC,EAAE5B,EAAE,wBAErB,CACIH,MAAEN,GACL,IAAIU,EAAcV,EAClBI,KAAKiC,EAAE1B,EAAE,wBAAyBD,EACnC,CACIc,QACH,IAAII,EAAOxB,KAAKiC,EAAE5B,EAAE,yBACpB,QAAuBS,IAATU,IAAuBxB,KAAayB,WAIlD,OADAD,GAAO,QAA6C6K,EAAwC,KAAS3K,aAA+C2K,EAAwCrM,KAAKiC,EAAEN,EAAoC0K,EAAwC7K,KACxQ,KAASE,aAA+C2K,EAAwC7K,EACxG,CACIJ,MAAExB,GACL,IAAIU,GAAc,QAA6C+L,EAAwCzM,GACvGU,EAAST,EAAA,EAAe+B,MAAMtB,EAAOuB,YACrC7B,KAAKiC,EAAE1B,EAAE,wBAAyBD,EACnC,CACIE,QAEH,OADWR,KAAKiC,EAAEH,EAAE,iBAAkBlC,GAAWc,EAAgB4C,iBAAiB1D,IAEnF,CACIY,MAAEZ,GACL,IAAIU,EAAcV,EAClBI,KAAKiC,EAAE1B,EAAE,gBAAiBD,EAC3B,CACIqB,QAEH,OADW3B,KAAKiC,EAAEH,EAAE,mBAAoBlC,GAAW,IAAI0M,GAExD,CACI3K,MAAE/B,GACL,IAAIU,EAAcV,EAClBI,KAAKiC,EAAE1B,EAAE,kBAAmBD,EAC7B,CACIiB,QAEH,OADWvB,KAAKiC,EAAE5B,EAAE,2BAErB,CACIkB,MAAE3B,GACL,IAAIU,EAAcV,EAClBI,KAAKiC,EAAE1B,EAAE,2BAA4BD,EACtC,CACI0C,QAEH,OADWhD,KAAKiC,EAAE5B,EAAE,4BAErB,CACI2C,MAAEpD,GACL,IAAIU,EAAcV,EAClBI,KAAKiC,EAAE1B,EAAE,4BAA6BD,EACvC,CACIwB,QAEH,OADW9B,KAAKiC,EAAE5B,EAAE,iBAErB,CACIyB,MAAElC,GACL,IAAIU,EAAcV,EAClBI,KAAKiC,EAAE1B,EAAE,iBAAkBD,EAC5B,CACIgB,QACH,IAAIE,EAAOxB,KAAKiC,EAAE5B,EAAE,mBACpB,QAAuBS,IAATU,IAAuBxB,KAAayB,WAIlD,OADAD,GAAO,QAAuCyL,EAAkC,KAASvL,aAAyCuL,EAAkCjN,KAAKiC,EAAEN,EAA8BsL,EAAkCzL,KACpO,KAASE,aAAyCuL,EAAkCzL,EAC5F,CACIF,MAAE1B,GACL,IAAIU,GAAc,QAAuC2M,EAAkCrN,GAC3FU,EAAST,EAAA,EAAe+B,MAAMtB,EAAOuB,YACrC7B,KAAKiC,EAAE1B,EAAE,kBAAmBD,EAC7B,CACIyC,QAEH,OADW/C,KAAKiC,EAAE5B,EAAE,gBAErB,CACI0C,MAAEnD,GACL,IAAIU,EAAcV,EAClBI,KAAKiC,EAAE1B,EAAE,gBAAiBD,EAC3B,CACAqC,EAAE/C,GACDI,KAAKC,cAAcwN,UAAUzN,KAAKiC,EAAEF,EAAEnC,GACvC,EApJO,GAAAa,IAAW,QAAS6M,GAAa,cAAqBrB,EAAA,EAAajK,GCDpE,MAAM0L,GAGHlK,uBAET,OAAO,IAAI8J,EACZ,CAKYvL,QACX,OAAO/B,KAAKyD,eACZ,CAGA7C,2BAA2B8C,GACvB,IAAKA,EAC2B,OAAO,KAEX,IAAKA,EAASC,MACV,OAAO,KAEX,IACIC,EAAe,MADRF,EAASC,MAAME,KACQ,YAClC,OAAK,KAAcC,aAAaF,GAGzB,KAAcG,OAAOH,GAFjB,IAGf,CACpBI,0BAER,CACAd,cAaQ,KAAAe,oBAA8B,EACI,KAAAC,WAAqB,EAEvB,KAAAC,qBAAkE,GAqClF,KAAAC,wBAAkC,EAgQhD,KAAAC,IAAc,KACd,KAAAC,eAA8B,IAAIC,IAUlC,KAAAC,kBAAyB,KACzB,KAAAC,eAAsB,KACtB,KAAAC,YAAsB,EA4EpB,KAAAiJ,cAAmF,KACnF,KAAAC,sBAA6B,KA7YA5N,KAAa2E,UACd,KAAYC,sBAAsBC,OAAOC,eAAe9E,OAE/FA,KAAKyD,gBAAkBzD,KAAKwD,uBACtBxD,KAAKyD,gBAAiBsB,eAAiB/E,KAC7CA,KAAKgE,0BAC+BhE,KAAagF,qBACbhF,KAAagF,qBAGlD,CAK0CC,qBAAqBC,EAAkBC,GAC5CnF,KAAKmE,qBAAqBiB,KAAK,CAAEF,SAAUA,EAAUC,UAAWA,GACrE,CAEUE,yBACNrF,KAAKiE,oBAAqB,EAC1B,IAAK,IAAIlC,EAAI,EAAGA,EAAI/B,KAAKmE,qBAAqBmB,OAAQvD,IAClD/B,KAAKuF,aACDvF,KAAKmE,qBAAqBpC,GAAGmD,SAC7BlF,KAAKmE,qBAAqBpC,GAAGoD,WAErCnF,KAAKiE,oBAAqB,EAC1BjE,KAAKmE,qBAAqBmB,OAAS,CACvC,CACUE,GAAGN,EAAkBC,GACvBnF,KAAKoE,yBAGLe,IACAA,EAAYA,EAAUtD,YAE1B7B,KAAKiE,oBAAqB,EAC1BiB,GAAW,QAASA,GAChBlF,KAAKkE,UACLlE,KAAKuF,aAAaL,EAAUC,GAE5BnF,KAAKiF,qBAAqBC,EAAUC,GAExCnF,KAAKiE,oBAAqB,EAC1D,CAEsCsB,aAAaL,EAAkBC,GAEzC,CAIhBM,yBAAyB5B,EAAc6B,EAAkBC,GACrD,GAAI3F,KAAKiE,mBACL,OAEJ,IAAI2B,GAAU,QAAW/B,GACzB7D,KAAKoE,wBAAyB,EACxBpE,KAAM4F,GAAWD,EACvB3F,KAAKoE,wBAAyB,CAClC,CAEOxD,kBAAoB,CAIvCiN,aACoC,MAAM/K,EAAI9C,KAAK+B,EAAEhC,EACjB,GAAS,MAAL+C,EACA,OAAO,KAGX,IAAMA,EAAUiC,eAAgB,CAC5B,IAAIjF,EAAI,IAAI6J,EACP7G,EAAUa,MACV7D,EAAU2D,gBAAkBX,EAExBhD,EAAEiC,EAAU5B,kBACZL,EAAEiC,EAAU5B,iBAAiB2C,GAGrCA,EAAUiC,eAAiBjF,C,CAEvE,OAAQgD,EAAUiC,cACnB,CACI8I,WAAO1L,GACEnC,KAAK+B,EAAEhC,EAAd,MAALoC,EAAuB,KAAkBA,EAAEJ,CAC5C,CAII+L,kBACoC,MAAMhL,EAAI9C,KAAK+B,EAAE3B,EACjB,GAAS,MAAL0C,EACA,OAAO,KAGX,IAAMA,EAAUiC,eAAgB,CAC5B,IAAIjF,EAAIyD,EAA4BwE,oBAAoBjF,GACpDhD,IACCA,EAAU2D,gBAAkBX,GAEhCA,EAAUiC,eAAiBjF,C,CAEvE,OAAQgD,EAAUiC,cACnB,CACI+I,gBAAY3L,GACiC,MAALA,GAAanC,KAAKwE,mBAAsBrC,EAAUwC,UAAWxC,EAAUwC,SAAS3E,KAAKwE,kBAAmBxE,KAAMA,MAE7IA,KAAK+B,EAAE3B,EAAd,MAAL+B,EAAuB,KAAkBA,EAAEJ,CAC5C,CAIIgM,mBACoC,MAAMjL,EAAI9C,KAAK+B,EAAEjC,EACjB,GAAS,MAALgD,EACA,OAAO,KAGX,IAAMA,EAAUiC,eAAgB,CAC5B,IAAIjF,EAAI,IAAIkI,EACPlF,EAAUa,MACV7D,EAAU2D,gBAAkBX,EAExBhD,EAAEiC,EAAU5B,kBACZL,EAAEiC,EAAU5B,iBAAiB2C,GAGrCA,EAAUiC,eAAiBjF,C,CAEvE,OAAQgD,EAAUiC,cACnB,CACIgJ,iBAAa5L,GACJnC,KAAK+B,EAAEjC,EAAd,MAALqC,EAAuB,KAAkBA,EAAEJ,CAC5C,CAIIiM,iBACoC,MAAMlL,EAAI9C,KAAK+B,EAAEnC,EACjB,GAAS,MAALkD,EACA,OAAO,KAGX,IAAMA,EAAUiC,eAAgB,CAC5B,IAAIjF,EAAIoK,EAAwBnC,oBAAoBjF,GAChDhD,IACCA,EAAU2D,gBAAkBX,GAEhCA,EAAUiC,eAAiBjF,C,CAEvE,OAAQgD,EAAUiC,cACnB,CACIiJ,eAAW7L,GACkC,MAALA,GAAanC,KAAKwE,mBAAsBrC,EAAUwC,UAAWxC,EAAUwC,SAAS3E,KAAKwE,kBAAmBxE,KAAMA,MAE7IA,KAAK+B,EAAEnC,EAAd,MAALuC,EAAuB,KAAkBA,EAAEJ,CAC5C,CAII2I,oBACH,OAAQ1K,KAAK+B,EAAE1B,CAChB,CACIqK,kBAAcvI,GACjBnC,KAAK+B,EAAE1B,GAAI,QAAW8B,GACiBnC,KAAKwF,GAAG,gBAAiBxF,KAAK+B,EAAE1B,EACxE,CAII4N,4BACH,OAAQjO,KAAK+B,EAAE7B,CAChB,CACI+N,0BAAsB9L,GACzBnC,KAAK+B,EAAE7B,GAAI,QAAWiC,GACiBnC,KAAKwF,GAAG,wBAAyBxF,KAAK+B,EAAE7B,EAChF,CAIIgO,4BACH,OAAOlO,KAAK+B,EAAEX,CACf,CACI8M,0BAAsB/L,GACzBnC,KAAK+B,EAAEX,GAAI,QAA6CiL,EAAwClK,GACzDnC,KAAKwF,GAAG,yBAAyB,QAA+C6G,EAAwCrM,KAAK+B,EAAEX,GACvK,CAII+M,oBACoC,MAAMrL,EAAI9C,KAAK+B,EAAEvB,EACjB,GAAS,MAALsC,EACA,OAAO,KAGX,IAAMA,EAAUiC,eAAgB,CAC5B,IAAIjF,EAAIyD,EAA4BwE,oBAAoBjF,GACpDhD,IACCA,EAAU2D,gBAAkBX,GAEhCA,EAAUiC,eAAiBjF,C,CAEvE,OAAQgD,EAAUiC,cACnB,CACIoJ,kBAAchM,GAC+B,MAALA,GAAanC,KAAKwE,mBAAsBrC,EAAUwC,UAAWxC,EAAUwC,SAAS3E,KAAKwE,kBAAmBxE,KAAMA,MAE7IA,KAAK+B,EAAEvB,EAAd,MAAL2B,EAAuB,KAAkBA,EAAEJ,CAC5C,CAIIqM,sBACoC,MAAMtL,EAAI9C,KAAK+B,EAAEJ,EACjB,GAAS,MAALmB,EACA,OAAO,KAGX,IAAMA,EAAUiC,eAAgB,CAC5B,IAAIjF,EAAI,IAAIyM,EACPzJ,EAAUa,MACV7D,EAAU2D,gBAAkBX,EAExBhD,EAAEiC,EAAU5B,kBACZL,EAAEiC,EAAU5B,iBAAiB2C,GAGrCA,EAAUiC,eAAiBjF,C,CAEvE,OAAQgD,EAAUiC,cACnB,CACIqJ,oBAAgBjM,GACPnC,KAAK+B,EAAEJ,EAAd,MAALQ,EAAuB,KAAkBA,EAAEJ,CAC5C,CAIIsM,+BACH,OAAQrO,KAAK+B,EAAER,CAChB,CACI8M,6BAAyBlM,GAC5BnC,KAAK+B,EAAER,GAAI,QAAWY,GACiBnC,KAAKwF,GAAG,2BAA4BxF,KAAK+B,EAAER,EACnF,CAII+M,gCACH,OAAQtO,KAAK+B,EAAEiB,CAChB,CACIsL,8BAA0BnM,GAC7BnC,KAAK+B,EAAEiB,GAAI,QAAWb,GACiBnC,KAAKwF,GAAG,4BAA6BxF,KAAK+B,EAAEiB,EACpF,CAIIuL,qBACH,OAAQvO,KAAK+B,EAAED,CAChB,CACIyM,mBAAepM,GAClBnC,KAAK+B,EAAED,GAAI,QAAWK,GACiBnC,KAAKwF,GAAG,iBAAkBxF,KAAK+B,EAAED,EACzE,CAII0M,sBACH,OAAOxO,KAAK+B,EAAET,CACf,CACIkN,oBAAgBrM,GACnBnC,KAAK+B,EAAET,GAAI,QAAuC2L,EAAkC9K,GAC7CnC,KAAKwF,GAAG,mBAAmB,QAAyCyH,EAAkCjN,KAAK+B,EAAET,GACrJ,CAKImN,oBACH,OAAQzO,KAAK+B,EAAEgB,CAChB,CACI0L,kBAActM,GACjBnC,KAAK+B,EAAEgB,GAAI,QAAWZ,GACiBnC,KAAKwF,GAAG,gBAAiBxF,KAAK+B,EAAEgB,EACxE,CAEW8C,WAAWhC,GAElB,OAAK7D,KAAa8F,cACVjC,GAAgC,GAAxBA,EAAKkC,QAAQ,QACb/F,KAAa8F,aAAajC,GAI1C7D,KAAK6N,QAAW7N,KAAK6N,OAAehK,MAAS7D,KAAK6N,OAAehK,MAAQA,EAAe7D,KAAK6N,OAC7F7N,KAAK8N,aAAgB9N,KAAK8N,YAAoBjK,MAAS7D,KAAK8N,YAAoBjK,MAAQA,EAAe7D,KAAK8N,YAC5G9N,KAAK+N,cAAiB/N,KAAK+N,aAAqBlK,MAAS7D,KAAK+N,aAAqBlK,MAAQA,EAAe7D,KAAK+N,aAC/G/N,KAAKgO,YAAehO,KAAKgO,WAAmBnK,MAAS7D,KAAKgO,WAAmBnK,MAAQA,EAAe7D,KAAKgO,WACzGhO,KAAKmO,eAAkBnO,KAAKmO,cAAsBtK,MAAS7D,KAAKmO,cAAsBtK,MAAQA,EAAe7D,KAAKmO,cAClHnO,KAAKoO,iBAAoBpO,KAAKoO,gBAAwBvK,MAAS7D,KAAKoO,gBAAwBvK,MAAQA,EAAe7D,KAAKoO,gBAE7G,IACX,CAIUpI,oBACV,OAAOhG,KAAKsE,cAChB,CACU2B,IAAIC,GACLlG,KAAK0E,YACN1E,KAAKsE,eAAe6B,IAAID,EAEhC,CAKUvB,SAASyB,EAAgBC,EAAgBC,GAC3C,GAAItG,KAAK0E,WACL,OAEJ1E,KAAK0E,YAAa,EAClB1E,KAAKwE,kBAAoB4B,EACzBpG,KAAKyE,eAAiB4B,EAEtB,IAAIE,EAAgB,GAChBC,EAAYxG,KAAK+B,EAAU4B,MAAME,KACL,IAA5B2C,EAAST,QAAQ,SACjBS,EAAWA,EAASC,UAAU,IAElCF,GAAgB,QAAS,wBAEhC,IAAIG,EAAqB,GAErBC,GAAS,QAASH,GACtBE,EAAmBtB,KAAKuB,EAAS,KAE1B,IAAI5G,EAAKC,KAAK+B,EAAU4B,MAAMiD,SAC9B,KAAO7G,GAAe,UAAVA,EAAE8D,MACA,QAAV9D,EAAE8D,MACQ,WAAV9D,EAAE8D,MACQ,oBAAV9D,EAAE8G,MACQ,oBAAV9G,EAAE8G,MAA4B,CAC9BL,EAAWzG,EAAE8D,KACmB,IAA5B2C,EAAST,QAAQ,SACjBS,EAAWA,EAASC,UAAU,IAElC,IAAIK,GAAa,QAASN,GAC1BE,EAAmBtB,KAAK0B,EAAa,KACrC/G,EAAIA,EAAE6G,Q,CAGjB,GAAIN,EAAQ,CACX,IAAIS,EAAkBT,EAAOvE,EAAU4B,MAAME,KACG,IAAlCkD,EAAehB,QAAQ,SACvBgB,EAAiBA,EAAeN,UAAU,IAE9C,IAAIO,GAAe,QAASD,GAEtCL,EAAmBtB,KAAK4B,EAAe,IAAMT,EAAgB,KAC7DG,EAAmBtB,KAAK4B,EAAe,IAAML,EAAS,I,EAGvD,QAA4BP,EAAWpG,KAAMuG,EAAgB,IAAKvG,KAAKgG,eAAe,EAAOU,GAElF1G,KAAK8N,aAAgB9N,KAAK8N,YAAoBnJ,UACrD3E,KAAK8N,YAAoBnJ,SAASyB,EAAWC,EAAWrG,MAEzDA,KAAKgO,YAAehO,KAAKgO,WAAmBrJ,UAC3C3E,KAAKgO,WAAmBrJ,SAASyB,EAAWC,EAAWrG,MAExDA,KAAKmO,eAAkBnO,KAAKmO,cAAsBxJ,UACjD3E,KAAKmO,cAAsBxJ,SAASyB,EAAWC,EAAWrG,MAIlDA,KAAaiH,eACbjH,KAAaiH,cAAcb,EAAWC,EAAWC,GAEtDtG,KAAK0E,YAAa,CAC1B,CACOvE,iBAAiB+H,GACvBlI,KAAK+B,EAAE5B,iBAAiB+H,EACzB,CAKOuF,UAAUtD,GAChBnK,KAAK+B,EAAEY,EAAEwH,EACV,CAKWoD,mBACX,OAAOvN,KAAK2N,aACZ,CACeJ,iBAAamB,GACe,OAA/B1O,KAAK4N,wBACL5N,KAAK+B,EAAEwL,cAAe,QAAevN,KAAK+B,EAAEwL,aAAcvN,KAAK4N,uBAC/D5N,KAAK4N,sBAAwB,KAC7B5N,KAAK2N,cAAgB,MAGzB3N,KAAK2N,cAAgBe,EACrB1O,KAAK4N,sBAAwB,CAAC1N,EAAGJ,KAErB,IAAI6O,EAAY,IAAIvB,GAClCuB,EAAW1G,uBAAuBnI,GACfE,KAAa4O,oBACb5O,KAAa4O,mBAAmB5O,KAAM2O,GAEvC3O,KAAK2N,eACzB3N,KAAK2N,cAAc3N,KAAM2O,E,EAIrB3O,KAAK+B,EAAEwL,cAAe,QAAgBvN,KAAK+B,EAAEwL,aAAcvN,KAAK4N,uBAC5D5N,KAAK+B,EAAEyL,qBACPxN,KAAK+B,EAAEyL,qBAGf,ECndE,MAAMqB,GACFjO,kBACKmJ,EAA2BE,WACnCoB,EAAqBpB,WACrBqB,EAAmBrB,WACnBuB,EAAsBvB,WACtB2B,EAAsB3B,WACtBmC,EAA0BnC,WAC1ByD,GAAwBzD,WACxB,KAAcD,aAAa,0BAA2B0D,IAAiC,KAAc1D,aAAa,0BAA2B0D,GAEjJ,E","sources":["webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DockManagerPaneType.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/SplitPaneOrientation.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/UnpinnedLocation.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DockManagerPoint.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DockManagerPane_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-dock-manager-pane-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-dock-manager-pane-collection.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-dock-manager-point.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-split-pane-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-split-pane-collection.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/SplitPaneCollection.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DockManagerLayout.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-dock-manager-layout.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-dock-manager-layout-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-content-pane-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-content-pane-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-split-pane-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-document-host-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-document-host-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-content-pane-collection.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-tab-group-pane-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-tab-group-pane-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DragService.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-drag-service.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DockManagerShowHeaderIconOnHover.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/TabHeaderElement.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-tab-header-element.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-tab-header-element-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DockManagerResourceStrings.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-dock-manager-resource-strings.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DockManagerShowPaneHeaders.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/LayoutChangeEventArgs.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-layout-change-event-args.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DockManager.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-dock-manager-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-dock-manager-module.ts"],"sourcesContent":["/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\nexport enum DockManagerPaneType {\r\n\tSplitPane = 0,\r\n\tContentPane = 1,\r\n\tTabGroupPane = 2,\r\n\tDocumentHost = 3\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let DockManagerPaneType_$type = markEnum('DockManagerPaneType', 'SplitPane,0|ContentPane,1|TabGroupPane,2|DocumentHost,3');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\nexport enum SplitPaneOrientation {\r\n\tHorizontal = 0,\r\n\tVertical = 1\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let SplitPaneOrientation_$type = markEnum('SplitPaneOrientation', 'Horizontal:horizontal,0|Vertical:vertical,1');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\nexport enum UnpinnedLocation {\r\n\tTop = 0,\r\n\tBottom = 1,\r\n\tLeft = 2,\r\n\tRight = 3\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let UnpinnedLocation_$type = markEnum('UnpinnedLocation', 'Top:top,0|Bottom:bottom,1|Left:left,2|Right:right,3');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, markType } from \"igniteui-core/type\";\r\nimport { WCNativeHelper } from \"./WCNativeHelper\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class DockManagerPoint extends Base {\r\n\tstatic $t: Type = markType(DockManagerPoint, 'DockManagerPoint');\r\n\tprivate a: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get b(): WCNativeHelper {\r\n\t\treturn this.a;\r\n\t}\r\n\tprivate e: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.e;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.e = a;\r\n\t\tthis.a.o = this.e;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget c(): number {\r\n\t\tlet ret_ = this.b.n(\"x\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset c(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.w(\"x\", value_);\r\n\t}\r\n\tget d(): number {\r\n\t\tlet ret_ = this.b.n(\"y\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset d(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.w(\"y\", value_);\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, markType, enumGetBox, EnumUtil } from \"igniteui-core/type\";\r\nimport { WCNativeHelper } from \"./WCNativeHelper\";\r\nimport { DockManagerPaneType, DockManagerPaneType_$type } from \"./DockManagerPaneType\";\r\nimport { UnpinnedLocation, UnpinnedLocation_$type } from \"./UnpinnedLocation\";\r\nimport { ObservableCollection$1 } from \"igniteui-core/ObservableCollection$1\";\r\nimport { SplitPaneOrientation, SplitPaneOrientation_$type } from \"./SplitPaneOrientation\";\r\nimport { DockManagerPoint } from \"./DockManagerPoint\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class DockManagerPane extends Base {\r\n\tstatic $t: Type = markType(DockManagerPane, 'DockManagerPane');\r\n\tprivate ___mustPassByValue: boolean = true;\r\n\tprotected abstract b(): WCNativeHelper;\r\n\tget d(): string {\r\n\t\tlet ret_ = this.b().n(\"name\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset d(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b().w(\"name\", value_);\r\n\t}\r\n\tstatic createFromNative(native_: any): DockManagerPane {\r\n\t\tif (native_ == null) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet a: string = <string>(native_.type);\r\n\t\tif (a == null || a == undefined) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tswitch (a.toLowerCase()) {\r\n\t\t\tcase \"splitpane\":\r\n\t\t\t{\r\n\t\t\t\tlet b = new SplitPane();\r\n\t\t\t\tb.setNativeElement(native_);\r\n\t\t\t\treturn b;\r\n\t\t\t}\r\n\r\n\t\t\tcase \"contentpane\":\r\n\t\t\t{\r\n\t\t\t\tlet c = new ContentPane();\r\n\t\t\t\tc.setNativeElement(native_);\r\n\t\t\t\treturn c;\r\n\t\t\t}\r\n\r\n\t\t\tcase \"tabgrouppane\":\r\n\t\t\t{\r\n\t\t\t\tlet d = new TabGroupPane();\r\n\t\t\t\td.setNativeElement(native_);\r\n\t\t\t\treturn d;\r\n\t\t\t}\r\n\r\n\t\t\tcase \"documenthost\":\r\n\t\t\t{\r\n\t\t\t\tlet e = new DocumentHost();\r\n\t\t\t\te.setNativeElement(native_);\r\n\t\t\t\treturn e;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class DocumentHost extends DockManagerPane {\r\n\tstatic $t: Type = markType(DocumentHost, 'DocumentHost', (<any>DockManagerPane).$);\r\n\tprivate g: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get h(): WCNativeHelper {\r\n\t\treturn this.g;\r\n\t}\r\n\tprivate j: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.j;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.j = a;\r\n\t\tthis.g.o = this.j;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget l(): string {\r\n\t\tlet ret_ = this.h.n(\"id\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset l(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"id\", value_);\r\n\t}\r\n\tget e(): DockManagerPaneType {\r\n\t\tlet ret_ = this.h.n(\"type\");\r\n\t\tif (<boolean>(ret_ === undefined && (this as any).___rawMode)) {\r\n\t\t\treturn <DockManagerPaneType>(undefined as any);\r\n\t\t}\r\n\t\tret_ = enumGetBox<DockManagerPaneType>(DockManagerPaneType_$type, EnumUtil.getEnumValue<DockManagerPaneType>(DockManagerPaneType_$type, this.h.f<DockManagerPaneType>(DockManagerPaneType_$type, ret_)));\r\n\t\treturn EnumUtil.getEnumValue<DockManagerPaneType>(DockManagerPaneType_$type, ret_);\r\n\t}\r\n\tset e(a: DockManagerPaneType) {\r\n\t\tlet value_ = <any>enumGetBox<DockManagerPaneType>(DockManagerPaneType_$type, a);\r\n\t\tvalue_ = WCNativeHelper.camel(value_.toString());\r\n\t\tthis.h.w(\"type\", value_);\r\n\t}\r\n\tget f(): SplitPane {\r\n\t\tlet ret_ = this.h.m(\"rootPane\", (a: any) => new SplitPane());\r\n\t\treturn <SplitPane>ret_;\r\n\t}\r\n\tset f(a: SplitPane) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"rootPane\", value_);\r\n\t}\r\n\tget i(): number {\r\n\t\tlet ret_ = this.h.n(\"size\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset i(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"size\", value_);\r\n\t}\r\n\tprotected b(): WCNativeHelper {\r\n\t\treturn this.h;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TabGroupPane extends DockManagerPane {\r\n\tstatic $t: Type = markType(TabGroupPane, 'TabGroupPane', (<any>DockManagerPane).$);\r\n\tprivate g: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get h(): WCNativeHelper {\r\n\t\treturn this.g;\r\n\t}\r\n\tprivate m: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.m;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.m = a;\r\n\t\tthis.g.o = this.m;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget o(): string {\r\n\t\tlet ret_ = this.h.n(\"id\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset o(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"id\", value_);\r\n\t}\r\n\tget f(): DockManagerPaneType {\r\n\t\tlet ret_ = this.h.n(\"type\");\r\n\t\tif (<boolean>(ret_ === undefined && (this as any).___rawMode)) {\r\n\t\t\treturn <DockManagerPaneType>(undefined as any);\r\n\t\t}\r\n\t\tret_ = enumGetBox<DockManagerPaneType>(DockManagerPaneType_$type, EnumUtil.getEnumValue<DockManagerPaneType>(DockManagerPaneType_$type, this.h.f<DockManagerPaneType>(DockManagerPaneType_$type, ret_)));\r\n\t\treturn EnumUtil.getEnumValue<DockManagerPaneType>(DockManagerPaneType_$type, ret_);\r\n\t}\r\n\tset f(a: DockManagerPaneType) {\r\n\t\tlet value_ = <any>enumGetBox<DockManagerPaneType>(DockManagerPaneType_$type, a);\r\n\t\tvalue_ = WCNativeHelper.camel(value_.toString());\r\n\t\tthis.h.w(\"type\", value_);\r\n\t}\r\n\tget e(): ContentPaneCollection {\r\n\t\tlet ret_ = this.h.k(\"panes\", (a: any) => new ContentPaneCollection(), (a: any) => new ContentPane());\r\n\t\treturn <ContentPaneCollection>ret_;\r\n\t}\r\n\tget l(): number {\r\n\t\tlet ret_ = this.h.n(\"size\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset l(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"size\", value_);\r\n\t}\r\n\tget k(): number {\r\n\t\tlet ret_ = this.h.n(\"selectedIndex\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset k(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"selectedIndex\", value_);\r\n\t}\r\n\tget i(): boolean {\r\n\t\tlet ret_ = this.h.n(\"allowEmpty\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset i(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"allowEmpty\", value_);\r\n\t}\r\n\tget j(): boolean {\r\n\t\tlet ret_ = this.h.n(\"isMaximized\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset j(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"isMaximized\", value_);\r\n\t}\r\n\tprotected b(): WCNativeHelper {\r\n\t\treturn this.h;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ContentPane extends DockManagerPane {\r\n\tstatic $t: Type = markType(ContentPane, 'ContentPane', (<any>DockManagerPane).$);\r\n\tprotected b(): WCNativeHelper {\r\n\t\treturn this.h;\r\n\t}\r\n\tprivate g: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get h(): WCNativeHelper {\r\n\t\treturn this.g;\r\n\t}\r\n\tprivate v: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.v;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.v = a;\r\n\t\tthis.g.o = this.v;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget ab(): string {\r\n\t\tlet ret_ = this.h.n(\"id\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset ab(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"id\", value_);\r\n\t}\r\n\tget e(): DockManagerPaneType {\r\n\t\tlet ret_ = this.h.n(\"type\");\r\n\t\tif (<boolean>(ret_ === undefined && (this as any).___rawMode)) {\r\n\t\t\treturn <DockManagerPaneType>(undefined as any);\r\n\t\t}\r\n\t\tret_ = enumGetBox<DockManagerPaneType>(DockManagerPaneType_$type, EnumUtil.getEnumValue<DockManagerPaneType>(DockManagerPaneType_$type, this.h.f<DockManagerPaneType>(DockManagerPaneType_$type, ret_)));\r\n\t\treturn EnumUtil.getEnumValue<DockManagerPaneType>(DockManagerPaneType_$type, ret_);\r\n\t}\r\n\tset e(a: DockManagerPaneType) {\r\n\t\tlet value_ = <any>enumGetBox<DockManagerPaneType>(DockManagerPaneType_$type, a);\r\n\t\tvalue_ = WCNativeHelper.camel(value_.toString());\r\n\t\tthis.h.w(\"type\", value_);\r\n\t}\r\n\tget x(): string {\r\n\t\tlet ret_ = this.h.n(\"contentId\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset x(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"contentId\", value_);\r\n\t}\r\n\tget z(): string {\r\n\t\tlet ret_ = this.h.n(\"header\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset z(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"header\", value_);\r\n\t}\r\n\tget aa(): string {\r\n\t\tlet ret_ = this.h.n(\"headerId\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset aa(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"headerId\", value_);\r\n\t}\r\n\tget ac(): string {\r\n\t\tlet ret_ = this.h.n(\"tabHeaderId\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset ac(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"tabHeaderId\", value_);\r\n\t}\r\n\tget ad(): string {\r\n\t\tlet ret_ = this.h.n(\"unpinnedHeaderId\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset ad(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"unpinnedHeaderId\", value_);\r\n\t}\r\n\tget y(): string {\r\n\t\tlet ret_ = this.h.n(\"floatingHeaderId\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset y(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"floatingHeaderId\", value_);\r\n\t}\r\n\tget t(): number {\r\n\t\tlet ret_ = this.h.n(\"size\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset t(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"size\", value_);\r\n\t}\r\n\tget j(): boolean {\r\n\t\tlet ret_ = this.h.n(\"allowClose\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset j(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"allowClose\", value_);\r\n\t}\r\n\tget m(): boolean {\r\n\t\tlet ret_ = this.h.n(\"allowMaximize\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset m(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"allowMaximize\", value_);\r\n\t}\r\n\tget n(): boolean {\r\n\t\tlet ret_ = this.h.n(\"allowPinning\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset n(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"allowPinning\", value_);\r\n\t}\r\n\tget k(): boolean {\r\n\t\tlet ret_ = this.h.n(\"allowDocking\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset k(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"allowDocking\", value_);\r\n\t}\r\n\tget i(): boolean {\r\n\t\tlet ret_ = this.h.n(\"acceptsInnerDock\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset i(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"acceptsInnerDock\", value_);\r\n\t}\r\n\tget l(): boolean {\r\n\t\tlet ret_ = this.h.n(\"allowFloating\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset l(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"allowFloating\", value_);\r\n\t}\r\n\tget u(): number {\r\n\t\tlet ret_ = this.h.n(\"unpinnedSize\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset u(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"unpinnedSize\", value_);\r\n\t}\r\n\tget s(): boolean {\r\n\t\tlet ret_ = this.h.n(\"isPinned\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset s(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"isPinned\", value_);\r\n\t}\r\n\tget r(): boolean {\r\n\t\tlet ret_ = this.h.n(\"isMaximized\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset r(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"isMaximized\", value_);\r\n\t}\r\n\tget f(): UnpinnedLocation {\r\n\t\tlet ret_ = this.h.n(\"unpinnedLocation\");\r\n\t\tif (<boolean>(ret_ === undefined && (this as any).___rawMode)) {\r\n\t\t\treturn <UnpinnedLocation>(undefined as any);\r\n\t\t}\r\n\t\tret_ = enumGetBox<UnpinnedLocation>(UnpinnedLocation_$type, EnumUtil.getEnumValue<UnpinnedLocation>(UnpinnedLocation_$type, this.h.f<UnpinnedLocation>(UnpinnedLocation_$type, ret_)));\r\n\t\treturn EnumUtil.getEnumValue<UnpinnedLocation>(UnpinnedLocation_$type, ret_);\r\n\t}\r\n\tset f(a: UnpinnedLocation) {\r\n\t\tlet value_ = <any>enumGetBox<UnpinnedLocation>(UnpinnedLocation_$type, a);\r\n\t\tvalue_ = WCNativeHelper.camel(value_.toString());\r\n\t\tthis.h.w(\"unpinnedLocation\", value_);\r\n\t}\r\n\tget q(): boolean {\r\n\t\tlet ret_ = this.h.n(\"hidden\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset q(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"hidden\", value_);\r\n\t}\r\n\tget o(): boolean {\r\n\t\tlet ret_ = this.h.n(\"disabled\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset o(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"disabled\", value_);\r\n\t}\r\n\tget p(): boolean {\r\n\t\tlet ret_ = this.h.n(\"documentOnly\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset p(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"documentOnly\", value_);\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ContentPaneCollection extends ObservableCollection$1<ContentPane> {\r\n\tstatic $t: Type = markType(ContentPaneCollection, 'ContentPaneCollection', (<any>ObservableCollection$1).$.specialize((<any>ContentPane).$));\r\n\tconstructor() {\r\n\t\tsuper((<any>ContentPane).$, 0);\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class SplitPane extends DockManagerPane {\r\n\tstatic $t: Type = markType(SplitPane, 'SplitPane', (<any>DockManagerPane).$);\r\n\tprotected b(): WCNativeHelper {\r\n\t\treturn this.j;\r\n\t}\r\n\tprivate i: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get j(): WCNativeHelper {\r\n\t\treturn this.i;\r\n\t}\r\n\tprivate q: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.q;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.q = a;\r\n\t\tthis.i.o = this.q;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget s(): string {\r\n\t\tlet ret_ = this.j.n(\"id\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset s(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.w(\"id\", value_);\r\n\t}\r\n\tget f(): DockManagerPaneType {\r\n\t\tlet ret_ = this.j.n(\"type\");\r\n\t\tif (<boolean>(ret_ === undefined && (this as any).___rawMode)) {\r\n\t\t\treturn <DockManagerPaneType>(undefined as any);\r\n\t\t}\r\n\t\tret_ = enumGetBox<DockManagerPaneType>(DockManagerPaneType_$type, EnumUtil.getEnumValue<DockManagerPaneType>(DockManagerPaneType_$type, this.j.f<DockManagerPaneType>(DockManagerPaneType_$type, ret_)));\r\n\t\treturn EnumUtil.getEnumValue<DockManagerPaneType>(DockManagerPaneType_$type, ret_);\r\n\t}\r\n\tset f(a: DockManagerPaneType) {\r\n\t\tlet value_ = <any>enumGetBox<DockManagerPaneType>(DockManagerPaneType_$type, a);\r\n\t\tvalue_ = WCNativeHelper.camel(value_.toString());\r\n\t\tthis.j.w(\"type\", value_);\r\n\t}\r\n\tget h(): SplitPaneOrientation {\r\n\t\tlet ret_ = this.j.n(\"orientation\");\r\n\t\tif (<boolean>(ret_ === undefined && (this as any).___rawMode)) {\r\n\t\t\treturn <SplitPaneOrientation>(undefined as any);\r\n\t\t}\r\n\t\tret_ = enumGetBox<SplitPaneOrientation>(SplitPaneOrientation_$type, EnumUtil.getEnumValue<SplitPaneOrientation>(SplitPaneOrientation_$type, this.j.f<SplitPaneOrientation>(SplitPaneOrientation_$type, ret_)));\r\n\t\treturn EnumUtil.getEnumValue<SplitPaneOrientation>(SplitPaneOrientation_$type, ret_);\r\n\t}\r\n\tset h(a: SplitPaneOrientation) {\r\n\t\tlet value_ = <any>enumGetBox<SplitPaneOrientation>(SplitPaneOrientation_$type, a);\r\n\t\tvalue_ = WCNativeHelper.camel(value_.toString());\r\n\t\tthis.j.w(\"orientation\", value_);\r\n\t}\r\n\tget e(): DockManagerPaneCollection {\r\n\t\tlet ret_ = this.j.k(\"panes\", (a: any) => new DockManagerPaneCollection(), (a: any) => DockManagerPane.createFromNative(a));\r\n\t\treturn <DockManagerPaneCollection>ret_;\r\n\t}\r\n\tget p(): number {\r\n\t\tlet ret_ = this.j.n(\"size\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset p(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.w(\"size\", value_);\r\n\t}\r\n\tget g(): DockManagerPoint {\r\n\t\tlet ret_ = this.j.m(\"floatingLocation\", (a: any) => new DockManagerPoint());\r\n\t\treturn <DockManagerPoint>ret_;\r\n\t}\r\n\tset g(a: DockManagerPoint) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.w(\"floatingLocation\", value_);\r\n\t}\r\n\tget o(): number {\r\n\t\tlet ret_ = this.j.n(\"floatingWidth\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset o(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.w(\"floatingWidth\", value_);\r\n\t}\r\n\tget n(): number {\r\n\t\tlet ret_ = this.j.n(\"floatingHeight\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset n(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.w(\"floatingHeight\", value_);\r\n\t}\r\n\tget l(): boolean {\r\n\t\tlet ret_ = this.j.n(\"floatingResizable\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset l(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.w(\"floatingResizable\", value_);\r\n\t}\r\n\tget k(): boolean {\r\n\t\tlet ret_ = this.j.n(\"allowEmpty\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset k(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.w(\"allowEmpty\", value_);\r\n\t}\r\n\tget m(): boolean {\r\n\t\tlet ret_ = this.j.n(\"isMaximized\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset m(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.w(\"isMaximized\", value_);\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class DockManagerPaneCollection extends ObservableCollection$1<DockManagerPane> {\r\n\tstatic $t: Type = markType(DockManagerPaneCollection, 'DockManagerPaneCollection', (<any>ObservableCollection$1).$.specialize((<any>DockManagerPane).$));\r\n\tconstructor() {\r\n\t\tsuper((<any>DockManagerPane).$, 0);\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { DockManagerPane } from \"./DockManagerPane\";\r\nimport { TypeRegistrar } from \"igniteui-core/type\";\r\nimport { NamePatcher, getAllPropertyNames, fromSpinal, toSpinal, initializePropertiesFromCss } from \"igniteui-core/componentUtil\";\r\n\r\nexport abstract class IgcDockManagerPaneComponent\r\n{\r\n\r\nprotected createImplementation() : DockManagerPane\r\n{\r\n\treturn null;\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : DockManagerPane {\r\n\treturn this._implementation;\r\n\t}/**\r\n\t                             * @hidden \r\n\t                             */\r\n\tstatic _createFromInternal(internal: any) : IgcDockManagerPaneComponent {\r\n\t    if (!internal) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                if (!internal.$type) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                let name = internal.$type.name;\r\n\t                                let externalName = \"Igc\" + name + \"Component\";\r\n\t                                if (!TypeRegistrar.isRegistered(externalName)) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                return TypeRegistrar.create(externalName);\r\n\t                            }\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\t                                    \r\n\t                                    if ((this as any)._styling) {\r\n\t                                        NamePatcher.ensureStylablePatched(Object.getPrototypeOf(this));\r\n\t                                    }\r\n\t\tthis._implementation = this.createImplementation();\r\n\t\t(<any>this._implementation).externalObject = this;\r\n\t\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tprivate _settingAttributes: boolean = false;\r\n\t                                protected _attached: boolean = false;\r\n\t                                    \r\n\t                                private _queuedSetAttributes: { attrName: string, attrValue: string }[] = [];\r\n\t                                protected _enqueueSetAttribute(attrName: string, attrValue: string) {\r\n\t                                     this._queuedSetAttributes.push({ attrName: attrName, attrValue: attrValue });\r\n\t                                }\r\n\t\r\n\t                                protected _flushQueuedAttributes() {\r\n\t                                    this._settingAttributes = true;\r\n\t                                    for (let i = 0; i < this._queuedSetAttributes.length; i++) {\r\n\t                                        this.setAttribute(\r\n\t                                            this._queuedSetAttributes[i].attrName,\r\n\t                                            this._queuedSetAttributes[i].attrValue);\r\n\t                                    }\r\n\t                                    this._settingAttributes = false;\r\n\t                                    this._queuedSetAttributes.length = 0;\r\n\t                                }\r\n\t                                protected _a(attrName: string, attrValue: any) {\r\n\t                                    if (this._updatingFromAttribute) {\r\n\treturn;\r\n\t    }\r\n\t                                    if (attrValue) {\r\n\t                                        attrValue = attrValue.toString();\r\n\t                                    }\r\n\t                                    this._settingAttributes = true;\r\n\t                                    attrName = toSpinal(attrName);\r\n\t                                    if (this._attached) {\r\n\t                                        this.setAttribute(attrName, attrValue);\r\n\t                                    } else { \r\n\t                                        this._enqueueSetAttribute(attrName, attrValue);\r\n\t                                    }\r\n\t                                    this._settingAttributes = false;\r\n\t    }\r\n\t\r\n\t                                protected setAttribute(attrName: string, attrValue: string) {\r\n\t\r\n\t                                }\r\n\t\r\n\t                \r\n\t                private _updatingFromAttribute: boolean = false;\r\n\t                attributeChangedCallback(name: string, oldValue: string, newValue: string) {\r\n\t                    if (this._settingAttributes) {\r\n\t                        return;\r\n\t                    }\r\n\t                    let setName = fromSpinal(name);\r\n\t                    this._updatingFromAttribute = true;\r\n\t                    (<any>this)[setName] = newValue;\r\n\t                    this._updatingFromAttribute = false;\r\n\t                }\r\n\tget name() : string {\r\n\t\treturn (this.i.d as string);\r\n\t}\r\n\tset name(v: string) {\r\n\t\tthis.i.d = v;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\tprotected __p: string = null;\r\n\tprotected _hasUserValues: Set<string> = new Set<string>();\r\n\tprotected get hasUserValues(): Set<string> {\r\n\t    return this._hasUserValues;\r\n\t}\r\n\tprotected __m(propertyName: string) {\r\n\t    if (!this._inStyling) {\r\n\t        this._hasUserValues.add(propertyName);\r\n\t    }\r\n\t}\r\n\t\r\n\tprotected _stylingContainer: any = null;\r\n\tprotected _stylingParent: any = null;\r\n\tprotected _inStyling: boolean = false;\r\n\tprotected _styling(container: any, component: any, parent?: any) {\r\n\t        if (this._inStyling) {\r\n\t            return;\r\n\t        }\r\n\t        this._inStyling = true;\r\n\t        this._stylingContainer = container;\r\n\t        this._stylingParent = component;\r\n\t\t\r\n\t        let genericPrefix = \"\";\r\n\t        let typeName = (this.i as any).$type.name;\r\n\t        if (typeName.indexOf(\"Xam\") === 0) {\r\n\t            typeName = typeName.substring(3);\r\n\t        }\r\n\t        genericPrefix = toSpinal(\"DockManagerPaneComponent\");\r\n\t\t\r\n\t\tlet additionalPrefixes = [];\r\n\t\t\r\n\t\tlet prefix = toSpinal(typeName);\r\n\t\tadditionalPrefixes.push(prefix + \"-\");\r\n\t\r\n\t        let b = (this.i as any).$type.baseType;\r\n\t        while (b && b.name != \"Object\" && \r\n\t            b.name != \"Base\" && \r\n\t            b.name != \"Control\" && \r\n\t            b.Name != \"DependencyObject\" &&\r\n\t            b.Name != \"FrameworkElement\") {\r\n\t            typeName = b.name;\r\n\t            if (typeName.indexOf(\"Xam\") === 0) {\r\n\t                typeName = typeName.substring(3);\r\n\t            }\r\n\t            let basePrefix = toSpinal(typeName);\r\n\t            additionalPrefixes.push(basePrefix + \"-\");\r\n\t            b = b.baseType;\r\n\t        }\r\n\t\t\r\n\t\tif (parent) {\r\n\t\t\tlet parentTypeName = (parent.i as any).$type.name;\r\n\t            if (parentTypeName.indexOf(\"Xam\") === 0) {\r\n\t                parentTypeName = parentTypeName.substring(3);\r\n\t            }\r\n\t            let parentPrefix = toSpinal(parentTypeName);\r\n\t\r\n\t\t\tadditionalPrefixes.push(parentPrefix + \"-\" + genericPrefix + \"-\");\r\n\t\t\tadditionalPrefixes.push(parentPrefix + \"-\" + prefix + \"-\");\r\n\t\t}\r\n\t\r\n\t\tinitializePropertiesFromCss(container, this, genericPrefix + \"-\", this.hasUserValues, false, additionalPrefixes);\r\n\t\r\n\t        \r\n\t\r\n\t        if ((this as any)._otherStyling) {\r\n\t            (this as any)._otherStyling(container, component, parent);\r\n\t        }\r\n\t        this._inStyling = false;\r\n\t}\r\n}\r\n","import { IgCollection } from 'igniteui-core/IgCollection';\r\nimport { markType } from 'igniteui-core/type';\r\nimport { SyncableObservableCollection$2 } from 'igniteui-core/SyncableObservableCollection$2';\r\nimport { SyncableObservableCollection$1 } from 'igniteui-core/SyncableObservableCollection$1';\r\n\r\nimport { DockManagerPane as DockManagerPane_internal } from './DockManagerPane';\r\nimport { IgcDockManagerPaneComponent as IgcDockManagerPaneComponent } from './igc-dock-manager-pane-component';\r\n\r\nexport class IgcDockManagerPaneCollection extends IgCollection<IgcDockManagerPaneComponent, DockManagerPane_internal> {\r\n    constructor(list?: IgcDockManagerPaneComponent[]) {\r\n        super();\r\n        if (!(IgcDockManagerPaneComponent as any).$type) {\r\n            (IgcDockManagerPaneComponent as any).$type = markType(IgcDockManagerPaneComponent, \"IgcDockManagerPaneComponent\");\r\n        }\r\n        if (list) {\r\n            for (let i = 0; i < list.length; i++) {\r\n                this.add(list[i]);\r\n            }\r\n        }\r\n    }\r\n    \r\n    protected _createInnerColl(): SyncableObservableCollection$2<IgcDockManagerPaneComponent, DockManagerPane_internal> {\r\n        if (!(IgcDockManagerPaneComponent as any).$type) {\r\n            (IgcDockManagerPaneComponent as any).$type = markType(IgcDockManagerPaneComponent, \"IgcDockManagerPaneComponent\");\r\n        }\r\n        let coll = new SyncableObservableCollection$2<IgcDockManagerPaneComponent, DockManagerPane_internal>((IgcDockManagerPaneComponent as any).$type, (DockManagerPane_internal as any).$type, 0);\r\n        coll.compare = (ext, int) => { \r\n            let comp: any = ext;\r\n            if (comp._implementation) {\r\n                comp = comp._implementation;\r\n            }\r\n            if (comp.equals) {\r\n                return comp.equals(int);\r\n            }\r\n            return comp === int;\r\n        };\r\n        coll.createTo = (ext) => {\r\n            return (ext as any)._implementation;\r\n        }\r\n        coll.createFrom = (int) => {\r\n            let ext = (int as any).externalObject;\r\n            if (!ext) {\r\n                ext = IgcDockManagerPaneComponent._createFromInternal(int);\r\n\r\n                if (ext) {\r\n                    if (!int.$type && (ext as any)._implementation.setNativeElement) {\r\n                        (ext as any)._implementation.setNativeElement(int);\r\n                    } else {\r\n                        (ext as any)._implementation = int;\r\n                    }\r\n                }\r\n            }\r\n            return ext;\r\n        }\r\n        return coll;\r\n    } \r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { DockManagerPoint as DockManagerPoint_internal } from \"./DockManagerPoint\";\r\n\r\nexport class IgcDockManagerPoint\r\n{\r\n\r\nprotected createImplementation() : DockManagerPoint_internal\r\n{\r\n\treturn new DockManagerPoint_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : DockManagerPoint_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tget x() : number {\r\n\t\treturn (this.i.c as number);\r\n\t}\r\n\tset x(v: number) {\r\n\t\tthis.i.c = +v;\r\n\t}\r\n\tget y() : number {\r\n\t\treturn (this.i.d as number);\r\n\t}\r\n\tset y(v: number) {\r\n\t\tthis.i.d = +v;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\t\r\n\t        return null;\r\n\t    }\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { DockManagerPaneType, DockManagerPaneType_$type } from \"./DockManagerPaneType\";\r\nimport { SplitPaneOrientation, SplitPaneOrientation_$type } from \"./SplitPaneOrientation\";\r\nimport { IgcDockManagerPaneCollection } from \"./igc-dock-manager-pane-collection\";\r\nimport { IgcDockManagerPoint } from \"./igc-dock-manager-point\";\r\nimport { IgcDockManagerPaneComponent } from \"./igc-dock-manager-pane-component\";\r\nimport { SplitPane } from \"./SplitPane\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureEnum, enumToString, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\nimport { DockManagerPaneCollection as DockManagerPaneCollection_internal } from \"./DockManagerPaneCollection\";\r\nimport { DockManagerPane } from \"./DockManagerPane\";\r\nimport { SyncableObservableCollection$1 } from \"igniteui-core/SyncableObservableCollection$1\";\r\n\r\nexport class IgcSplitPaneComponent extends IgcDockManagerPaneComponent\r\n{\r\n\r\nprotected createImplementation() : SplitPane\r\n{\r\n\treturn new SplitPane();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : SplitPane {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t                public static register() { }\r\n\t/**\r\n\t * The id of the pane. If not set the Dock Manager generates it automatically.\r\n\t*/\r\n\tget id() : string {\r\n\t\treturn (this.i.s as string);\r\n\t}\r\n\tset id(v: string) {\r\n\t\tthis.i.s = v;\r\n\t}\r\n\t/**\r\n\t * The type of the pane.\r\n\t*/\r\n\tget type() : DockManagerPaneType {\r\n\t\treturn this.i.f;\r\n\t}\r\n\tset type(v: DockManagerPaneType) {\r\n\t\tthis.i.f = ensureEnum<DockManagerPaneType>(DockManagerPaneType_$type, v);\r\n\t                                        this._a(\"Type\", enumToString<DockManagerPaneType>(DockManagerPaneType_$type, this.i.f));\r\n\t}\r\n\t/**\r\n\t * The orientation of the split pane.\r\n\t*/\r\n\tget orientation() : SplitPaneOrientation {\r\n\t\treturn this.i.h;\r\n\t}\r\n\tset orientation(v: SplitPaneOrientation) {\r\n\t\tthis.i.h = ensureEnum<SplitPaneOrientation>(SplitPaneOrientation_$type, v);\r\n\t                                        this._a(\"orientation\", enumToString<SplitPaneOrientation>(SplitPaneOrientation_$type, this.i.h));\r\n\t}\r\n\tprivate _panes: IgcDockManagerPaneCollection = null;\r\n\t                                \r\n\t/**\r\n\t * The child panes of the split pane.\r\n\t*/\r\n\tget panes() : IgcDockManagerPaneCollection {\r\n\t                                        if (this._panes === null) {\r\n\t                                            let coll = new IgcDockManagerPaneCollection();\r\n\t                                            let innerColl = this.i.e;\r\n\t\t\tif (!innerColl) {\r\n\t                                            \tinnerColl = new DockManagerPaneCollection_internal();\r\n\t\t\t}\r\n\t                                            this._panes = (coll as any)._fromInner(innerColl);\r\n\t                                            \r\n\t                                        }\r\n\t\treturn this._panes;\r\n\t}\r\n\tset panes(v: IgcDockManagerPaneCollection) {\r\n\t                                        if (this._panes !== null) {\r\n\t                                            (this._panes as any)._setSyncTarget(null);\r\n\t                                            this._panes = null;\r\n\t                                        }\r\n\t                                        let coll = new IgcDockManagerPaneCollection();\r\n\t                                        this._panes = (coll as any)._fromOuter(v);\r\n\t                                        let syncColl = new SyncableObservableCollection$1<DockManagerPane>((DockManagerPane as any).$type);\r\n\t                                        let innerColl = this.i.e;\r\n\t\tif (!innerColl) {\r\n\t                                        \tinnerColl = new DockManagerPaneCollection_internal();\r\n\t\t}\r\n\t                                        (syncColl as any)._inner = innerColl;\r\n\t                                        syncColl.clear();\r\n\t                                        (this._panes as any)._setSyncTarget(syncColl);\r\n\t                                        \r\n\t}\r\n\t/**\r\n\t * The size of the pane relative to its sibling panes' sizes. Defaults to 100.\r\n\t*/\r\n\tget size() : number {\r\n\t\treturn (this.i.p as number);\r\n\t}\r\n\tset size(v: number) {\r\n\t\tthis.i.p = +v;\r\n\t                                        this._a(\"size\", this.i.p);\r\n\t}\r\n\t/**\r\n\t * The absolute location point of the pane. Applies only for floating panes.\r\n\t*/\r\n\tget floatingLocation() : IgcDockManagerPoint {\r\n\t                                        const r = this.i.g;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = new IgcDockManagerPoint();\r\n\t                                            if ((r as any).$type) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            } else {\r\n\t                                                if ((e.i as any).setNativeElement) {\r\n\t                                                    (e.i as any).setNativeElement(r);\r\n\t                                                }\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset floatingLocation(v: IgcDockManagerPoint) {\r\n\t\tv == null ? this.i.g = null : this.i.g = v.i;\r\n\t}\r\n\t/**\r\n\t * The absolute width of the pane. Applies only for floating panes. Defaults to 100.\r\n\t*/\r\n\tget floatingWidth() : number {\r\n\t\treturn (this.i.o as number);\r\n\t}\r\n\tset floatingWidth(v: number) {\r\n\t\tthis.i.o = +v;\r\n\t                                        this._a(\"floatingWidth\", this.i.o);\r\n\t}\r\n\t/**\r\n\t * The absolute height of the pane. Applies only for floating panes. Defaults to 100.\r\n\t*/\r\n\tget floatingHeight() : number {\r\n\t\treturn (this.i.n as number);\r\n\t}\r\n\tset floatingHeight(v: number) {\r\n\t\tthis.i.n = +v;\r\n\t                                        this._a(\"floatingHeight\", this.i.n);\r\n\t}\r\n\t/**\r\n\t * Determines whether floating pane resizing is allowed. Applies only for floating panes.\r\n\t*/\r\n\tget floatingResizable() : boolean {\r\n\t\treturn (this.i.l as boolean);\r\n\t}\r\n\tset floatingResizable(v: boolean) {\r\n\t\tthis.i.l = ensureBool(v);\r\n\t                                        this._a(\"floatingResizable\", this.i.l);\r\n\t}\r\n\t/**\r\n\t * Determines whether the pane should present in the UI when empty.\r\n\t*/\r\n\tget allowEmpty() : boolean {\r\n\t\treturn (this.i.k as boolean);\r\n\t}\r\n\tset allowEmpty(v: boolean) {\r\n\t\tthis.i.k = ensureBool(v);\r\n\t                                        this._a(\"allowEmpty\", this.i.k);\r\n\t}\r\n\t/**\r\n\t * Determines whether a split pane is maximized or not. Defaults to false.\r\n\t * @deprecated Use the `isMaximized` property of TabGroupPane and/or ContentPane instead.  Having isMaximized set to true on a split pane level has no real effect as split panes serve as containers only, meaning they have no actual content to be shown maximized.\r\n\t*/\r\n\tget isMaximized() : boolean {\r\n\t\treturn (this.i.m as boolean);\r\n\t}\r\n\tset isMaximized(v: boolean) {\r\n\t\tthis.i.m = ensureBool(v);\r\n\t                                        this._a(\"isMaximized\", this.i.m);\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.panes != null && this.panes.findByName && this.panes.findByName(name)) { return this.panes.findByName(name); }\r\n\tif (this.floatingLocation && (this.floatingLocation as any).name && (this.floatingLocation as any).name == name) { return this.floatingLocation; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","import { IgCollection } from 'igniteui-core/IgCollection';\r\nimport { markType } from 'igniteui-core/type';\r\nimport { SyncableObservableCollection$2 } from 'igniteui-core/SyncableObservableCollection$2';\r\nimport { SyncableObservableCollection$1 } from 'igniteui-core/SyncableObservableCollection$1';\r\n\r\nimport { SplitPane as SplitPane_internal } from './SplitPane';\r\nimport { IgcSplitPaneComponent as IgcSplitPaneComponent } from './igc-split-pane-component';\r\n\r\nexport class IgcSplitPaneCollection extends IgCollection<IgcSplitPaneComponent, SplitPane_internal> {\r\n    constructor(list?: IgcSplitPaneComponent[]) {\r\n        super();\r\n        if (!(IgcSplitPaneComponent as any).$type) {\r\n            (IgcSplitPaneComponent as any).$type = markType(IgcSplitPaneComponent, \"IgcSplitPaneComponent\");\r\n        }\r\n        if (list) {\r\n            for (let i = 0; i < list.length; i++) {\r\n                this.add(list[i]);\r\n            }\r\n        }\r\n    }\r\n    \r\n    protected _createInnerColl(): SyncableObservableCollection$2<IgcSplitPaneComponent, SplitPane_internal> {\r\n        if (!(IgcSplitPaneComponent as any).$type) {\r\n            (IgcSplitPaneComponent as any).$type = markType(IgcSplitPaneComponent, \"IgcSplitPaneComponent\");\r\n        }\r\n        let coll = new SyncableObservableCollection$2<IgcSplitPaneComponent, SplitPane_internal>((IgcSplitPaneComponent as any).$type, (SplitPane_internal as any).$type, 0);\r\n        coll.compare = (ext, int) => { \r\n            let comp: any = ext;\r\n            if (comp._implementation) {\r\n                comp = comp._implementation;\r\n            }\r\n            if (comp.equals) {\r\n                return comp.equals(int);\r\n            }\r\n            return comp === int;\r\n        };\r\n        coll.createTo = (ext) => {\r\n            return (ext as any)._implementation;\r\n        }\r\n        coll.createFrom = (int) => {\r\n            let ext = (int as any).externalObject;\r\n            if (!ext) {\r\n                ext = IgcSplitPaneComponent._createFromInternal(int);\r\n\r\n                if (ext) {\r\n                    if (!int.$type && (ext as any)._implementation.setNativeElement) {\r\n                        (ext as any)._implementation.setNativeElement(int);\r\n                    } else {\r\n                        (ext as any)._implementation = int;\r\n                    }\r\n                }\r\n            }\r\n            return ext;\r\n        }\r\n        return coll;\r\n    } \r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { ObservableCollection$1 } from \"igniteui-core/ObservableCollection$1\";\r\nimport { SplitPane } from \"./SplitPane\";\r\nimport { Base, Type, markType } from \"igniteui-core/type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class SplitPaneCollection extends ObservableCollection$1<SplitPane> {\r\n\tstatic $t: Type = markType(SplitPaneCollection, 'SplitPaneCollection', (<any>ObservableCollection$1).$.specialize((<any>SplitPane).$));\r\n\tconstructor() {\r\n\t\tsuper((<any>SplitPane).$, 0);\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, markType } from \"igniteui-core/type\";\r\nimport { WCNativeHelper } from \"./WCNativeHelper\";\r\nimport { SplitPane } from \"./SplitPane\";\r\nimport { SplitPaneCollection } from \"./SplitPaneCollection\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class DockManagerLayout extends Base {\r\n\tstatic $t: Type = markType(DockManagerLayout, 'DockManagerLayout');\r\n\tprivate ___mustPassByValue: boolean = true;\r\n\tget h(): string {\r\n\t\tlet ret_ = this.d.n(\"name\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset h(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.d.w(\"name\", value_);\r\n\t}\r\n\tprivate c: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get d(): WCNativeHelper {\r\n\t\treturn this.c;\r\n\t}\r\n\tprivate f: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.f;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.f = a;\r\n\t\tthis.c.o = this.f;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget a(): SplitPane {\r\n\t\tlet ret_ = this.d.m(\"rootPane\", (a: any) => new SplitPane());\r\n\t\treturn <SplitPane>ret_;\r\n\t}\r\n\tset a(a: SplitPane) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.d.w(\"rootPane\", value_);\r\n\t}\r\n\tget b(): SplitPaneCollection {\r\n\t\tlet ret_ = this.d.k(\"floatingPanes\", (a: any) => new SplitPaneCollection(), (a: any) => new SplitPane());\r\n\t\treturn <SplitPaneCollection>ret_;\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcSplitPaneComponent } from \"./igc-split-pane-component\";\r\nimport { IgcSplitPaneCollection } from \"./igc-split-pane-collection\";\r\nimport { DockManagerLayout as DockManagerLayout_internal } from \"./DockManagerLayout\";\r\nimport { SplitPaneCollection as SplitPaneCollection_internal } from \"./SplitPaneCollection\";\r\nimport { SplitPane } from \"./SplitPane\";\r\nimport { SyncableObservableCollection$1 } from \"igniteui-core/SyncableObservableCollection$1\";\r\n\r\n/**\r\n * Describes a Dock Manager layout.\r\n*/\r\nexport class IgcDockManagerLayout\r\n{\r\n\r\nprotected createImplementation() : DockManagerLayout_internal\r\n{\r\n\treturn new DockManagerLayout_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : DockManagerLayout_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tget name() : string {\r\n\t\treturn (this.i.h as string);\r\n\t}\r\n\tset name(v: string) {\r\n\t\tthis.i.h = v;\r\n\t}\r\n\t/**\r\n\t * The root split pane of the layout.\r\n\t*/\r\n\tget rootPane() : IgcSplitPaneComponent {\r\n\t                                        const r = this.i.a;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcSplitPaneComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset rootPane(v: IgcSplitPaneComponent) {\r\n\t\tv == null ? this.i.a = null : this.i.a = v.i;\r\n\t}\r\n\tprivate _floatingPanes: IgcSplitPaneCollection = null;\r\n\t                                \r\n\t/**\r\n\t * The floating panes of the layout.\r\n\t*/\r\n\tget floatingPanes() : IgcSplitPaneCollection {\r\n\t                                        if (this._floatingPanes === null) {\r\n\t                                            let coll = new IgcSplitPaneCollection();\r\n\t                                            let innerColl = this.i.b;\r\n\t\t\tif (!innerColl) {\r\n\t                                            \tinnerColl = new SplitPaneCollection_internal();\r\n\t\t\t}\r\n\t                                            this._floatingPanes = (coll as any)._fromInner(innerColl);\r\n\t                                            \r\n\t                                        }\r\n\t\treturn this._floatingPanes;\r\n\t}\r\n\tset floatingPanes(v: IgcSplitPaneCollection) {\r\n\t                                        if (this._floatingPanes !== null) {\r\n\t                                            (this._floatingPanes as any)._setSyncTarget(null);\r\n\t                                            this._floatingPanes = null;\r\n\t                                        }\r\n\t                                        let coll = new IgcSplitPaneCollection();\r\n\t                                        this._floatingPanes = (coll as any)._fromOuter(v);\r\n\t                                        let syncColl = new SyncableObservableCollection$1<SplitPane>((SplitPane as any).$type);\r\n\t                                        let innerColl = this.i.b;\r\n\t\tif (!innerColl) {\r\n\t                                        \tinnerColl = new SplitPaneCollection_internal();\r\n\t\t}\r\n\t                                        (syncColl as any)._inner = innerColl;\r\n\t                                        syncColl.clear();\r\n\t                                        (this._floatingPanes as any)._setSyncTarget(syncColl);\r\n\t                                        \r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\tif (this.rootPane && (this.rootPane as any).name && (this.rootPane as any).name == name) { return this.rootPane; }\r\n\tif (this.floatingPanes != null && this.floatingPanes.findByName && this.floatingPanes.findByName(name)) { return this.floatingPanes.findByName(name); }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcDockManagerLayout } from './igc-dock-manager-layout';\r\nimport { DockManagerLayout } from './DockManagerLayout';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcDockManagerLayoutModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcDockManagerLayout\", IgcDockManagerLayout);\r\n        TypeRegistrar.register(\"DockManagerLayout\", (<any>DockManagerLayout).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { DockManagerPaneType, DockManagerPaneType_$type } from \"./DockManagerPaneType\";\r\nimport { UnpinnedLocation, UnpinnedLocation_$type } from \"./UnpinnedLocation\";\r\nimport { IgcDockManagerPaneComponent } from \"./igc-dock-manager-pane-component\";\r\nimport { ContentPane } from \"./ContentPane\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureEnum, enumToString, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\nexport class IgcContentPaneComponent extends IgcDockManagerPaneComponent\r\n{\r\n\r\nprotected createImplementation() : ContentPane\r\n{\r\n\treturn new ContentPane();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : ContentPane {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t                public static register() { }\r\n\t/**\r\n\t * The id of the pane. If not set the Dock Manager generates it automatically.\r\n\t*/\r\n\tget id() : string {\r\n\t\treturn (this.i.ab as string);\r\n\t}\r\n\tset id(v: string) {\r\n\t\tthis.i.ab = v;\r\n\t}\r\n\t/**\r\n\t * The type of the pane.\r\n\t*/\r\n\tget type() : DockManagerPaneType {\r\n\t\treturn this.i.e;\r\n\t}\r\n\tset type(v: DockManagerPaneType) {\r\n\t\tthis.i.e = ensureEnum<DockManagerPaneType>(DockManagerPaneType_$type, v);\r\n\t                                        this._a(\"Type\", enumToString<DockManagerPaneType>(DockManagerPaneType_$type, this.i.e));\r\n\t}\r\n\t/**\r\n\t * The slot attribute's value of the content element.\r\n\t*/\r\n\tget contentId() : string {\r\n\t\treturn (this.i.x as string);\r\n\t}\r\n\tset contentId(v: string) {\r\n\t\tthis.i.x = v;\r\n\t}\r\n\t/**\r\n\t * The text header of the content pane. Even if header slot templates are used, the text header is used for aria label.\r\n\t*/\r\n\tget header() : string {\r\n\t\treturn (this.i.z as string);\r\n\t}\r\n\tset header(v: string) {\r\n\t\tthis.i.z = v;\r\n\t}\r\n\t/**\r\n\t * The slot attribute's value of the content pane header element. If not set, the `header` property value is used.\r\n\t*/\r\n\tget headerId() : string {\r\n\t\treturn (this.i.aa as string);\r\n\t}\r\n\tset headerId(v: string) {\r\n\t\tthis.i.aa = v;\r\n\t}\r\n\t/**\r\n\t * The slot attribute's value of the tab header element. If not set, the `header` property value is used.\r\n\t*/\r\n\tget tabHeaderId() : string {\r\n\t\treturn (this.i.ac as string);\r\n\t}\r\n\tset tabHeaderId(v: string) {\r\n\t\tthis.i.ac = v;\r\n\t}\r\n\t/**\r\n\t * The slot attribute's value of the unpinned header element. If not set, the `header` property value is used.\r\n\t*/\r\n\tget unpinnedHeaderId() : string {\r\n\t\treturn (this.i.ad as string);\r\n\t}\r\n\tset unpinnedHeaderId(v: string) {\r\n\t\tthis.i.ad = v;\r\n\t}\r\n\t/**\r\n\t * The slot attribute's value of the floating header element. If not set, the `headerId` property value is used.\r\n\t*/\r\n\tget floatingHeaderId() : string {\r\n\t\treturn (this.i.y as string);\r\n\t}\r\n\tset floatingHeaderId(v: string) {\r\n\t\tthis.i.y = v;\r\n\t}\r\n\t/**\r\n\t * The size of the pane relative to its sibling panes' sizes. Defaults to 100.\r\n\t*/\r\n\tget size() : number {\r\n\t\treturn (this.i.t as number);\r\n\t}\r\n\tset size(v: number) {\r\n\t\tthis.i.t = +v;\r\n\t                                        this._a(\"size\", this.i.t);\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user is allowed to close the pane. Defaults to true.\r\n\t*/\r\n\tget allowClose() : boolean {\r\n\t\treturn (this.i.j as boolean);\r\n\t}\r\n\tset allowClose(v: boolean) {\r\n\t\tthis.i.j = ensureBool(v);\r\n\t                                        this._a(\"allowClose\", this.i.j);\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user is allowed to maximize the pane.\r\n\t*/\r\n\tget allowMaximize() : boolean {\r\n\t\treturn (this.i.m as boolean);\r\n\t}\r\n\tset allowMaximize(v: boolean) {\r\n\t\tthis.i.m = ensureBool(v);\r\n\t                                        this._a(\"allowMaximize\", this.i.m);\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user is allowed to pin/unpin the pane. Defaults to true.\r\n\t*/\r\n\tget allowPinning() : boolean {\r\n\t\treturn (this.i.n as boolean);\r\n\t}\r\n\tset allowPinning(v: boolean) {\r\n\t\tthis.i.n = ensureBool(v);\r\n\t                                        this._a(\"allowPinning\", this.i.n);\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user is allowed to dock the pane. Defaults to true.\r\n\t*/\r\n\tget allowDocking() : boolean {\r\n\t\treturn (this.i.k as boolean);\r\n\t}\r\n\tset allowDocking(v: boolean) {\r\n\t\tthis.i.k = ensureBool(v);\r\n\t                                        this._a(\"allowDocking\", this.i.k);\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user can inner dock another pane in this one. Defaults to true.\r\n\t*/\r\n\tget acceptsInnerDock() : boolean {\r\n\t\treturn (this.i.i as boolean);\r\n\t}\r\n\tset acceptsInnerDock(v: boolean) {\r\n\t\tthis.i.i = ensureBool(v);\r\n\t                                        this._a(\"acceptsInnerDock\", this.i.i);\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user is allowed to make the pane floating. Defaults to true.\r\n\t*/\r\n\tget allowFloating() : boolean {\r\n\t\treturn (this.i.l as boolean);\r\n\t}\r\n\tset allowFloating(v: boolean) {\r\n\t\tthis.i.l = ensureBool(v);\r\n\t                                        this._a(\"allowFloating\", this.i.l);\r\n\t}\r\n\t/**\r\n\t * The absolute size of the pane in an unpinned state. Defaults to 200.\r\n\t*/\r\n\tget unpinnedSize() : number {\r\n\t\treturn (this.i.u as number);\r\n\t}\r\n\tset unpinnedSize(v: number) {\r\n\t\tthis.i.u = +v;\r\n\t                                        this._a(\"unpinnedSize\", this.i.u);\r\n\t}\r\n\t/**\r\n\t * Determines whether a content pane is pinned or not. Defaults to true.\r\n\t*/\r\n\tget isPinned() : boolean {\r\n\t\treturn (this.i.s as boolean);\r\n\t}\r\n\tset isPinned(v: boolean) {\r\n\t\tthis.i.s = ensureBool(v);\r\n\t                                        this._a(\"isPinned\", this.i.s);\r\n\t}\r\n\t/**\r\n\t * Determines whether a content pane is maximized or not. Defaults to false.\r\n\t*/\r\n\tget isMaximized() : boolean {\r\n\t\treturn (this.i.r as boolean);\r\n\t}\r\n\tset isMaximized(v: boolean) {\r\n\t\tthis.i.r = ensureBool(v);\r\n\t                                        this._a(\"isMaximized\", this.i.r);\r\n\t}\r\n\t/**\r\n\t * The desired unpinned location of the content pane.\r\n\t * If not set the Dock Manager automatically calculates it based on the location of the pane relatively to the document host.\r\n\t * If more than one document host is presented, the closest one in the pane hierarchy will be used for the calculation.\r\n\t * If there is no document host, the default location is left.\r\n\t*/\r\n\tget unpinnedLocation() : UnpinnedLocation {\r\n\t\treturn this.i.f;\r\n\t}\r\n\tset unpinnedLocation(v: UnpinnedLocation) {\r\n\t\tthis.i.f = ensureEnum<UnpinnedLocation>(UnpinnedLocation_$type, v);\r\n\t                                        this._a(\"unpinnedLocation\", enumToString<UnpinnedLocation>(UnpinnedLocation_$type, this.i.f));\r\n\t}\r\n\t/**\r\n\t * Determines whether a pane is hidden in the UI. Defaults to false.\r\n\t*/\r\n\tget hidden() : boolean {\r\n\t\treturn (this.i.q as boolean);\r\n\t}\r\n\tset hidden(v: boolean) {\r\n\t\tthis.i.q = ensureBool(v);\r\n\t                                        this._a(\"hidden\", this.i.q);\r\n\t}\r\n\t/**\r\n\t * Determines whether a pane is disabled. Defaults to false.\r\n\t*/\r\n\tget disabled() : boolean {\r\n\t\treturn (this.i.o as boolean);\r\n\t}\r\n\tset disabled(v: boolean) {\r\n\t\tthis.i.o = ensureBool(v);\r\n\t                                        this._a(\"disabled\", this.i.o);\r\n\t}\r\n\t/**\r\n\t * Marks that a content pane can be docked only inside a document host.\r\n\t*/\r\n\tget documentOnly() : boolean {\r\n\t\treturn (this.i.p as boolean);\r\n\t}\r\n\tset documentOnly(v: boolean) {\r\n\t\tthis.i.p = ensureBool(v);\r\n\t                                        this._a(\"documentOnly\", this.i.p);\r\n\t}\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcContentPaneComponent } from './igc-content-pane-component';\r\nimport { ContentPane } from './ContentPane';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcContentPaneModule {\r\n    public static register(): void {\r\n        IgcContentPaneComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcContentPaneComponent\", IgcContentPaneComponent);\r\n        TypeRegistrar.register(\"ContentPane\", (<any>ContentPane).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcSplitPaneComponent } from './igc-split-pane-component';\r\nimport { SplitPane } from './SplitPane';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcSplitPaneModule {\r\n    public static register(): void {\r\n        IgcSplitPaneComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcSplitPaneComponent\", IgcSplitPaneComponent);\r\n        TypeRegistrar.register(\"SplitPane\", (<any>SplitPane).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { DockManagerPaneType, DockManagerPaneType_$type } from \"./DockManagerPaneType\";\r\nimport { IgcSplitPaneComponent } from \"./igc-split-pane-component\";\r\nimport { IgcDockManagerPaneComponent } from \"./igc-dock-manager-pane-component\";\r\nimport { DocumentHost } from \"./DocumentHost\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureEnum, enumToString } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\nexport class IgcDocumentHostComponent extends IgcDockManagerPaneComponent\r\n{\r\n\r\nprotected createImplementation() : DocumentHost\r\n{\r\n\treturn new DocumentHost();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : DocumentHost {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t                public static register() { }\r\n\t/**\r\n\t * The id of the pane. If not set the Dock Manager generates it automatically.\r\n\t*/\r\n\tget id() : string {\r\n\t\treturn (this.i.l as string);\r\n\t}\r\n\tset id(v: string) {\r\n\t\tthis.i.l = v;\r\n\t}\r\n\t/**\r\n\t * The type of the pane.\r\n\t*/\r\n\tget type() : DockManagerPaneType {\r\n\t\treturn this.i.e;\r\n\t}\r\n\tset type(v: DockManagerPaneType) {\r\n\t\tthis.i.e = ensureEnum<DockManagerPaneType>(DockManagerPaneType_$type, v);\r\n\t                                        this._a(\"Type\", enumToString<DockManagerPaneType>(DockManagerPaneType_$type, this.i.e));\r\n\t}\r\n\t/**\r\n\t * The root split pane of the document host.\r\n\t*/\r\n\tget rootPane() : IgcSplitPaneComponent {\r\n\t                                        const r = this.i.f;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcSplitPaneComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset rootPane(v: IgcSplitPaneComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.f = null : this.i.f = v.i;\r\n\t}\r\n\t/**\r\n\t * The size of the pane relative to its sibling panes' sizes. Defaults to 100.\r\n\t*/\r\n\tget size() : number {\r\n\t\treturn (this.i.i as number);\r\n\t}\r\n\tset size(v: number) {\r\n\t\tthis.i.i = +v;\r\n\t                                        this._a(\"size\", this.i.i);\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.rootPane && (this.rootPane as any).name && (this.rootPane as any).name == name) { return this.rootPane; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.rootPane && (this.rootPane as any)._styling) {\r\n\t    (this.rootPane as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcDocumentHostComponent } from './igc-document-host-component';\r\nimport { DocumentHost } from './DocumentHost';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcDocumentHostModule {\r\n    public static register(): void {\r\n        IgcDocumentHostComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcDocumentHostComponent\", IgcDocumentHostComponent);\r\n        TypeRegistrar.register(\"DocumentHost\", (<any>DocumentHost).$type);\r\n    }\r\n}\r\n","import { IgCollection } from 'igniteui-core/IgCollection';\r\nimport { markType } from 'igniteui-core/type';\r\nimport { SyncableObservableCollection$2 } from 'igniteui-core/SyncableObservableCollection$2';\r\nimport { SyncableObservableCollection$1 } from 'igniteui-core/SyncableObservableCollection$1';\r\n\r\nimport { ContentPane as ContentPane_internal } from './ContentPane';\r\nimport { IgcContentPaneComponent as IgcContentPaneComponent } from './igc-content-pane-component';\r\n\r\nexport class IgcContentPaneCollection extends IgCollection<IgcContentPaneComponent, ContentPane_internal> {\r\n    constructor(list?: IgcContentPaneComponent[]) {\r\n        super();\r\n        if (!(IgcContentPaneComponent as any).$type) {\r\n            (IgcContentPaneComponent as any).$type = markType(IgcContentPaneComponent, \"IgcContentPaneComponent\");\r\n        }\r\n        if (list) {\r\n            for (let i = 0; i < list.length; i++) {\r\n                this.add(list[i]);\r\n            }\r\n        }\r\n    }\r\n    \r\n    protected _createInnerColl(): SyncableObservableCollection$2<IgcContentPaneComponent, ContentPane_internal> {\r\n        if (!(IgcContentPaneComponent as any).$type) {\r\n            (IgcContentPaneComponent as any).$type = markType(IgcContentPaneComponent, \"IgcContentPaneComponent\");\r\n        }\r\n        let coll = new SyncableObservableCollection$2<IgcContentPaneComponent, ContentPane_internal>((IgcContentPaneComponent as any).$type, (ContentPane_internal as any).$type, 0);\r\n        coll.compare = (ext, int) => { \r\n            let comp: any = ext;\r\n            if (comp._implementation) {\r\n                comp = comp._implementation;\r\n            }\r\n            if (comp.equals) {\r\n                return comp.equals(int);\r\n            }\r\n            return comp === int;\r\n        };\r\n        coll.createTo = (ext) => {\r\n            return (ext as any)._implementation;\r\n        }\r\n        coll.createFrom = (int) => {\r\n            let ext = (int as any).externalObject;\r\n            if (!ext) {\r\n                ext = IgcContentPaneComponent._createFromInternal(int);\r\n\r\n                if (ext) {\r\n                    if (!int.$type && (ext as any)._implementation.setNativeElement) {\r\n                        (ext as any)._implementation.setNativeElement(int);\r\n                    } else {\r\n                        (ext as any)._implementation = int;\r\n                    }\r\n                }\r\n            }\r\n            return ext;\r\n        }\r\n        return coll;\r\n    } \r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { DockManagerPaneType, DockManagerPaneType_$type } from \"./DockManagerPaneType\";\r\nimport { IgcContentPaneCollection } from \"./igc-content-pane-collection\";\r\nimport { IgcDockManagerPaneComponent } from \"./igc-dock-manager-pane-component\";\r\nimport { TabGroupPane } from \"./TabGroupPane\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureEnum, enumToString, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\nimport { ContentPaneCollection as ContentPaneCollection_internal } from \"./ContentPaneCollection\";\r\nimport { ContentPane } from \"./ContentPane\";\r\nimport { SyncableObservableCollection$1 } from \"igniteui-core/SyncableObservableCollection$1\";\r\n\r\nexport class IgcTabGroupPaneComponent extends IgcDockManagerPaneComponent\r\n{\r\n\r\nprotected createImplementation() : TabGroupPane\r\n{\r\n\treturn new TabGroupPane();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : TabGroupPane {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t                public static register() { }\r\n\t/**\r\n\t * The id of the pane. If not set the Dock Manager generates it automatically.\r\n\t*/\r\n\tget id() : string {\r\n\t\treturn (this.i.o as string);\r\n\t}\r\n\tset id(v: string) {\r\n\t\tthis.i.o = v;\r\n\t}\r\n\t/**\r\n\t * The type of the pane.\r\n\t*/\r\n\tget type() : DockManagerPaneType {\r\n\t\treturn this.i.f;\r\n\t}\r\n\tset type(v: DockManagerPaneType) {\r\n\t\tthis.i.f = ensureEnum<DockManagerPaneType>(DockManagerPaneType_$type, v);\r\n\t                                        this._a(\"Type\", enumToString<DockManagerPaneType>(DockManagerPaneType_$type, this.i.f));\r\n\t}\r\n\tprivate _panes: IgcContentPaneCollection = null;\r\n\t                                \r\n\t/**\r\n\t * The child content panes of the tab group.\r\n\t*/\r\n\tget panes() : IgcContentPaneCollection {\r\n\t                                        if (this._panes === null) {\r\n\t                                            let coll = new IgcContentPaneCollection();\r\n\t                                            let innerColl = this.i.e;\r\n\t\t\tif (!innerColl) {\r\n\t                                            \tinnerColl = new ContentPaneCollection_internal();\r\n\t\t\t}\r\n\t                                            this._panes = (coll as any)._fromInner(innerColl);\r\n\t                                            \r\n\t                                        }\r\n\t\treturn this._panes;\r\n\t}\r\n\tset panes(v: IgcContentPaneCollection) {\r\n\t                                        if (this._panes !== null) {\r\n\t                                            (this._panes as any)._setSyncTarget(null);\r\n\t                                            this._panes = null;\r\n\t                                        }\r\n\t                                        let coll = new IgcContentPaneCollection();\r\n\t                                        this._panes = (coll as any)._fromOuter(v);\r\n\t                                        let syncColl = new SyncableObservableCollection$1<ContentPane>((ContentPane as any).$type);\r\n\t                                        let innerColl = this.i.e;\r\n\t\tif (!innerColl) {\r\n\t                                        \tinnerColl = new ContentPaneCollection_internal();\r\n\t\t}\r\n\t                                        (syncColl as any)._inner = innerColl;\r\n\t                                        syncColl.clear();\r\n\t                                        (this._panes as any)._setSyncTarget(syncColl);\r\n\t                                        \r\n\t}\r\n\t/**\r\n\t * The size of the pane relative to its sibling panes' sizes. Defaults to 100.\r\n\t*/\r\n\tget size() : number {\r\n\t\treturn (this.i.l as number);\r\n\t}\r\n\tset size(v: number) {\r\n\t\tthis.i.l = +v;\r\n\t                                        this._a(\"size\", this.i.l);\r\n\t}\r\n\t/**\r\n\t * The index of the selected tab.\r\n\t*/\r\n\tget selectedIndex() : number {\r\n\t\treturn (this.i.k as number);\r\n\t}\r\n\tset selectedIndex(v: number) {\r\n\t\tthis.i.k = +v;\r\n\t                                        this._a(\"selectedIndex\", this.i.k);\r\n\t}\r\n\t/**\r\n\t * Determines whether the pane should present in the UI when empty.\r\n\t*/\r\n\tget allowEmpty() : boolean {\r\n\t\treturn (this.i.i as boolean);\r\n\t}\r\n\tset allowEmpty(v: boolean) {\r\n\t\tthis.i.i = ensureBool(v);\r\n\t                                        this._a(\"allowEmpty\", this.i.i);\r\n\t}\r\n\t/**\r\n\t * Determines whether a tab group is maximized or not. Defaults to false.\r\n\t*/\r\n\tget isMaximized() : boolean {\r\n\t\treturn (this.i.j as boolean);\r\n\t}\r\n\tset isMaximized(v: boolean) {\r\n\t\tthis.i.j = ensureBool(v);\r\n\t                                        this._a(\"isMaximized\", this.i.j);\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.panes != null && this.panes.findByName && this.panes.findByName(name)) { return this.panes.findByName(name); }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcTabGroupPaneComponent } from './igc-tab-group-pane-component';\r\nimport { TabGroupPane } from './TabGroupPane';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcTabGroupPaneModule {\r\n    public static register(): void {\r\n        IgcTabGroupPaneComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcTabGroupPaneComponent\", IgcTabGroupPaneComponent);\r\n        TypeRegistrar.register(\"TabGroupPane\", (<any>TabGroupPane).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, markType } from \"igniteui-core/type\";\r\nimport { WCNativeHelper } from \"./WCNativeHelper\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class DragService extends Base {\r\n\tstatic $t: Type = markType(DragService, 'DragService');\r\n\tprivate a: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get b(): WCNativeHelper {\r\n\t\treturn this.a;\r\n\t}\r\n\tprivate c: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.c;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.c = a;\r\n\t\tthis.a.o = this.c;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { DragService as DragService_internal } from \"./DragService\";\r\n\r\nexport class IgcDragService\r\n{\r\n\r\nprotected createImplementation() : DragService_internal\r\n{\r\n\treturn new DragService_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : DragService_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\t\r\n\t        return null;\r\n\t    }\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\nexport enum DockManagerShowHeaderIconOnHover {\r\n\tCloseOnly = 0,\r\n\tMoreOptionsOnly = 1,\r\n\tAll = 2\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let DockManagerShowHeaderIconOnHover_$type = markEnum('DockManagerShowHeaderIconOnHover', 'CloseOnly,0|MoreOptionsOnly,1|All,2');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { BaseElement } from \"./BaseElement\";\r\nimport { WCNativeHelper } from \"./WCNativeHelper\";\r\nimport { Base, Type, markType } from \"igniteui-core/type\";\r\nimport { DragService } from \"./DragService\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TabHeaderElement extends BaseElement {\r\n\tstatic $t: Type = markType(TabHeaderElement, 'TabHeaderElement', (<any>BaseElement).$);\r\n\tprivate b: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get c(): WCNativeHelper {\r\n\t\treturn this.b;\r\n\t}\r\n\tprivate d: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.d;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.d = a;\r\n\t\tthis.b.o = this.d;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget a(): DragService {\r\n\t\tlet ret_ = this.c.m(\"dragService\", (a: any) => new DragService());\r\n\t\treturn <DragService>ret_;\r\n\t}\r\n\tset a(a: DragService) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.c.w(\"dragService\", value_);\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcDragService } from \"./igc-drag-service\";\r\nimport { TabHeaderElement as TabHeaderElement_internal } from \"./TabHeaderElement\";\r\n\r\n/**\r\n * Describes a tab header element.\r\n*/\r\nexport class IgcTabHeaderElement\r\n{\r\n\r\nprotected createImplementation() : TabHeaderElement_internal\r\n{\r\n\treturn new TabHeaderElement_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : TabHeaderElement_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\t/**\r\n\t * Gets/sets the drag service.\r\n\t*/\r\n\tget dragService() : IgcDragService {\r\n\t                                        const r = this.i.a;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = new IgcDragService();\r\n\t                                            if ((r as any).$type) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            } else {\r\n\t                                                if ((e.i as any).setNativeElement) {\r\n\t                                                    (e.i as any).setNativeElement(r);\r\n\t                                                }\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset dragService(v: IgcDragService) {\r\n\t\tv == null ? this.i.a = null : this.i.a = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\tif (this.dragService && (this.dragService as any).name && (this.dragService as any).name == name) { return this.dragService; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcTabHeaderElement } from './igc-tab-header-element';\r\nimport { TabHeaderElement } from './TabHeaderElement';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcTabHeaderElementModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcTabHeaderElement\", IgcTabHeaderElement);\r\n        TypeRegistrar.register(\"TabHeaderElement\", (<any>TabHeaderElement).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, markType } from \"igniteui-core/type\";\r\nimport { WCNativeHelper } from \"./WCNativeHelper\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class DockManagerResourceStrings extends Base {\r\n\tstatic $t: Type = markType(DockManagerResourceStrings, 'DockManagerResourceStrings');\r\n\tprivate a: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get b(): WCNativeHelper {\r\n\t\treturn this.a;\r\n\t}\r\n\tprivate c: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.c;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.c = a;\r\n\t\tthis.a.o = this.c;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget e(): string {\r\n\t\tlet ret_ = this.b.n(\"close\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset e(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.w(\"close\", value_);\r\n\t}\r\n\tget l(): string {\r\n\t\tlet ret_ = this.b.n(\"pin\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset l(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.w(\"pin\", value_);\r\n\t}\r\n\tget m(): string {\r\n\t\tlet ret_ = this.b.n(\"unpin\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset m(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.w(\"unpin\", value_);\r\n\t}\r\n\tget g(): string {\r\n\t\tlet ret_ = this.b.n(\"maximize\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset g(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.w(\"maximize\", value_);\r\n\t}\r\n\tget h(): string {\r\n\t\tlet ret_ = this.b.n(\"minimize\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset h(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.w(\"minimize\", value_);\r\n\t}\r\n\tget i(): string {\r\n\t\tlet ret_ = this.b.n(\"moreOptions\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset i(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.w(\"moreOptions\", value_);\r\n\t}\r\n\tget j(): string {\r\n\t\tlet ret_ = this.b.n(\"moreTabs\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset j(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.w(\"moreTabs\", value_);\r\n\t}\r\n\tget k(): string {\r\n\t\tlet ret_ = this.b.n(\"panes\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset k(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.w(\"panes\", value_);\r\n\t}\r\n\tget f(): string {\r\n\t\tlet ret_ = this.b.n(\"documents\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset f(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.w(\"documents\", value_);\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { DockManagerResourceStrings as DockManagerResourceStrings_internal } from \"./DockManagerResourceStrings\";\r\n\r\n/**\r\n * Describes dock manager resource strings.\r\n*/\r\nexport class IgcDockManagerResourceStrings\r\n{\r\n\r\nprotected createImplementation() : DockManagerResourceStrings_internal\r\n{\r\n\treturn new DockManagerResourceStrings_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : DockManagerResourceStrings_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tget close() : string {\r\n\t\treturn (this.i.e as string);\r\n\t}\r\n\tset close(v: string) {\r\n\t\tthis.i.e = v;\r\n\t}\r\n\tget pin() : string {\r\n\t\treturn (this.i.l as string);\r\n\t}\r\n\tset pin(v: string) {\r\n\t\tthis.i.l = v;\r\n\t}\r\n\tget unpin() : string {\r\n\t\treturn (this.i.m as string);\r\n\t}\r\n\tset unpin(v: string) {\r\n\t\tthis.i.m = v;\r\n\t}\r\n\tget maximize() : string {\r\n\t\treturn (this.i.g as string);\r\n\t}\r\n\tset maximize(v: string) {\r\n\t\tthis.i.g = v;\r\n\t}\r\n\tget minimize() : string {\r\n\t\treturn (this.i.h as string);\r\n\t}\r\n\tset minimize(v: string) {\r\n\t\tthis.i.h = v;\r\n\t}\r\n\tget moreOptions() : string {\r\n\t\treturn (this.i.i as string);\r\n\t}\r\n\tset moreOptions(v: string) {\r\n\t\tthis.i.i = v;\r\n\t}\r\n\tget moreTabs() : string {\r\n\t\treturn (this.i.j as string);\r\n\t}\r\n\tset moreTabs(v: string) {\r\n\t\tthis.i.j = v;\r\n\t}\r\n\tget panes() : string {\r\n\t\treturn (this.i.k as string);\r\n\t}\r\n\tset panes(v: string) {\r\n\t\tthis.i.k = v;\r\n\t}\r\n\tget documents() : string {\r\n\t\treturn (this.i.f as string);\r\n\t}\r\n\tset documents(v: string) {\r\n\t\tthis.i.f = v;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\t\r\n\t        return null;\r\n\t    }\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\nexport enum DockManagerShowPaneHeaders {\r\n\tOnHoverOnly = 0,\r\n\tAlways = 1\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let DockManagerShowPaneHeaders_$type = markEnum('DockManagerShowPaneHeaders', 'OnHoverOnly,0|Always,1');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, markType } from \"igniteui-core/type\";\r\nimport { DockManagerLayout } from \"./DockManagerLayout\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class LayoutChangeEventArgs extends Base {\r\n\tstatic $t: Type = markType(LayoutChangeEventArgs, 'LayoutChangeEventArgs');\r\n\ta: DockManagerLayout = null;\r\n\tstatic b(a: any): LayoutChangeEventArgs {\r\n\t\treturn ((() => {\r\n\t\t\tlet $ret = new LayoutChangeEventArgs();\r\n\t\t\t$ret.a = <DockManagerLayout>a;\r\n\t\t\treturn $ret;\r\n\t\t})());\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcDockManagerLayout } from \"./igc-dock-manager-layout\";\r\nimport { LayoutChangeEventArgs as LayoutChangeEventArgs_internal } from \"./LayoutChangeEventArgs\";\r\n\r\nexport class IgcLayoutChangeEventArgs\r\n{\r\n\r\nprotected createImplementation() : LayoutChangeEventArgs_internal\r\n{\r\n\treturn new LayoutChangeEventArgs_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : LayoutChangeEventArgs_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tget detail() : IgcDockManagerLayout {\r\n\t                                        const r = this.i.a;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = new IgcDockManagerLayout();\r\n\t                                            if ((r as any).$type) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            } else {\r\n\t                                                if ((e.i as any).setNativeElement) {\r\n\t                                                    (e.i as any).setNativeElement(r);\r\n\t                                                }\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset detail(v: IgcDockManagerLayout) {\r\n\t\tv == null ? this.i.a = null : this.i.a = v.i;\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { BaseElement } from \"./BaseElement\";\r\nimport { WCNativeHelper } from \"./WCNativeHelper\";\r\nimport { Base, enumGetBox, EnumUtil, Type, markType } from \"igniteui-core/type\";\r\nimport { DockManagerLayout } from \"./DockManagerLayout\";\r\nimport { DockManagerPane } from \"./DockManagerPane\";\r\nimport { DockManagerPoint } from \"./DockManagerPoint\";\r\nimport { ContentPane } from \"./ContentPane\";\r\nimport { DockManagerShowHeaderIconOnHover, DockManagerShowHeaderIconOnHover_$type } from \"./DockManagerShowHeaderIconOnHover\";\r\nimport { DockManagerResourceStrings } from \"./DockManagerResourceStrings\";\r\nimport { DockManagerShowPaneHeaders, DockManagerShowPaneHeaders_$type } from \"./DockManagerShowPaneHeaders\";\r\nimport { LayoutChangeEventArgs } from \"./LayoutChangeEventArgs\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class DockManager extends BaseElement {\r\n\tstatic $t: Type = markType(DockManager, 'DockManager', (<any>BaseElement).$);\r\n\tlayoutChange: (sender: any, args: LayoutChangeEventArgs) => void = null;\r\n\tlayoutChangeChanged(): void {\r\n\t\tif (this.layoutChange != null) {\r\n\t\t\tthis.k.s(\"layoutChange\", (a: any) => this.layoutChange(this, LayoutChangeEventArgs.b(this.b)), false);\r\n\t\t} else {\r\n\t\t\tthis.k.v(\"layoutChange\");\r\n\t\t}\r\n\t}\r\n\tprivate j: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get k(): WCNativeHelper {\r\n\t\treturn this.j;\r\n\t}\r\n\tprivate r: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.r;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.r = a;\r\n\t\tthis.j.o = this.r;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget b(): DockManagerLayout {\r\n\t\tlet ret_ = this.k.m(\"layout\", (a: any) => new DockManagerLayout());\r\n\t\treturn <DockManagerLayout>ret_;\r\n\t}\r\n\tset b(a: DockManagerLayout) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.k.w(\"layout\", value_);\r\n\t}\r\n\tget c(): DockManagerPane {\r\n\t\tlet ret_ = this.k.m(\"draggedPane\", (a: any) => DockManagerPane.createFromNative(a));\r\n\t\treturn <DockManagerPane>ret_;\r\n\t}\r\n\tset c(a: DockManagerPane) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.k.w(\"draggedPane\", value_);\r\n\t}\r\n\tget e(): DockManagerPoint {\r\n\t\tlet ret_ = this.k.m(\"dropPosition\", (a: any) => new DockManagerPoint());\r\n\t\treturn <DockManagerPoint>ret_;\r\n\t}\r\n\tset e(a: DockManagerPoint) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.k.w(\"dropPosition\", value_);\r\n\t}\r\n\tget a(): ContentPane {\r\n\t\tlet ret_ = this.k.m(\"activePane\", (a: any) => new ContentPane());\r\n\t\treturn <ContentPane>ret_;\r\n\t}\r\n\tset a(a: ContentPane) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.k.w(\"activePane\", value_);\r\n\t}\r\n\tget n(): boolean {\r\n\t\tlet ret_ = this.k.n(\"allowMaximize\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset n(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.k.w(\"allowMaximize\", value_);\r\n\t}\r\n\tget o(): boolean {\r\n\t\tlet ret_ = this.k.n(\"containedInBoundaries\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset o(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.k.w(\"containedInBoundaries\", value_);\r\n\t}\r\n\tget g(): DockManagerShowHeaderIconOnHover {\r\n\t\tlet ret_ = this.k.n(\"showHeaderIconOnHover\");\r\n\t\tif (<boolean>(ret_ === undefined && (this as any).___rawMode)) {\r\n\t\t\treturn <DockManagerShowHeaderIconOnHover>(undefined as any);\r\n\t\t}\r\n\t\tret_ = enumGetBox<DockManagerShowHeaderIconOnHover>(DockManagerShowHeaderIconOnHover_$type, EnumUtil.getEnumValue<DockManagerShowHeaderIconOnHover>(DockManagerShowHeaderIconOnHover_$type, this.k.f<DockManagerShowHeaderIconOnHover>(DockManagerShowHeaderIconOnHover_$type, ret_)));\r\n\t\treturn EnumUtil.getEnumValue<DockManagerShowHeaderIconOnHover>(DockManagerShowHeaderIconOnHover_$type, ret_);\r\n\t}\r\n\tset g(a: DockManagerShowHeaderIconOnHover) {\r\n\t\tlet value_ = <any>enumGetBox<DockManagerShowHeaderIconOnHover>(DockManagerShowHeaderIconOnHover_$type, a);\r\n\t\tvalue_ = WCNativeHelper.camel(value_.toString());\r\n\t\tthis.k.w(\"showHeaderIconOnHover\", value_);\r\n\t}\r\n\tget d(): DockManagerPane {\r\n\t\tlet ret_ = this.k.m(\"maximizedPane\", (a: any) => DockManagerPane.createFromNative(a));\r\n\t\treturn <DockManagerPane>ret_;\r\n\t}\r\n\tset d(a: DockManagerPane) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.k.w(\"maximizedPane\", value_);\r\n\t}\r\n\tget f(): DockManagerResourceStrings {\r\n\t\tlet ret_ = this.k.m(\"resourceStrings\", (a: any) => new DockManagerResourceStrings());\r\n\t\treturn <DockManagerResourceStrings>ret_;\r\n\t}\r\n\tset f(a: DockManagerResourceStrings) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.k.w(\"resourceStrings\", value_);\r\n\t}\r\n\tget l(): boolean {\r\n\t\tlet ret_ = this.k.n(\"allowFloatingPanesResize\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset l(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.k.w(\"allowFloatingPanesResize\", value_);\r\n\t}\r\n\tget p(): boolean {\r\n\t\tlet ret_ = this.k.n(\"disableKeyboardNavigation\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset p(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.k.w(\"disableKeyboardNavigation\", value_);\r\n\t}\r\n\tget m(): boolean {\r\n\t\tlet ret_ = this.k.n(\"allowInnerDock\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset m(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.k.w(\"allowInnerDock\", value_);\r\n\t}\r\n\tget h(): DockManagerShowPaneHeaders {\r\n\t\tlet ret_ = this.k.n(\"showPaneHeaders\");\r\n\t\tif (<boolean>(ret_ === undefined && (this as any).___rawMode)) {\r\n\t\t\treturn <DockManagerShowPaneHeaders>(undefined as any);\r\n\t\t}\r\n\t\tret_ = enumGetBox<DockManagerShowPaneHeaders>(DockManagerShowPaneHeaders_$type, EnumUtil.getEnumValue<DockManagerShowPaneHeaders>(DockManagerShowPaneHeaders_$type, this.k.f<DockManagerShowPaneHeaders>(DockManagerShowPaneHeaders_$type, ret_)));\r\n\t\treturn EnumUtil.getEnumValue<DockManagerShowPaneHeaders>(DockManagerShowPaneHeaders_$type, ret_);\r\n\t}\r\n\tset h(a: DockManagerShowPaneHeaders) {\r\n\t\tlet value_ = <any>enumGetBox<DockManagerShowPaneHeaders>(DockManagerShowPaneHeaders_$type, a);\r\n\t\tvalue_ = WCNativeHelper.camel(value_.toString());\r\n\t\tthis.k.w(\"showPaneHeaders\", value_);\r\n\t}\r\n\tget q(): boolean {\r\n\t\tlet ret_ = this.k.n(\"proximityDock\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset q(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.k.w(\"proximityDock\", value_);\r\n\t}\r\n\tt(a: string): void {\r\n\t\tthis.nativeElement.focusPane(this.k.i(a));\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcDockManagerLayout } from \"./igc-dock-manager-layout\";\r\nimport { IgcDockManagerPaneComponent } from \"./igc-dock-manager-pane-component\";\r\nimport { IgcDockManagerPoint } from \"./igc-dock-manager-point\";\r\nimport { IgcContentPaneComponent } from \"./igc-content-pane-component\";\r\nimport { DockManagerShowHeaderIconOnHover, DockManagerShowHeaderIconOnHover_$type } from \"./DockManagerShowHeaderIconOnHover\";\r\nimport { IgcDockManagerResourceStrings } from \"./igc-dock-manager-resource-strings\";\r\nimport { DockManagerShowPaneHeaders, DockManagerShowPaneHeaders_$type } from \"./DockManagerShowPaneHeaders\";\r\nimport { IgcLayoutChangeEventArgs } from \"./igc-layout-change-event-args\";\r\nimport { DockManager } from \"./DockManager\";\r\nimport { TypeRegistrar } from \"igniteui-core/type\";\r\nimport { NamePatcher, getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString, initializePropertiesFromCss } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Describes a Dock Manager component.\r\n*/\r\nexport class IgcDockManagerComponent\r\n{\r\n\r\nprotected createImplementation() : DockManager\r\n{\r\n\treturn new DockManager();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : DockManager {\r\n\treturn this._implementation;\r\n\t}/**\r\n\t                             * @hidden \r\n\t                             */\r\n\tstatic _createFromInternal(internal: any) : IgcDockManagerComponent {\r\n\t    if (!internal) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                if (!internal.$type) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                let name = internal.$type.name;\r\n\t                                let externalName = \"Igc\" + name + \"Component\";\r\n\t                                if (!TypeRegistrar.isRegistered(externalName)) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                return TypeRegistrar.create(externalName);\r\n\t                            }\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\t                                    \r\n\t                                    if ((this as any)._styling) {\r\n\t                                        NamePatcher.ensureStylablePatched(Object.getPrototypeOf(this));\r\n\t                                    }\r\n\t\tthis._implementation = this.createImplementation();\r\n\t\t(<any>this._implementation).externalObject = this;\r\n\t\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tprivate _settingAttributes: boolean = false;\r\n\t                                protected _attached: boolean = false;\r\n\t                                    \r\n\t                                private _queuedSetAttributes: { attrName: string, attrValue: string }[] = [];\r\n\t                                protected _enqueueSetAttribute(attrName: string, attrValue: string) {\r\n\t                                     this._queuedSetAttributes.push({ attrName: attrName, attrValue: attrValue });\r\n\t                                }\r\n\t\r\n\t                                protected _flushQueuedAttributes() {\r\n\t                                    this._settingAttributes = true;\r\n\t                                    for (let i = 0; i < this._queuedSetAttributes.length; i++) {\r\n\t                                        this.setAttribute(\r\n\t                                            this._queuedSetAttributes[i].attrName,\r\n\t                                            this._queuedSetAttributes[i].attrValue);\r\n\t                                    }\r\n\t                                    this._settingAttributes = false;\r\n\t                                    this._queuedSetAttributes.length = 0;\r\n\t                                }\r\n\t                                protected _a(attrName: string, attrValue: any) {\r\n\t                                    if (this._updatingFromAttribute) {\r\n\treturn;\r\n\t    }\r\n\t                                    if (attrValue) {\r\n\t                                        attrValue = attrValue.toString();\r\n\t                                    }\r\n\t                                    this._settingAttributes = true;\r\n\t                                    attrName = toSpinal(attrName);\r\n\t                                    if (this._attached) {\r\n\t                                        this.setAttribute(attrName, attrValue);\r\n\t                                    } else { \r\n\t                                        this._enqueueSetAttribute(attrName, attrValue);\r\n\t                                    }\r\n\t                                    this._settingAttributes = false;\r\n\t    }\r\n\t\r\n\t                                protected setAttribute(attrName: string, attrValue: string) {\r\n\t\r\n\t                                }\r\n\t\r\n\t                \r\n\t                private _updatingFromAttribute: boolean = false;\r\n\t                attributeChangedCallback(name: string, oldValue: string, newValue: string) {\r\n\t                    if (this._settingAttributes) {\r\n\t                        return;\r\n\t                    }\r\n\t                    let setName = fromSpinal(name);\r\n\t                    this._updatingFromAttribute = true;\r\n\t                    (<any>this)[setName] = newValue;\r\n\t                    this._updatingFromAttribute = false;\r\n\t                }\r\n\t\r\n\t                public static register() { }\r\n\t/**\r\n\t * Gets/sets the layout configuration of the Dock Manager.\r\n\t*/\r\n\tget layout() : IgcDockManagerLayout {\r\n\t                                        const r = this.i.b;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = new IgcDockManagerLayout();\r\n\t                                            if ((r as any).$type) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            } else {\r\n\t                                                if ((e.i as any).setNativeElement) {\r\n\t                                                    (e.i as any).setNativeElement(r);\r\n\t                                                }\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset layout(v: IgcDockManagerLayout) {\r\n\t\tv == null ? this.i.b = null : this.i.b = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets/sets the currently dragged pane.\r\n\t*/\r\n\tget draggedPane() : IgcDockManagerPaneComponent {\r\n\t                                        const r = this.i.c;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcDockManagerPaneComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset draggedPane(v: IgcDockManagerPaneComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.c = null : this.i.c = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets/sets the current drop position when performing custom drag/drop.\r\n\t*/\r\n\tget dropPosition() : IgcDockManagerPoint {\r\n\t                                        const r = this.i.e;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = new IgcDockManagerPoint();\r\n\t                                            if ((r as any).$type) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            } else {\r\n\t                                                if ((e.i as any).setNativeElement) {\r\n\t                                                    (e.i as any).setNativeElement(r);\r\n\t                                                }\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset dropPosition(v: IgcDockManagerPoint) {\r\n\t\tv == null ? this.i.e = null : this.i.e = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets/sets the active pane of the Dock Manager.\r\n\t*/\r\n\tget activePane() : IgcContentPaneComponent {\r\n\t                                        const r = this.i.a;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcContentPaneComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset activePane(v: IgcContentPaneComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.a = null : this.i.a = v.i;\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user is allowed to maximize panes. Defaults to true.\r\n\t*/\r\n\tget allowMaximize() : boolean {\r\n\t\treturn (this.i.n as boolean);\r\n\t}\r\n\tset allowMaximize(v: boolean) {\r\n\t\tthis.i.n = ensureBool(v);\r\n\t                                        this._a(\"allowMaximize\", this.i.n);\r\n\t}\r\n\t/**\r\n\t * Determines whether the floating panes are kept inside the Dock Manager boundaries. Defaults to false.\r\n\t*/\r\n\tget containedInBoundaries() : boolean {\r\n\t\treturn (this.i.o as boolean);\r\n\t}\r\n\tset containedInBoundaries(v: boolean) {\r\n\t\tthis.i.o = ensureBool(v);\r\n\t                                        this._a(\"containedInBoundaries\", this.i.o);\r\n\t}\r\n\t/**\r\n\t * Determines which tab header icons should show when hovering over the tab with the mouse. Defaults to undefined.\r\n\t*/\r\n\tget showHeaderIconOnHover() : DockManagerShowHeaderIconOnHover {\r\n\t\treturn this.i.g;\r\n\t}\r\n\tset showHeaderIconOnHover(v: DockManagerShowHeaderIconOnHover) {\r\n\t\tthis.i.g = ensureEnum<DockManagerShowHeaderIconOnHover>(DockManagerShowHeaderIconOnHover_$type, v);\r\n\t                                        this._a(\"showHeaderIconOnHover\", enumToString<DockManagerShowHeaderIconOnHover>(DockManagerShowHeaderIconOnHover_$type, this.i.g));\r\n\t}\r\n\t/**\r\n\t * Gets/sets the maximized pane.\r\n\t*/\r\n\tget maximizedPane() : IgcDockManagerPaneComponent {\r\n\t                                        const r = this.i.d;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcDockManagerPaneComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset maximizedPane(v: IgcDockManagerPaneComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.d = null : this.i.d = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets/sets the resource strings.\r\n\t*/\r\n\tget resourceStrings() : IgcDockManagerResourceStrings {\r\n\t                                        const r = this.i.f;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = new IgcDockManagerResourceStrings();\r\n\t                                            if ((r as any).$type) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            } else {\r\n\t                                                if ((e.i as any).setNativeElement) {\r\n\t                                                    (e.i as any).setNativeElement(r);\r\n\t                                                }\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset resourceStrings(v: IgcDockManagerResourceStrings) {\r\n\t\tv == null ? this.i.f = null : this.i.f = v.i;\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user is allowed to resize floating panes. Defaults to true.\r\n\t*/\r\n\tget allowFloatingPanesResize() : boolean {\r\n\t\treturn (this.i.l as boolean);\r\n\t}\r\n\tset allowFloatingPanesResize(v: boolean) {\r\n\t\tthis.i.l = ensureBool(v);\r\n\t                                        this._a(\"allowFloatingPanesResize\", this.i.l);\r\n\t}\r\n\t/**\r\n\t * Disables the built-in keyboard shortcuts for pane navigation. Defaults to false.\r\n\t*/\r\n\tget disableKeyboardNavigation() : boolean {\r\n\t\treturn (this.i.p as boolean);\r\n\t}\r\n\tset disableKeyboardNavigation(v: boolean) {\r\n\t\tthis.i.p = ensureBool(v);\r\n\t                                        this._a(\"disableKeyboardNavigation\", this.i.p);\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user is allowed to inner dock panes. Defaults to true.\r\n\t*/\r\n\tget allowInnerDock() : boolean {\r\n\t\treturn (this.i.m as boolean);\r\n\t}\r\n\tset allowInnerDock(v: boolean) {\r\n\t\tthis.i.m = ensureBool(v);\r\n\t                                        this._a(\"allowInnerDock\", this.i.m);\r\n\t}\r\n\t/**\r\n\t * Determines whether pane headers are only shown on hover or always visible. Defaults to 'always'.\r\n\t*/\r\n\tget showPaneHeaders() : DockManagerShowPaneHeaders {\r\n\t\treturn this.i.h;\r\n\t}\r\n\tset showPaneHeaders(v: DockManagerShowPaneHeaders) {\r\n\t\tthis.i.h = ensureEnum<DockManagerShowPaneHeaders>(DockManagerShowPaneHeaders_$type, v);\r\n\t                                        this._a(\"showPaneHeaders\", enumToString<DockManagerShowPaneHeaders>(DockManagerShowPaneHeaders_$type, this.i.h));\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user can dock the dragged pane by dragging it close to the target pane edges.\r\n\t * If enabled, docking indicators are not visible. Defaults to false.\r\n\t*/\r\n\tget proximityDock() : boolean {\r\n\t\treturn (this.i.q as boolean);\r\n\t}\r\n\tset proximityDock(v: boolean) {\r\n\t\tthis.i.q = ensureBool(v);\r\n\t                                        this._a(\"proximityDock\", this.i.q);\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\tif (this.layout && (this.layout as any).name && (this.layout as any).name == name) { return this.layout; }\r\n\tif (this.draggedPane && (this.draggedPane as any).name && (this.draggedPane as any).name == name) { return this.draggedPane; }\r\n\tif (this.dropPosition && (this.dropPosition as any).name && (this.dropPosition as any).name == name) { return this.dropPosition; }\r\n\tif (this.activePane && (this.activePane as any).name && (this.activePane as any).name == name) { return this.activePane; }\r\n\tif (this.maximizedPane && (this.maximizedPane as any).name && (this.maximizedPane as any).name == name) { return this.maximizedPane; }\r\n\tif (this.resourceStrings && (this.resourceStrings as any).name && (this.resourceStrings as any).name == name) { return this.resourceStrings; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\tprotected __p: string = null;\r\n\tprotected _hasUserValues: Set<string> = new Set<string>();\r\n\tprotected get hasUserValues(): Set<string> {\r\n\t    return this._hasUserValues;\r\n\t}\r\n\tprotected __m(propertyName: string) {\r\n\t    if (!this._inStyling) {\r\n\t        this._hasUserValues.add(propertyName);\r\n\t    }\r\n\t}\r\n\t\r\n\tprotected _stylingContainer: any = null;\r\n\tprotected _stylingParent: any = null;\r\n\tprotected _inStyling: boolean = false;\r\n\tprotected _styling(container: any, component: any, parent?: any) {\r\n\t        if (this._inStyling) {\r\n\t            return;\r\n\t        }\r\n\t        this._inStyling = true;\r\n\t        this._stylingContainer = container;\r\n\t        this._stylingParent = component;\r\n\t\t\r\n\t        let genericPrefix = \"\";\r\n\t        let typeName = (this.i as any).$type.name;\r\n\t        if (typeName.indexOf(\"Xam\") === 0) {\r\n\t            typeName = typeName.substring(3);\r\n\t        }\r\n\t        genericPrefix = toSpinal(\"DockManagerComponent\");\r\n\t\t\r\n\t\tlet additionalPrefixes = [];\r\n\t\t\r\n\t\tlet prefix = toSpinal(typeName);\r\n\t\tadditionalPrefixes.push(prefix + \"-\");\r\n\t\r\n\t        let b = (this.i as any).$type.baseType;\r\n\t        while (b && b.name != \"Object\" && \r\n\t            b.name != \"Base\" && \r\n\t            b.name != \"Control\" && \r\n\t            b.Name != \"DependencyObject\" &&\r\n\t            b.Name != \"FrameworkElement\") {\r\n\t            typeName = b.name;\r\n\t            if (typeName.indexOf(\"Xam\") === 0) {\r\n\t                typeName = typeName.substring(3);\r\n\t            }\r\n\t            let basePrefix = toSpinal(typeName);\r\n\t            additionalPrefixes.push(basePrefix + \"-\");\r\n\t            b = b.baseType;\r\n\t        }\r\n\t\t\r\n\t\tif (parent) {\r\n\t\t\tlet parentTypeName = (parent.i as any).$type.name;\r\n\t            if (parentTypeName.indexOf(\"Xam\") === 0) {\r\n\t                parentTypeName = parentTypeName.substring(3);\r\n\t            }\r\n\t            let parentPrefix = toSpinal(parentTypeName);\r\n\t\r\n\t\t\tadditionalPrefixes.push(parentPrefix + \"-\" + genericPrefix + \"-\");\r\n\t\t\tadditionalPrefixes.push(parentPrefix + \"-\" + prefix + \"-\");\r\n\t\t}\r\n\t\r\n\t\tinitializePropertiesFromCss(container, this, genericPrefix + \"-\", this.hasUserValues, false, additionalPrefixes);\r\n\t\r\n\t        if (this.draggedPane && (this.draggedPane as any)._styling) {\r\n\t    (this.draggedPane as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.activePane && (this.activePane as any)._styling) {\r\n\t    (this.activePane as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.maximizedPane && (this.maximizedPane as any)._styling) {\r\n\t    (this.maximizedPane as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t\r\n\t        if ((this as any)._otherStyling) {\r\n\t            (this as any)._otherStyling(container, component, parent);\r\n\t        }\r\n\t        this._inStyling = false;\r\n\t}\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n\t/**\r\n\t * Focuses a pane from the layout.\r\n\t\r\n\t*/\r\n\tpublic focusPane(contentId: string) {\r\n\t\tthis.i.t(contentId);\r\n\t}\r\n\t\r\n\t    private _layoutChange: (s: IgcDockManagerComponent, e: IgcLayoutChangeEventArgs) => void = null;\r\n\t    private _layoutChange_wrapped: any = null;\r\n\t\r\n\tpublic get layoutChange(): (s: IgcDockManagerComponent, e: IgcLayoutChangeEventArgs) => void {\r\n\treturn this._layoutChange;\r\n\t}\r\n\t    public set layoutChange(ev: (s: IgcDockManagerComponent, e: IgcLayoutChangeEventArgs) => void) {\r\n\t        if (this._layoutChange_wrapped !== null) {\r\n\t            this.i.layoutChange = delegateRemove(this.i.layoutChange, this._layoutChange_wrapped);\r\n\t            this._layoutChange_wrapped = null;\r\n\t            this._layoutChange = null;\r\n\t        }\r\n\t\r\n\t        this._layoutChange = ev;\r\n\t        this._layoutChange_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcLayoutChangeEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeLayoutChange) {\r\n\t                        (this as any).beforeLayoutChange(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._layoutChange) {\r\n\t    this._layoutChange(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.layoutChange = delegateCombine(this.i.layoutChange, this._layoutChange_wrapped);\r\n\t        if (this.i.layoutChangeChanged) {\r\n\t            this.i.layoutChangeChanged();\r\n\t        }\r\n\t;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcDockManagerLayoutModule } from './igc-dock-manager-layout-module';\r\nimport { IgcContentPaneModule } from './igc-content-pane-module';\r\nimport { IgcSplitPaneModule } from './igc-split-pane-module';\r\nimport { IgcDocumentHostModule } from './igc-document-host-module';\r\nimport { IgcTabGroupPaneModule } from './igc-tab-group-pane-module';\r\nimport { IgcTabHeaderElementModule } from './igc-tab-header-element-module';\r\nimport { IgcDockManagerComponent } from './igc-dock-manager-component';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\n\r\nexport class IgcDockManagerModule {\r\n    public static register() {\r\n                IgcDockManagerLayoutModule.register();\r\n        IgcContentPaneModule.register();\r\n        IgcSplitPaneModule.register();\r\n        IgcDocumentHostModule.register();\r\n        IgcTabGroupPaneModule.register();\r\n        IgcTabHeaderElementModule.register();\r\n        IgcDockManagerComponent.register();\r\n        TypeRegistrar.registerCons('IgcDockManagerComponent', IgcDockManagerComponent);        TypeRegistrar.registerCons('IgcDockManagerComponent', IgcDockManagerComponent);\r\n\r\n    }\r\n}"],"names":["DockManagerPaneType","DockManagerPaneType_$type","SplitPaneOrientation","SplitPaneOrientation_$type","UnpinnedLocation","UnpinnedLocation_$type","DockManagerPoint","a","WCNativeHelper","e","b","this","nativeElement","o","setNativeElement","c","n","value_","w","d","$t","DockManagerPane","___mustPassByValue","static","native_","undefined","toLowerCase","SplitPane","ContentPane","TabGroupPane","DocumentHost","g","j","h","l","ret_","___rawMode","getEnumValue","f","camel","toString","m","i","$","k","ContentPaneCollection","v","ab","x","z","aa","ac","ad","y","t","u","s","r","q","p","ObservableCollection$1","constructor","super","specialize","DockManagerPaneCollection","createFromNative","IgcDockManagerPaneComponent","createImplementation","_implementation","internal","$type","externalName","name","isRegistered","create","onImplementationCreated","_settingAttributes","_attached","_queuedSetAttributes","_updatingFromAttribute","__p","_hasUserValues","Set","_stylingContainer","_stylingParent","_inStyling","_styling","ensureStylablePatched","Object","getPrototypeOf","externalObject","_initializeAdapters","_enqueueSetAttribute","attrName","attrValue","push","_flushQueuedAttributes","length","setAttribute","_a","attributeChangedCallback","oldValue","newValue","setName","findByName","findEphemera","indexOf","hasUserValues","__m","propertyName","add","container","component","parent","genericPrefix","typeName","substring","additionalPrefixes","prefix","baseType","Name","basePrefix","parentTypeName","parentPrefix","_otherStyling","IgcDockManagerPaneCollection","IgCollection","list","_createInnerColl","coll","SyncableObservableCollection$2","compare","ext","int","comp","equals","createTo","createFrom","_createFromInternal","IgcDockManagerPoint","_provideImplementation","element","IgcSplitPaneComponent","_panes","id","type","orientation","panes","innerColl","_fromInner","_setSyncTarget","_fromOuter","syncColl","SyncableObservableCollection$1","_inner","clear","size","floatingLocation","floatingWidth","floatingHeight","floatingResizable","allowEmpty","isMaximized","IgcSplitPaneCollection","SplitPaneCollection","DockManagerLayout","IgcDockManagerLayout","_floatingPanes","rootPane","floatingPanes","IgcDockManagerLayoutModule","registerCons","register","IgcContentPaneComponent","contentId","header","headerId","tabHeaderId","unpinnedHeaderId","floatingHeaderId","allowClose","allowMaximize","allowPinning","allowDocking","acceptsInnerDock","allowFloating","unpinnedSize","isPinned","unpinnedLocation","hidden","disabled","documentOnly","IgcContentPaneModule","IgcSplitPaneModule","IgcDocumentHostComponent","IgcDocumentHostModule","IgcContentPaneCollection","IgcTabGroupPaneComponent","selectedIndex","IgcTabGroupPaneModule","DragService","IgcDragService","DockManagerShowHeaderIconOnHover","TabHeaderElement","BaseElement","IgcTabHeaderElement","dragService","IgcTabHeaderElementModule","DockManagerShowHeaderIconOnHover_$type","DockManagerResourceStrings","IgcDockManagerResourceStrings","close","pin","unpin","maximize","minimize","moreOptions","moreTabs","documents","DockManagerShowPaneHeaders","DockManagerShowPaneHeaders_$type","LayoutChangeEventArgs","$ret","IgcLayoutChangeEventArgs","detail","DockManager","layoutChange","layoutChangeChanged","focusPane","IgcDockManagerComponent","_layoutChange","_layoutChange_wrapped","layout","draggedPane","dropPosition","activePane","containedInBoundaries","showHeaderIconOnHover","maximizedPane","resourceStrings","allowFloatingPanesResize","disableKeyboardNavigation","allowInnerDock","showPaneHeaders","proximityDock","ev","outerArgs","beforeLayoutChange","IgcDockManagerModule"],"sourceRoot":""}