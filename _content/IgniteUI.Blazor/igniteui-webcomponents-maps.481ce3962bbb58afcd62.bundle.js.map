{"version":3,"file":"igniteui-webcomponents-maps.481ce3962bbb58afcd62.bundle.js","mappings":"kVAgCO,MAAeA,UAAgC,IAErDC,KACCC,MAAMD,KACS,MAAXE,KAAKC,IACRD,KAAKC,GAAGH,IAEV,CACAI,cACCH,QAGO,KAAAI,GAAa,KAFpBH,KAAKC,GAAKD,KAAKI,IAChB,CAEUC,SACT,OAAO,CACR,CACAC,GAAGC,EAAQC,GACV,IAAIC,EAAIT,KAAKU,GAAGF,GAOhB,MANS,sBAALC,IACHA,EAAI,eAEI,uBAALA,IACHA,EAAI,eAEET,KAAKC,GAAGK,GAAGC,EAAGE,EACtB,CACAE,GAAGJ,GACF,IAAIC,EAAIR,KAAKU,GAAGH,GAOhB,MANS,sBAALC,IACHA,EAAI,eAEI,uBAALA,IACHA,EAAI,eAEER,KAAKC,GAAGU,GAAGH,EACnB,CACUI,SACT,OAAOZ,KAAKa,GAAGb,KAAKC,GACrB,CACUa,OAAOP,GAChBP,KAAKe,GAAGf,KAAKC,GAAIM,EAClB,CACAS,GAAGT,EAAkCC,EAAYC,EAAYQ,EAAWC,GACvE,OAAOlB,KAAKC,GAAGe,GAAGT,EAAGC,EAAGC,EAAGQ,EAAGC,EAC/B,CACAC,KACC,OAAOnB,KAAKC,GAAGkB,IAChB,CACAC,KACC,OAAOpB,KAAKC,EACb,CACIA,SACH,OAAOD,KAAKG,EACb,CACIF,OAAGM,GACWP,KAAKC,IAAMM,IAE3BP,KAAKG,GAAKI,EACVP,KAAKqB,KAEP,CACUC,iBACT,OAAOtB,KAAKC,GAAGsB,UAChB,CACUF,KACT,GAAe,MAAXrB,KAAKG,GAAY,CACpB,IAAIqB,EAAgBxB,KAAKG,GACnBqB,EAAeC,eAAiB,KAAcC,mBAAmBF,EAAe,IAAkBG,OAAQ,IAAkBC,SAC5HJ,EAAeC,eAAeI,gBAAkBL,C,CAEvDxB,KAAK8B,GAAG9B,KAAKC,IACbD,KAAK+B,GAAGC,IACT,CACAC,GAAG1B,EAAQC,EAAUC,GACpB,OAAOT,KAAKkC,GAAGlC,KAAKC,GAAIM,EAAGC,EAAGC,EAC/B,CACA0B,GAAG5B,EAAQC,EAAUC,GACpB,OAAOT,KAAKoC,GAAGpC,KAAKC,GAAIM,EAAGC,EAAGC,EAC/B,CACA4B,GAAG9B,GACF,OAAOP,KAAKsC,GAAGtC,KAAKC,GAAIM,EACzB,CACAgC,GAAGhC,EAAUC,GACZ,OAAOR,KAAKC,GAAGsC,GAAGhC,EAAGC,EACtB,CACAgC,GAAGjC,EAAUC,GACZ,OAAOR,KAAKC,GAAGuC,GAAGjC,EAAGC,EACtB,CACAiC,GAAGlC,EAAUC,EAAYC,GACxB,OAAOT,KAAKC,GAAGwC,GAAGlC,EAAGC,EAAGC,EACzB,CACAiC,GAAGnC,EAAUC,EAAYC,GACxB,OAAOT,KAAKC,GAAGyC,GAAGnC,EAAGC,EAAGC,EACzB,CACAkC,GAAGpC,GACF,OAAOP,KAAKC,GAAG0C,GAAGpC,EACnB,CACAqC,GAAGrC,GACF,OAAOP,KAAKC,GAAG2C,GAAGrC,EACnB,CACAsC,GAAGtC,GACF,OAAOP,KAAKC,GAAG4C,GAAGtC,EACnB,CACAuC,GAAGvC,GACF,OAAOP,KAAKC,GAAG6C,GAAGvC,EACnB,CACAwC,GAAGxC,GACF,OAAOP,KAAKC,GAAG8C,GAAGxC,EACnB,CACAyC,GAAGzC,GACF,OAAOP,KAAKC,GAAG+C,GAAGzC,EACnB,CACA0C,GAAG1C,EAAUC,EAAYC,GACxB,OAAOT,KAAKC,GAAGgD,GAAG1C,EAAGC,EAAGC,EACzB,CACAyC,GAAG3C,EAAUC,EAAYC,GACxB,OAAOT,KAAKC,GAAGiD,GAAG3C,EAAGC,EAAGC,EACzB,CACA0C,GAAG5C,EAAUC,EAAYC,GACxB,OAAOT,KAAKyC,GAAGlC,EAAGC,EAAGC,EACtB,CACA2C,GAAG7C,EAAUC,EAAYC,GACxB,OAAOT,KAAKC,GAAGmD,GAAG7C,EAAGC,EAAGC,EACzB,CACA4C,GAAG9C,EAAUC,EAAYC,GACxB,OAAOT,KAAKC,GAAGoD,GAAG9C,EAAGC,EAAGC,EACzB,CACA6C,GAAG/C,EAAUC,EAAYC,GACxB,OAAOT,KAAKC,GAAGqD,GAAG/C,EAAGC,EAAGC,EACzB,CACA8C,GAAGhD,EAAUC,EAAYC,GACxB,OAAOT,KAAKC,GAAGsD,GAAGhD,EAAGC,EAAGC,EACzB,CACA+C,GAAGjD,EAAUC,EAAYC,GACxB,OAAOT,KAAKC,GAAGuD,GAAGjD,EAAGC,EAAGC,EACzB,CACAgD,GAAGlD,EAAUC,EAAYC,GACxB,OAAOT,KAAKC,GAAGwD,GAAGlD,EAAGC,EAAGC,EACzB,CACAiD,GAAGnD,EAAUC,EAAYC,GACxB,OAAOT,KAAKC,GAAGyD,GAAGnD,EAAGC,EAAGC,EACzB,CACAkD,GAAGpD,GACF,OAAOP,KAAKC,GAAG0D,GAAGpD,EACnB,CACAqD,KACC,OAAO5D,KAAKC,GAAG2D,IAChB,CACAC,GAAGtD,GACF,OAAOP,KAAKC,GAAG4D,GAAGtD,EACnB,CACAuD,GAAGvD,GACF,OAAOP,KAAKC,GAAG6D,GAAGvD,EACnB,CAEUwD,KACT,OAAO,IAAIC,EAAehE,KAC3B,CACAiE,GAAG1D,GACFR,MAAMkE,GAAG1D,GACTP,KAAK+B,IAAK,QAA+BiC,EAAgBE,EAAG3D,EAC7D,CAMI4D,SACH,OAAenE,KAAKS,EAAEZ,EAAwBuE,GAC/C,CACID,OAAG5D,GACNP,KAAKqE,EAAExE,EAAwBuE,GAAI7D,EACpC,CACU+D,GAAG/D,EAAQC,EAAWC,EAAQQ,GAEvC,OADAlB,MAAMuE,GAAG/D,EAAGC,EAAGC,EAAGQ,GACVT,GACP,IAAK,eACLR,KAAKC,GAAGsE,GAAKvE,KAAKuE,GACT,MAAL9D,GACYA,EAAG+D,GAAGxE,KAAKC,IAElB,MAALgB,GACHjB,KAAKuE,GAAGE,GAAGzE,KAAKC,IAEjBD,KAAKC,GAAGyE,GAAG1E,KAAK2E,IAChB3E,KAAKC,GAAG2E,MAAQ5E,KAAK4E,MACrB5E,KAAK6E,GAAG7E,KAAKC,IACbD,KAAK8E,GAAK9E,KAAKC,GAAG6E,GAClB,IAAI5D,GAAkB,QAA6B,EAAA6D,EAAcb,EAAGzD,GAIpE,GAHS,MAALS,IACHA,EAAE8D,yBAA0B,QAAe9D,EAAE8D,yBAAyB,QAAMhF,KAAMA,KAAKiF,MAEzE,MAAXjF,KAAKuE,GAAY,CACpB,IAAIW,EAAIlF,KAAKuE,GACbW,EAAEF,yBAA0B,QAAgBE,EAAEF,yBAAyB,QAAMhF,KAAMA,KAAKiF,I,CAEzFjF,KAAKmF,KACL,MAEA,IAAK,WACLnF,KAAKC,GAAGmF,GAAKpF,KAAKoF,GAClB,MAEA,IAAK,mBACLpF,KAAKmF,KACL,MAEA,IAAK,QACLnF,KAAKC,GAAG2E,MAAQ5E,KAAK4E,MACrB,MAEA,IAAK,cACL5E,KAAK+B,GAAGsD,KACR,MAEA,IAAK,aACLrF,KAAK+B,GAAGuD,KACR,MAEA,IAAK,qBACLtF,KAAK+B,GAAGwD,KACR,MAEA,IAAK,UACLvF,KAAK+B,GAAGyD,KACR,MAEA,IAAK,aACL,IAAIC,EAAMzF,KAAKC,GACXyF,EAAK1F,KAAK2F,YACdF,EAAIG,WAAaF,EACjB,MAEA,IAAK,mBACL1F,KAAKC,GAAG4F,GAAK7F,KAAK6F,GAClB,MAEA,IAAK,kBACL7F,KAAKC,GAAG6F,gBAAkB9F,KAAK8F,gBAC/B,MAEA,IAAK,YACL9F,KAAK+B,GAAGgE,KACR,MAEA,IAAK,QACL/F,KAAK+B,GAAGiE,KACR,MAEA,IAAK,UACLhG,KAAK+B,GAAGkE,KACR,MAEA,IAAK,cACLjG,KAAK+B,GAAGmE,KACR,MAEA,IAAK,gBACLlG,KAAK+B,GAAGoE,KACR,MAEA,IAAK,qBACA,QAAOnG,KAAKoG,KAChBpG,KAAK+B,GAAGsE,KAET,MAEA,IAAK,mBACA,QAAOrG,KAAKsG,KAChBtG,KAAK+B,GAAGwE,KAET,MAEA,IAAK,cACLvG,KAAK+B,GAAGyE,KACR,MAEA,IAAK,qBACLxG,KAAK+B,GAAG0E,KACR,MAEA,IAAK,QACLzG,KAAKC,GAAGyG,MAAQ1G,KAAK0G,MACrB,MAEA,IAAK,sBACL1G,KAAK+B,GAAG4E,KACR,MAEA,IAAK,uBACL3G,KAAK+B,GAAG6E,KACR,MAEA,IAAK,SACL5G,KAAKC,GAAG4G,OAAS7G,KAAK6G,OACtB7G,KAAK8G,GAAGC,KAKV,CACQ5B,KACP,GAAe,MAAXnF,KAAKuE,IAAyB,MAAXvE,KAAKC,MAGvB,QAAOD,KAAKmE,IAChB,GAAInE,KAAKuE,GAAGyC,GAAGC,MAAQjH,KAAKmE,GAAI,CAC/B,IACIuB,EAAK,EADC1F,KAAKC,GAEX2F,WAAaF,C,KACX,CACN,IACIwB,EAAM,EADClH,KAAKC,GAEX2F,WAAasB,C,CAGrB,CACQjC,GAAG1E,EAAQC,GAClBR,KAAKmF,IACN,CACAgC,GAAG5G,GACFR,MAAMoH,GAAG5G,GACM,MAAXP,KAAKC,IACRD,KAAKC,GAAGkH,GAAG5G,EAEb,CACA6G,GAAG7G,EAASC,EAASC,EAAkBQ,EAAWC,GAClC,MAAXlB,KAAKC,IACRD,KAAKC,GAAGmH,GAAG7G,EAAGC,EAAGC,EAAGQ,EAAGC,EAEzB,CACAmG,GAAG9G,EAAUC,GACZ,OAAOR,KAAKC,GAAGoH,GAAG9G,EAAGC,EACtB,CACA8G,KACCvH,MAAMuH,KACNtH,KAAKC,GAAGqH,IACT,CACUC,sBACT,OAAOvH,KAAKwH,gBACb,CACUC,oBAAoBlH,GAC7BP,KAAKwH,iBAAmBjH,EACxBP,KAAKC,GAAGyH,gBAAkBnH,CAC3B,CACUoH,GAAGpH,GAEZ,GADAR,MAAM4H,GAAGpH,GACM,MAAXP,KAAKC,GAAY,CACpB,IAAIO,EAAIR,KAAKC,GAAG2H,KAChB5H,KAAK6H,GAAGtH,EAAGC,E,CAEb,EA9VO,EAAAsH,IAAW,QAASjI,EAAyB,0BAAiC,IAAQqE,GAkK7E,EAAAE,GAAyB,IAAmB2D,EAAE,mBAAoB,KAAoBlI,EAAyBqE,EAAG,IAAI,IAAiB,EAAG,GAAG,CAAC3D,EAAqBC,KACxHD,EACxDyH,qBAAqB,mBAAoBxH,EAAEyH,SAAUzH,EAAE0H,SAAS,KAgM7D,MAAMlE,UAAuB,IAEnC9D,YAAYK,GACXR,MAAMQ,GAGC,KAAA4H,GAA8B,KAFrCnI,KAAKmI,GAAK5H,CACX,CAEA6H,GAAG7H,EAAqBC,GACvBT,MAAMqI,GAAG7H,EAAGC,EACb,CACAwB,KACChC,KAAKmI,GAAGE,qBAAuB,EAC/BrI,KAAKmI,GAAGlI,GAAGoI,qBAAuB,EAClCrI,KAAKmI,GAAGlI,GAAGqI,YAActI,KAAKmI,GAAGG,YACjCtI,KAAKmI,GAAGlI,GAAG2E,MAAQ5E,KAAKmI,GAAGvD,MAC3B5E,KAAKmI,GAAGlI,GAAGsI,GAAKvI,KAAKmI,GAAGI,GACxBvI,KAAKmI,GAAGlI,GAAGuI,GAAKxI,KAAKmI,GAAGI,GACxBvI,KAAKmI,GAAGlI,GAAGsF,GAAKvF,KAAKmI,GAAG5C,GACxBvF,KAAKmI,GAAGlI,GAAGwI,GAAKzI,KAAKmI,GAAGM,GACxBzI,KAAKmI,GAAGlI,GAAGyI,GAAK1I,KAAKmI,GAAGO,GACxB1I,KAAKmI,GAAGlI,GAAG0I,SAAW3I,KAAKmI,GAAGQ,SAC9B3I,KAAKmI,GAAGlI,GAAG2I,GAAK5I,KAAKmI,GAAGS,GACxB5I,KAAKmI,GAAGlI,GAAGqG,GAAKtG,KAAKmI,GAAG7B,GACxBtG,KAAKmI,GAAGlI,GAAGmG,GAAKpG,KAAKmI,GAAG/B,GACxBpG,KAAKmI,GAAGlI,GAAG4I,GAAK7I,KAAKmI,GAAGU,GACxB7I,KAAKmI,GAAGlI,GAAG6I,qBAAuB9I,KAAKmI,GAAGW,qBAC1C9I,KAAKmI,GAAGlI,GAAG8I,GAAK/I,KAAKmI,GAAGY,EACzB,CACA1D,KACCrF,KAAKmI,GAAGlI,GAAGqI,YAActI,KAAKmI,GAAGG,WAClC,CACAhD,KACCtF,KAAKmI,GAAGlI,GAAGwI,GAAKzI,KAAKmI,GAAGM,EACzB,CACAlD,KACCvF,KAAKmI,GAAGlI,GAAGyI,GAAK1I,KAAKmI,GAAGO,EACzB,CACAlD,KACCxF,KAAKmI,GAAGlI,GAAG0I,SAAW3I,KAAKmI,GAAGQ,QAC/B,CACA5C,KACC/F,KAAKmI,GAAGlI,GAAG2I,GAAK5I,KAAKmI,GAAGS,EACzB,CACA5C,KACChG,KAAKmI,GAAGlI,GAAGsI,GAAKvI,KAAKmI,GAAGI,EACzB,CACAtC,KACCjG,KAAKmI,GAAGlI,GAAGuI,GAAKxI,KAAKmI,GAAGK,EACzB,CACAtC,KACClG,KAAKmI,GAAGlI,GAAGsI,GAAKvI,KAAKmI,GAAGa,EACzB,CACA7C,KACCnG,KAAKmI,GAAGlI,GAAGuI,GAAKxI,KAAKmI,GAAGc,EACzB,CACAtC,KACC3G,KAAKmI,GAAGlI,GAAG8I,GAAK/I,KAAKmI,GAAGY,EACzB,CACAnC,KACC5G,KAAKmI,GAAGlI,GAAG6I,qBAAuB9I,KAAKmI,GAAGW,oBAC3C,CACAvC,KACCvG,KAAKmI,GAAGlI,GAAGqG,GAAKtG,KAAKmI,GAAG7B,EACzB,CACAD,KACCrG,KAAKmI,GAAGlI,GAAGmG,GAAKpG,KAAKmI,GAAG/B,EACzB,CACAI,KACCxG,KAAKmI,GAAGlI,GAAGsF,GAAKvF,KAAKmI,GAAG5C,EACzB,CACAkB,KACCzG,KAAKmI,GAAGlI,GAAG4I,GAAK7I,KAAKmI,GAAGU,EACzB,EAvEO,EAAAf,IAAW,QAAS9D,EAAgB,iBAAwB,IAAYE,E,uKCzWzE,MAAegF,UAA+B,IAEpDhJ,cACCH,QACA,IAAIQ,EAAIP,KAAKC,GACbM,EAAE4I,iBAAkB,QAAgB5I,EAAE4I,iBAAiB,QAAMnJ,KAAMA,KAAKoJ,IACzE,CACAC,KACC,OAAOrJ,KAAKsJ,EACb,CACAC,KACC,OAAOvJ,KAAKwJ,EACb,CACAC,KACC,OAAOzJ,KAAK0J,EACb,CACAC,KACC,OAAO3J,KAAK4J,EACb,CACAC,KACC,IAAItJ,GAAI,QAA6B,IAAc2D,EAAGlE,KAAKC,IAC3D,OAAS,MAALM,EACI,UAEDA,EAAEsJ,IACV,CACQT,GAAG7I,EAAQC,GAClB,IAAIC,GAAI,QAA6B,IAAcyD,EAAGlE,KAAKC,IAClD,MAALQ,IAGkB,wBAAlBD,EAAEsJ,aACL9J,KAAKsJ,GAAK7I,EAAEsJ,GACgB,uBAAlBvJ,EAAEsJ,aACZ9J,KAAK0J,GAAKjJ,EAAEuJ,GACgB,qBAAlBxJ,EAAEsJ,eACZ9J,KAAKwJ,GAAK/I,EAAEwJ,IAEd,CAYU3F,GAAG/D,EAAQC,EAAWC,EAAQQ,GAEvC,OADAlB,MAAMuE,GAAG/D,EAAGC,EAAGC,EAAGQ,GACVT,GACP,KAAK0I,EAAuBgB,IAAI,GAClBlK,KAAKC,GAAIkK,GAAKnK,KAAKoK,GACjC,MAEA,KAAKlB,EAAuBgB,IAAI,GAClBlK,KAAKC,GAAIoK,GAAKrK,KAAKsK,GACjC,MAEA,KAAKpB,EAAuBgB,IAAI,GAClBlK,KAAKC,GAAIkF,GAAKnF,KAAKuK,GACjC,MAEA,KAAKrB,EAAuBgB,IAAI,GAClBlK,KAAKC,GAAIA,GAAKD,KAAKwK,GACjC,MAEA,KAAKtB,EAAuBgB,IAAI,GAClBlK,KAAKC,GAAIwK,GAAKzK,KAAKyK,GACjC,MAEA,KAAKvB,EAAuBgB,IAAI,GAClBlK,KAAKC,GAAIuJ,GAAKxJ,KAAK0K,GACjC,MAEA,KAAKxB,EAAuBgB,IAAI,GAClBlK,KAAKC,GAAI0K,GAAK3K,KAAK4J,GACjC,MAEA,KAAKV,EAAuBgB,IAAI,IAClBlK,KAAKC,GAAI2K,GAAK5K,KAAK6K,GAKnC,EAtFO,EAAA/C,IAAW,QAASoB,EAAwB,yBAAgC,IAAyBhF,GAuFrG,EAAAgG,KAAgB,QAAQ,IAAoB,IAAkBhB,EAAwB,uBAAwB,CAAE,0BAA2B,CAAQ,EAAA4B,EAAO5G,GAAK,4BAA6B,CAAQ,EAAA4G,EAAO5G,GAAK,6BAA8B,CAAQ,IAAcA,EAAG,MAAQ,oBAAqB,CAAQ,EAAA4G,EAAO5G,GAAK,uBAAwB,CAAE,KAAsB,QAA2B,IAAsB,IAAM,0BAA2B,CAAE,KAAyB,QAA8B,IAAyB,IAAM,sBAAuB,CAAQ,EAAA4G,EAAO5G,GAAK,uBAAwB,CAAQ,IAAcA,EAAG,MAAQ,wBAAyB,CAAE,EAAG,IAAY6G,EAAE,IAAM,mBAAoB,CAAE,KAAkB,QAAuB,IAAkB,IAAS7J,IAAM,uBAAwB,CAAE,EAAG,M,oNCzFtyB,MAAe8J,UAAkC,IAAxD,c,oBAmBW,KAAAC,IAAc,EACd,KAAAC,IAAc,EAIxB,KAAAC,oBAAiF,KACjF,KAAAC,0BAA6F,KA2FrF,KAAAP,GAAyB,KACzB,KAAAQ,IAAc,CAmBvB,CAtIWtH,KACT,OAAO,IAAIuH,EAA8BtL,KAC1C,CAEAiE,GAAG1D,GACFR,MAAMkE,GAAG1D,GACTP,KAAK4J,GAAoCrJ,CAC1C,CAEUgL,SACT,OAAO,CACR,CACUC,SACT,OAAO,CACR,CAUUlH,GAAG/D,EAAQC,EAAWC,EAAQQ,GAEvC,OADAlB,MAAMuE,GAAG/D,EAAGC,EAAGC,EAAGQ,GACVT,GACP,IAAK,eACLR,KAAK4J,GAAG6B,KACR,MAEA,IAAK,kBACLzL,KAAK4J,GAAG8B,KACR,MAEA,KAAKV,EAA0Bd,IAAI,GACnClK,KAAK4J,GAAG+B,KACR,MAEA,KAAKX,EAA0Bd,IAAI,GAGnC,GAFkBlK,KAAKC,GAAI2L,GAAK5L,KAAK6L,GACrC7L,KAAKiL,GAAKjL,KAAK6L,GACX7L,KAAK6L,GAAI,CACZ,IAAI3K,EAAsBlB,KAAKC,GAC/BiB,EAAEiK,qBAAsB,QAAgBjK,EAAEiK,qBAAqB,QAAMnL,KAAMA,KAAK8L,I,KAC1E,CACN,IAAI5G,EAAsBlF,KAAKC,GAC/BiF,EAAEiG,qBAAsB,QAAejG,EAAEiG,qBAAqB,QAAMnL,KAAMA,KAAK8L,I,CAEhF,MAEA,KAAKd,EAA0Bd,IAAI,GAGnC,GAFkBlK,KAAKC,GAAI8L,GAAK/L,KAAKgM,GACrChM,KAAKkL,GAAKlL,KAAKgM,GACXhM,KAAK6L,GAAI,CACZ,IAAId,EAAsB/K,KAAKC,GAC/B8K,EAAEK,2BAA4B,QAAgBL,EAAEK,2BAA2B,QAAMpL,KAAMA,KAAKiM,I,KACtF,CACN,IAAI5H,EAAsBrE,KAAKC,GAC/BoE,EAAE+G,2BAA4B,QAAe/G,EAAE+G,2BAA2B,QAAMpL,KAAMA,KAAKiM,I,CAE5F,MAEA,KAAKjB,EAA0Bd,IAAI,GACjBlK,KAAKC,GAAIgL,GAAKjL,KAAKyK,GACrC,MAEA,KAAKO,EAA0Bd,IAAI,GACjBlK,KAAKC,GAAIiM,GAAKlM,KAAKmM,GACrC,MAEA,KAAKnB,EAA0Bd,IAAI,GACjBlK,KAAKC,GAAIgK,GAAKjK,KAAKoM,GACrC,MAEA,IAAK,sBACL,GAAS,MAAL3L,EAAW,CACd,IAAIsH,EAAwBtH,EACxBT,KAAKqL,KACRtD,EAAEsE,iBAAkB,QAAetE,EAAEsE,iBAAiB,QAAMrM,KAAMA,KAAKsM,K,CAGzE,GAAS,MAALrL,EAAW,CACd,IAAIsL,EAAwBtL,EAC5B,GAAIsL,EAAEC,MAAQ,EAAG,CAChBxM,KAAK+L,KACL,K,CAED/L,KAAKqL,IAAK,EACVkB,EAAEF,iBAAkB,QAAgBE,EAAEF,iBAAiB,QAAMrM,KAAMA,KAAKsM,I,EAM3E,CACQR,GAAGvL,EAAQC,GACc,MAA5BR,KAAKmL,qBACRnL,KAAKmL,oBAAoBnL,KAAMQ,EAEjC,CACQyL,GAAG1L,EAAQC,GACoB,MAAlCR,KAAKoL,2BACRpL,KAAKoL,0BAA0BpL,KAAMQ,EAEvC,CACQ8L,GAAG/L,EAAQC,GAClBR,KAAK+L,IACN,CACQA,KACP,IACIU,EADOzM,KAAK0M,GACSjL,eACzBzB,KAAKsI,YAAsCmE,EAAKE,cACjD,CAGID,SACH,OAAO1M,KAAK6K,EACb,CACI6B,OAAGnM,GACN,IAAIC,EAAIR,KAAK6K,GACb7K,KAAK6K,GAAKtK,EACNC,GAAKR,KAAK6K,IACb7K,KAAKgI,qBAAqB,sBAAuBxH,EAAGR,KAAK6K,GAE3D,CAEU+B,SACT,OAAO,CACR,CACUC,OAAOtM,GAChBR,MAAM8M,OAAOtM,EACd,EArIO,EAAAuH,IAAW,QAASkD,EAA2B,4BAAmC,IAAyB9G,GAsI3G,EAAAgG,KAAgB,QAAQ,IAAoB,IAAkBc,EAA2B,uBAAwB,CAAE,wCAAyC,CAAE,GAAG,GAAS,kCAAmC,CAAE,GAAG,GAAS,uBAAwB,CAAE,KAA2B,QAAgC,IAA2B,IAAM,kCAAmC,CAAE,EAAG,KAAS,4BAA6B,CAAE,EAAG,KAAS,8BAA+B,CAAE,EAAG,GAAK,wBAAyB,CAAE,EAAG,YAMrf,MAAMM,UAAsC,IAElDpL,YAAYK,GACXR,MAAMQ,GAGC,KAAAuM,GAAgC,KAFvC9M,KAAK8M,GAAKvM,CACX,CAEAyB,KACCjC,MAAMiC,KACYhC,KAAK8M,GAAG7M,GAAI8M,GAAK/M,KAAK8M,GAAGE,EAC5C,CACAvB,KACC,IAAIlL,EAAsCP,KAAK8M,GAAG7M,GAClD,GAAkB,MAAdD,KAAK8M,GAAGvI,GAGX,OAFAhE,EAAEkK,GAAK,UACPlK,EAAEsK,GAAK,MAGRtK,EAAEkK,GAAwBzK,KAAK8M,GAAGvI,GAAI0I,GACtC1M,EAAEsK,GAAwB7K,KAAK8M,GAAGvI,GAAI2I,EACvC,CACAxB,KACmB1L,KAAK8M,GAAG7M,GAAI8M,GAAK/M,KAAK8M,GAAGE,EAC5C,CACArB,KACmB3L,KAAK8M,GAAG7M,GAAIkN,GAAKnN,KAAK8M,GAAGnC,EAC5C,EAzBO,EAAA7C,IAAW,QAASwD,EAA+B,gCAAuC,IAAgBpH,E,oGC9J3G,MAAMkJ,UAAiC,MACtC,EAAAtF,IAAW,QAASsF,EAA0B,2BAAkC,KAAWlJ,E,kDCD5F,MAAMmJ,UAA+B,MACpC,EAAAvF,IAAW,QAASuF,EAAwB,yBAAgC,KAAWnJ,E,uCCDnFoJ,E,YAAZ,SAAYA,GAIX,mBAIA,+BAIA,wBACA,CAbD,CAAYA,IAAAA,EAAuB,KAkB5B,IAAIC,GAAgC,QAAS,0BAA2B,gC,uCClBnEC,E,YAAZ,SAAYA,GAIX,mBAIA,yDAIA,sDACA,CAbD,CAAYA,IAAAA,EAAiB,KAkBtB,IAAIC,GAA0B,QAAS,oBAAqB,4D,mJCU5D,MAAMC,UAAmBC,EAAA,EAErBC,KACT,OAAO,IAAIF,CACZ,CACUG,SACT,OAAO,CACR,CACA3N,cACCH,QAyBO,KAAA+N,GAA2B,KAC3B,KAAAC,GAA2B,KAmFnC,KAAAC,gBAAuD,KAS/C,KAAAC,GAA8B,KAqB9B,KAAAC,IAAc,EA1IrBlO,KAAKmO,GAAWT,EAAYxJ,CAC7B,CACUH,KACT,OAAO,IAAIqK,EAAepO,KAC3B,CACAiE,GAAG1D,GACFR,MAAMkE,GAAG1D,GACTP,KAAKqO,GAAqB9N,CAC3B,CACU+N,SACT,OAAO,CACR,CAEIC,SACH,OAAOvO,KAAK8N,EACb,CACIS,OAAGhO,GAEN,GADiBA,GAAKP,KAAKuO,GACpB,CACN,IAAI9N,EAAST,KAAKuO,GAClBvO,KAAK8N,GAAKvN,EACVP,KAAKgI,qBAAqB,cAAevH,EAAGF,E,CAE9C,CAGciO,SACb,OAAOxO,KAAK+N,EACb,CACcS,OAAGjO,GAChB,IAAIC,EAAIR,KAAK+N,GACb/N,KAAK+N,GAAKxN,EACVP,KAAKgI,qBAAqB,oBAAqBxH,EAAGR,KAAK+N,GACxD,CACUzJ,GAAG/D,EAAQC,EAAWC,EAAQQ,GAEvC,IAAIC,EACAgE,EACJ,OAHAnF,MAAMuE,GAAG/D,EAAGC,EAAGC,EAAGQ,GAGVT,GACP,IAAK,cACLU,EAA0BT,EAC1ByE,EAA0BjE,EACjB,MAALC,IACHA,EAAEuN,iBAAkB,QAAevN,EAAEuN,iBAAiB,QAAMzO,KAAMA,KAAK0O,MAE/D,MAALxJ,IACHA,EAAEuJ,iBAAkB,QAAgBvJ,EAAEuJ,iBAAiB,QAAMzO,KAAMA,KAAK0O,MAEzE1O,KAAKqO,GAAGjM,GAAGlB,EAAGgE,GACdlF,KAAKmH,IAAG,GACRnH,KAAK2O,KACL,MAEA,IAAK,oBACLzN,EAA0BT,EAC1ByE,EAA0BjE,EACjB,MAALC,IACHA,EAAE8M,iBAAkB,QAAe9M,EAAE8M,iBAAiB,QAAMhO,KAAMA,KAAK4O,KACvE1N,EAAE2N,gBAAkB,MAEZ,MAAL3J,IACHA,EAAE8I,iBAAkB,QAAgB9I,EAAE8I,iBAAiB,QAAMhO,KAAMA,KAAK4O,KACxE1J,EAAE2J,gBAAkB7O,MAErBA,KAAKqO,GAAGnM,GAAGhB,EAAGgE,GACL,MAALA,GAAgF,QAAnE,EAAA4J,EAAA,IAAiCC,EAAA,EAAkB7K,EAAGlE,KAAKuE,MAC3EW,EAAE8J,cAAkChP,KAAKuE,GACzCvE,KAAKiP,GAAGjP,KAAK8G,IACb9G,KAAKqO,GAAGa,GAAGlP,KAAKuE,GAAGyC,KAEpBhH,KAAK2O,KACL,MAEA,IAAK,mBACL3O,KAAKqO,GAAGa,GAASjO,GACjB,MAEA,IAAK,YACLjB,KAAKqO,GAAGc,GAASlO,GACjB,MAEA,IAAK,eACL,IACIoD,EAAkBpD,EACb,MAFaR,GAEM,MAAXT,KAAKwO,IACrBxO,KAAKwO,GAAGY,GAAG,MAEH,MAAL/K,GAAwB,MAAXrE,KAAKwO,IACrBxO,KAAKwO,GAAGY,GAAGpP,KAAK8G,GAAGuI,GAEpB,MAEA,IAAK,cAEL,IAAK,gBAEL,IAAK,kBACLrP,KAAKsP,KAKP,CACQZ,GAAGnO,EAAQC,GACI,mBAAlBA,EAAEsJ,cACL9J,KAAKiP,GAAGjP,KAAK8G,GAEf,CAEQ8H,GAAGrO,EAAQC,GACU,MAAxBR,KAAKgO,iBACRhO,KAAKgO,gBAAgBhO,KAAM,IAAI,MAE3BA,KAAKkO,IACTlO,KAAKqO,GAAGkB,IAEV,CAEAC,SAASjP,EAAqBC,GAC7BR,KAAKiO,GAAKzN,CACX,CACAiP,WAAWlP,GACVP,KAAKiO,GAAK,IACX,CACAyB,kBACC1P,KAAKmH,IAAG,EACT,CACAwI,YAAYpP,GACI,MAAXP,KAAK4P,GACR5P,KAAK4P,GAAGC,WAAuBtP,EAAG,GAElCuP,OAAOD,WAAuBtP,EAAG,EAEnC,CACUwP,GAAGxP,EAASC,GACrBR,KAAKqO,GAAG2B,KACRjQ,MAAMgQ,GAAGxP,EAAGC,EACb,CAEAyP,GAAG1P,GACFR,MAAMkQ,GAAG1P,GACTP,KAAKkQ,GAAG3P,EAAGP,KAAK8G,GACjB,CACUoJ,GAAG3P,EAAYC,GACxB,IAAIC,EACAQ,EACAC,EAAoBV,EACpB0E,EAAI1E,EAAE2P,YAAY1P,EAAGQ,GACzBR,EAAIyE,EAAEkL,GACNnP,EAAIiE,EAAEmL,GACNrQ,KAAKiP,GAAGzO,GACO,MAAXR,KAAKiO,KACRjO,KAAKkO,IAAK,EACVlO,KAAKiO,GAAG1N,GACRP,KAAKkO,IAAK,GAEXhN,EAAEqO,IACH,CACAnI,GAAG7G,EAASC,EAASC,EAAkBQ,EAAWC,GACjDnB,MAAMqH,GAAG7G,EAAGC,EAAGC,EAAGQ,EAAGC,GACrB,IAAIgE,EAAIlF,KAAKsQ,GAAGC,KAAKtP,GACrBiE,EAAEsL,GAAG/P,GACDT,KAAKyQ,GAAGvL,IAGZlF,KAAK0Q,GAAGxL,EACT,CACQ+J,GAAG1O,GACV,IAAIC,EACAC,EACAQ,EAAIV,EAAE4P,YAAY3P,EAAGC,GACzBD,EAAIS,EAAEmP,GACN3P,EAAIQ,EAAEoP,GACS,MAAXrQ,KAAKuO,IAA4B,MAAdvO,KAAKuO,GAAGzL,KAC1B9C,KAAKuO,IAAMvO,KAAKwO,KACnBxO,KAAKwO,GAAKxO,KAAKuO,IAED,MAAXvO,KAAKwO,IAAehO,EAAEmQ,UACrB3Q,KAAKwO,GAAGvH,OAASzG,EAAEyG,QACtBjH,KAAKwO,GAAGvH,MAAQzG,EAAEyG,OAEfjH,KAAKwO,GAAGoC,QAAUpQ,EAAEoQ,SACvB5Q,KAAKwO,GAAGoC,OAASpQ,EAAEoQ,SAIvB,CACAC,GAAGtQ,EAAYC,GACdT,MAAM8Q,GAAGtQ,EAAGC,GACKA,EAAGyB,IACrB,EAvMO,EAAA6F,IAAW,QAAS4F,EAAY,aAAoBC,EAAA,EAAiBzJ,EAAG,CAAC4M,EAAA,IA6M1E,MAAM1C,UAAuB2C,EAAA,EAEnC7Q,YAAYK,GACXR,MAAMQ,GAGG,KAAAyQ,GAAiB,KAuBnB,KAAAC,GAAoB,IAAIC,EAAA,EAcxB,KAAAC,GAAiB,KACjB,KAAAC,GAAuB,KAxC9BpR,KAAKgR,GAAKzQ,CACX,CAEA8Q,KACCtR,MAAMsR,KACDrR,KAAKsR,IACTtR,KAAKgR,GAAGxI,GAAK+I,EAAA,EAASzO,GACtB9C,KAAKgR,GAAGzI,GAAKgJ,EAAA,EAAS3O,GAExB,CACU8I,GAAGnL,EAAqBC,GAC7BA,EAAEC,EAAE+L,MAAQ,GACfxM,KAAKiR,GAAGhQ,EAAEuQ,IAAIhR,EAEhB,CACUiR,GAAGlR,EAAWC,GACvB,OAAOR,KAAK0R,GAAGnR,EAAGC,GAAG,EACtB,CACUmR,GAAGpR,EAAWC,GACvB,OAAO,IACR,CACUoR,GAAGrR,EAAqBC,GAClC,CACAqR,GAAGtR,EAAqBC,EAAQC,GAChC,CAEAqR,KACC/R,MAAM+R,KACN9R,KAAKiR,GAAGhQ,EAAE8Q,OACX,CACAjL,KACC/G,MAAM+G,KACN9G,KAAKgS,IACN,CACA9C,GAAG3O,GACgB,MAAdP,KAAKgR,GAAGzC,KACXvO,KAAKgR,GAAGzC,GAAG0D,WAAa1R,EAE1B,CAGA2B,GAAG3B,EAAyBC,GAC3B,GAAe,MAAXR,KAAKmR,GAAY,CACpBnR,KAAKmR,GAAKnR,KAAKkB,EAAE0O,GAAGsC,cAAc,UAClC,IAAIzR,EAAIT,KAAKkB,EAAE0O,GAAGuC,mBAAmBnS,KAAKmR,IAC1CnR,KAAKoR,GAAK,IAAIgB,EAAA,EAAiB,IAAIC,EAAA,EAAsB5R,GACzDT,KAAKmR,GAAGmB,aAAa,QAAStS,KAAKuS,GAAGtL,MAAMuL,YAC5CxS,KAAKmR,GAAGmB,aAAa,SAAUtS,KAAKuS,GAAG3B,OAAO4B,W,CAEtC,MAALjS,IACHA,EAAEkS,GAAG,MACLlS,EAAE6O,GAAG,MACL7O,EAAEmS,eAAgB,QAAenS,EAAEmS,eAAe,QAAM1S,KAAMA,KAAKmC,MAE3D,MAAL3B,IACW,MAAVR,KAAKqP,GACR7O,EAAE4O,GAAGpP,KAAKqP,GAEX7O,EAAEiS,GAAGzS,KAAKoR,IACV5Q,EAAEmS,GAAG3S,KAAKuS,IACV/R,EAAEkS,eAAgB,QAAgBlS,EAAEkS,eAAe,QAAM1S,KAAMA,KAAKmC,KAEtE,CACQA,GAAG5B,EAAQC,GAClBR,KAAKgS,IACN,CACA5P,GAAG7B,EAAyBC,GAC5B,CACAwP,KACgB,MAAXhQ,KAAKmR,KACRnR,KAAKmR,GAAGmB,aAAa,QAAStS,KAAKuS,GAAGtL,MAAMuL,YAC5CxS,KAAKmR,GAAGmB,aAAa,SAAUtS,KAAKuS,GAAG3B,OAAO4B,aAE7B,MAAdxS,KAAKgR,GAAGzC,IACXvO,KAAKgR,GAAGzC,GAAGoE,GAAG3S,KAAKuS,GAErB,CACUK,GAAGrS,EAAqBC,GAEjC,GADAT,MAAM6S,GAAGrS,EAAGC,GACRA,EACH,OAED,GAAe,MAAXR,KAAKmR,GACR,OAED,IAAI1Q,GAAa,EACbT,KAAKiR,GAAGhQ,EAAEuL,MAAQ,IACrB/L,GAAI,EACJT,KAAK6S,EAAEC,KACP9S,KAAK6S,EAAEE,EAAE/S,KAAKiR,IACoBjR,KAAK6S,EAAExO,IACvC2O,QAEH,IAAI9R,GAAoB,QAAS+R,KAAKC,MAAMlT,KAAKuS,GAAGY,OAChDjO,GAAoB,QAAS+N,KAAKC,MAAMlT,KAAKuS,GAAGa,MAChDrI,GAAoB,QAASkI,KAAKC,MAAMlT,KAAKuS,GAAGtL,QAChD5C,GAAoB,QAAS4O,KAAKC,MAAMlT,KAAKuS,GAAG3B,SACpD5Q,KAAK6S,EAAEQ,EAAErT,KAAKmR,GAAGmC,mBAAoB,EAAGpS,EAAGgE,EAAG6F,EAAG1G,EAAGnD,EAAGgE,EAAG6F,EAAG1G,GACzD5D,GACHT,KAAK6S,EAAEU,GAET,CACAhE,KACCvP,KAAKgS,IACN,CACA/P,KACA,CACAkN,GAAG5O,GACgB,MAAdP,KAAKgR,GAAGzC,IACXvO,KAAKgR,GAAGzC,GAAGiF,IAEb,EAlHO,EAAA1L,IAAW,QAASsG,EAAgB,iBAAwB2C,EAAA,EAAqB7M,E,+PCtOlF,MAAMuP,UAAwCC,EAAA,EAGpDpC,EAAE/Q,EAAWC,GACZ,GAAKA,EAAEC,EAAEkQ,QAKR,OAAO3Q,KAAK2T,yBAAyBpT,EAAGC,EAAEU,EAAGV,EAAES,EAAGT,EAAED,GALnC,CACjB,IAAIE,EAAYF,EAAIC,EAAEU,EAAE0P,OAASpQ,EAAEU,EAAEkS,IAAM5S,EAAES,EAAE2P,OAE/C,OADgB5Q,KAAK2T,yBAAyBlT,EAAGT,KAAKqR,GAAI7Q,EAAEC,EAAGD,EAAED,E,CAKnE,CACAqT,EAAErT,EAAWC,GACZ,GAAKA,EAAEC,EAAEkQ,QAKR,OAAO3Q,KAAK6T,wBAAwBtT,EAAGC,EAAEU,EAAGV,EAAES,EAAGT,EAAED,GALlC,CACjB,IAAIE,EAAYT,KAAK6T,wBAAwBtT,EAAGP,KAAKqR,GAAI7Q,EAAEC,EAAGD,EAAED,GAEhE,OADAE,GAAKA,EAAKD,EAAEU,EAAEkS,IAAM5S,EAAES,EAAE2P,QAAWpQ,EAAEU,EAAE0P,OAChCnQ,C,CAIT,CACQqT,GAAGC,GAEV,OADgBC,MAAMC,QAAQF,GAAWA,EAAU,IAGpD,CACAG,EAAE3T,EAAoBC,EAAWC,EAAWQ,GAC3C,IAAIC,EAkBAmO,EACA8E,EACAC,EACAb,EACAT,EArBA5N,EAAUjE,EAAEC,EACZ6J,EAAU9J,EAAEA,EACZoD,EAAUpD,EAAER,EAEZ8L,GADatL,EAAEV,GACD8D,EAAEsM,SAGhB0D,GAFYrU,KAAKqU,EACLrU,KAAKqT,EACLhP,EAAE+O,KACdkB,EAAYjQ,EAAEuM,OACdyC,EAAYnO,EAAEkO,IACdQ,EAAY1O,EAAE0L,OACdU,EAAYvG,EAAEqI,IACdL,EAAYhI,EAAE6F,OACd2D,EAAYvU,KAAKqR,GAAG+B,IACpBoB,EAAYxU,KAAKqR,GAAGT,OACpB6D,EAAczU,KAAK8T,GAAGvT,GACtB2T,EAAY,oBAMZ/F,GAAc,EACT,MAALsG,IACHtG,GAAK,GAEN,IAAK,IAAIuG,EAAalU,EAAGkU,EAAKjU,EAAGiU,IAE/BxT,EADGiN,EACCsG,EAAEC,GAEFnU,EAAEgQ,KAAKmE,GAERnI,GACCrL,EAAIuS,EAAgCkB,KACvCzT,EAAIuS,EAAgCkB,IAEjCzT,EAAIuS,EAAgCmB,KACvC1T,EAAIuS,EAAgCmB,IAErCvF,EAAInO,EAAI,EACRiT,EAAIlB,KAAK4B,IAAIxF,GACb+E,EAAI,GAAMnB,KAAK6B,KAAK,EAAIX,IAAM,EAAIA,IAClCZ,GAAKvT,KAAKmB,GAAKiT,GAAKE,EAAItU,KAAK+U,GAC7BxB,EAAIc,EAAId,EACRT,GAAMS,EAAIgB,EAAID,GAAKE,EACnBjB,GAAKT,EAAMO,EAAIN,GAAMa,EACjBzF,EACHsG,EAAEC,GAAMnB,EAERhT,EAAEgQ,KAAKmE,EAAInB,KAGRrS,EAAIuS,EAAgCkB,KACvCzT,EAAIuS,EAAgCkB,IAEjCzT,EAAIuS,EAAgCmB,KACvC1T,EAAIuS,EAAgCmB,IAErCvF,EAAInO,EAAI,EACRiT,EAAIlB,KAAK4B,IAAIxF,GACb+E,EAAI,GAAMnB,KAAK6B,KAAK,EAAIX,IAAM,EAAIA,IAClCZ,GAAKvT,KAAKmB,GAAKiT,GAAKrB,EAAI/S,KAAK+U,GAC7BxB,EAAIjC,EAAIiC,EACRA,GAAKA,EAAIF,EAAIN,GAAKa,EACdzF,EACHsG,EAAEC,GAAMnB,EAERhT,EAAEgQ,KAAKmE,EAAInB,GAIf,CACAiB,EAAEjU,EAAoBC,EAAWC,EAAWQ,EAAWC,GAGtD,MAAO,CACN8T,GAHGhV,KAAKiV,GAAG1U,EAAE2U,IAIbC,GAHGnV,KAAKiV,GAAG1U,EAAE6U,IAMf,CACU/F,EAAE9O,EAAWC,EAAQC,GAE9B,OADAV,MAAMsP,EAAE9O,EAAGC,EAAGC,GACNF,GACP,IAAK,qBAEL,IAAK,qBACLP,KAAKmB,GAAKsS,EAAgC4B,GAAGrV,KAAKsU,GAClDtU,KAAK+U,GAAKtB,EAAgC4B,GAAGrV,KAAKsU,GAAKb,EAAgC4B,GAAGrV,KAAKqT,GAKjG,CAKWrB,gBACV,OAAOyB,EAAgCmB,EACxC,CACWxM,gBACV,OAAOqL,EAAgCkB,EACxC,CACAzU,cACCH,QAnIO,KAAAsR,GAAW,KA0HX,KAAAlQ,GAAa,EACb,KAAA4T,GAAa,EASpB/U,KAAKqR,GAAK,IAAIiE,EAAA,EAAK,EAAG,EAAG,EAAG,EAAG,EAChC,CACQ3B,yBAAyBpT,EAAWC,EAASC,EAASQ,GAC7D,IAAIC,GAAKX,EAAIE,EAAE2S,KAAO5S,EAAEyG,MAAQzG,EAAE4S,IAAM3S,EAAEmQ,OAE1C,OADA1P,EAAIuS,EAAgC4B,GAAGrV,KAAKsU,GAAKpT,GAAKT,EAAEmQ,OAAS5Q,KAAK+U,IAC/DtB,EAAgC8B,GAAGrU,EAC3C,CACQ2S,wBAAwBtT,EAAWC,EAASC,EAASQ,GAE5D,OADQR,EAAE2S,IAAMpT,KAAKwV,wBAAwBjV,EAAGE,EAAEmQ,QACtCpQ,EAAE4S,IAAM3S,EAAEmQ,QAAUpQ,EAAEyG,KACnC,CACQwO,wBAAwBlV,EAAWC,EAASC,EAASQ,EAASC,GAErE,OADQlB,KAAKwV,wBAAwBjV,EAAGU,EAAE2P,QAC9BpQ,EAAE4S,IAAM3S,EAAEmQ,QAAUpQ,EAAEyG,KACnC,CACQuO,wBAAwBjV,EAAWC,GAC1CD,EAAIA,EAAIkT,EAAgCkB,GAAMpU,EAAIkT,EAAgCmB,GAAKrU,EAAIkT,EAAgCmB,GAAMnB,EAAgCkB,GACjK,IAAIlU,EAAIgT,EAAgC4B,GAAG9U,GAE3C,OADSP,KAAKmB,GAAKV,GAAKD,EAAIR,KAAK+U,EAElC,CACAW,UAAUnV,GACT,IAAIC,EAAgB,oBAAJD,EACZE,EAAYwS,KAAK4B,IAAIrU,GAEzB,MADgB,GAAMyS,KAAK6B,KAAK,EAAIrU,IAAM,EAAIA,GAE/C,CACAiV,UAAUnV,GAET,OADAA,EAAI0S,KAAK0C,IAAI,EAAIpV,GACV0S,KAAK2C,MAAMrV,EAAI,IAAMA,EAAI,IAAM,mBACvC,CACQ0U,GAAG1U,GACV,OAAIA,EAAIkT,EAAgCkB,GAChClB,EAAgCkB,GAEpCpU,EAAIkT,EAAgCmB,GAChCnB,EAAgCmB,GAEjCrU,CACR,EA5KO,EAAAuH,IAAW,QAAS2L,EAAiC,kCAAyCC,EAAA,EAAsBxP,GAyH5G,EAAA0Q,GAAa,YACb,EAAAD,IAAc,Y,0BC3HvB,MAAMkB,UAA0CC,EAAA,EAGtD5V,cACCH,QAFO,KAAAgV,GAAW,KAGlB/U,KAAK+U,GAAK,IAAIO,EAAA,EAAK,EAAG,EAAG,EAAG,EAAG,EAChC,CACAhE,EAAE/Q,EAAWC,GACZ,GAAKA,EAAEC,EAAEkQ,QAKR,OAAO3Q,KAAK2T,yBAAyBpT,EAAGC,EAAEU,EAAGV,EAAES,EAAGT,EAAED,GALnC,CACjB,IAAIE,EAAYF,EAAIC,EAAEU,EAAE+F,MAAQzG,EAAEU,EAAEiS,KAAO3S,EAAES,EAAEgG,MAE/C,OADgBjH,KAAK2T,yBAAyBlT,EAAGT,KAAK+U,GAAIvU,EAAEC,EAAGD,EAAED,E,CAKnE,CACAqT,EAAErT,EAAWC,GACZ,OAAKA,EAAEC,EAAEkQ,QAKD3Q,KAAK6T,wBAAwBtT,EAAGC,EAAEU,EAAGV,EAAES,EAAGT,EAAED,IAJnCP,KAAK6T,wBAAwBtT,EAAGP,KAAK+U,GAAIvU,EAAEC,EAAGD,EAAED,GAC1CC,EAAEU,EAAEiS,KAAO3S,EAAES,EAAEgG,OAAUzG,EAAEU,EAAE+F,KAKrD,CACQ6M,GAAGC,GAEV,OADgBC,MAAMC,QAAQF,GAAWA,EAAU,IAGpD,CACAG,EAAE3T,EAAoBC,EAAWC,EAAWQ,GAC3C,IAAIC,EACAgE,EAAUjE,EAAEC,EACZ6J,EAAU9J,EAAEA,EACZoD,EAAUpD,EAAER,EACZsH,EAAa9G,EAAEV,EACfgM,GAAclI,EAAEsM,QAChBkC,EAAY7S,KAAKqU,EACjB0B,EAAY/V,KAAKqT,EACjBgB,EAAYhQ,EAAE8O,KACdmB,EAAYjQ,EAAE4C,MACdoM,EAAYnO,EAAEiO,KACdS,EAAY1O,EAAE+B,MACdqK,EAAYvG,EAAEoI,KACdJ,EAAYhI,EAAE9D,MACdsN,EAAYvU,KAAK+U,GAAG5B,KACpBqB,EAAYxU,KAAK+U,GAAG9N,MACpBwN,EAAczU,KAAK8T,GAAGvT,GACtB2T,GAAa,EACR,MAALO,IACHP,GAAI,GAEL,IAAK,IAAI7E,EAAY7O,EAAG6O,EAAI5O,EAAG4O,IAM9B,GAJCnO,EADGgT,EACCO,EAAEpF,GAEF9O,EAAEgQ,KAAKlB,GAER9C,EAAG,CACN,IAAI4H,GAAajT,EAAI6U,GAAK,EACtBhO,IACHoM,EAAI,EAAIA,GAETA,EAAIE,EAAIC,GAAKH,EAAII,GAAKC,EACtB,IAAIJ,GAAaD,EAAKd,EAAIN,GAAMa,EAC5BM,EACHO,EAAEpF,GAAK+E,EAEP7T,EAAEgQ,KAAKlB,EAAG+E,E,KAEL,CACN,IAAIb,GAAarS,EAAI6U,GAAK,EACtBhO,IACHwL,EAAI,EAAIA,GAETA,EAAIjC,EAAIyB,GAAKQ,EAAIF,GAAKO,EAClBM,EACHO,EAAEpF,GAAKkE,EAEPhT,EAAEgQ,KAAKlB,EAAGkE,E,CAId,CACAiB,EAAEjU,EAAoBC,EAAWC,EAAWQ,EAAWC,GAGtD,MAAO,CACN8T,GAHGzU,EAAE2U,GAILC,GAHG5U,EAAE6U,GAMP,CACQzB,yBAAyBpT,EAAWC,EAASC,EAASQ,GAC7D,IAAIC,EAAYV,EAAE2S,KAAO3S,EAAEyG,OAAS1G,EAAIE,EAAE0S,MAAQ1S,EAAEwG,MAIpD,OAHIhG,IACHC,EAAI,EAAIA,GAEFlB,KAAKqT,EAAInS,EAAKlB,KAAM,CAC5B,CACQ6T,wBAAwBtT,EAAWC,EAASC,EAASQ,GAC5D,IAAIC,GAAaX,EAAIP,KAAKqT,GAAMrT,KAAM,EAItC,OAHIiB,IACHC,EAAI,EAAIA,GAEFT,EAAE0S,KAAO1S,EAAEwG,OAAS/F,EAAIV,EAAE2S,MAAQ3S,EAAEyG,KAC5C,CACQwO,wBAAwBlV,EAAWC,EAASC,EAASQ,EAASC,GACrE,IAAIgE,GAAa3E,EAAIP,KAAKqT,GAAMrT,KAAM,EAItC,OAHIkB,IACHgE,EAAI,EAAIA,GAEFzE,EAAE0S,KAAO1S,EAAEwG,OAAS/B,EAAI1E,EAAE2S,MAAQ3S,EAAEyG,KAC5C,EAhHO,EAAAa,IAAW,QAAS+N,EAAmC,oCAA2CC,EAAA,EAAwB5R,G,4NCqD3H,MAAM6K,UAAyBiH,EAAAjR,EAErC7E,cACCH,QAwBO,KAAAsB,GAAkB,KAmB1B,KAAA4U,IAAc,EAUN,KAAAC,GAA8B,EAStC,KAAAnU,GAAa,EAIL,KAAAoU,GAAW,KA2EX,KAAAC,GAA2B,KAY3B,KAAA/S,GAAmB,KAYnB,KAAAgT,GAAmB,KAC3B,KAAAC,GAA2B,KA4GjB,KAAAC,GAAmB,CAAEC,MAAO,KAAarC,EAAGsC,IAAKrC,EAAGqC,KAmEpD,KAAAC,GAAW,KA0Nb,KAAAzW,GAAa,EAuJrB,KAAA+N,gBAAsE,KAwB9D,KAAArJ,GAAe,KA6Df,KAAAgS,GAAWrB,EAAA,EAAKsB,MA1xBvB5W,KAAK+B,GAAK0R,EAAgC4B,GAAGtG,EAAiB5B,GAAG0J,QAAUpD,EAAgC4B,GAAGtG,EAAiB5B,GAAGiG,KAClIpT,KAAKmO,GAAWY,EAAkB7K,EAClClE,KAAK8W,kBAAoB,IAAIC,EAC7B,IAAIxW,EAAK,MACR,IAAIyW,EAAO,IAAIC,EAAA,EAEf,OADAD,EAAKpJ,GAAK5N,KACHgX,CACP,EAJO,GAKRzW,EAAEwF,IAAK,EACP/F,KAAKiN,GAAK1M,EACVP,KAAKiN,GAAGiK,GAAK,IAAIrB,EACjB,IAAIrV,EAAK,MACR,IAAIwW,EAAO,IAAIG,EAAA,EAEf,OADAH,EAAKpJ,GAAK5N,KACHgX,CACP,EAJO,GAKRxW,EAAEuF,IAAK,EACP/F,KAAKkN,GAAK1M,EACVR,KAAKkN,GAAGgK,GAAK,IAAIzD,EACjBzT,KAAKoX,KACLpX,KAAKqX,KACLrX,KAAKsX,IACN,CAEAC,iBAAiBhX,GAChBR,MAAMwX,iBAAiBhX,GACvBP,KAAKiN,GAAGuK,gBAAkCjX,GAC1CP,KAAKkN,GAAGsK,gBAAkCjX,EAC3C,CACA+W,KACCvX,MAAMuX,KACNtX,KAAKgD,GAAGyU,GAAGzX,KAAK0X,GACjB,CACAC,KACC,OAAO3X,KAAKG,EACb,CACAyX,KACC,OAAO5X,KAAKG,EACb,CAMUwC,KACT,OAAe,GAAX3C,KAAK6X,IACJ7X,KAAKiW,GACD,EAGF,CACR,CAEI6B,SACH,OAAO9X,KAAKkW,EACb,CACI4B,OAAGvX,GACNP,KAAKkW,GAAK3V,CACX,CAQI0J,SACH,OAAOjK,KAAKmW,EACb,CACIlM,OAAG1J,GAEN,GADiB+U,EAAA,EAAKyC,gBAAgB/X,KAAKmW,GAAI5V,GACxC,CACN,IAAIE,EAAST,KAAKmW,GAClBnW,KAAKmW,GAAK5V,EACVP,KAAKgY,GAAG,kBAAmBvX,EAAGF,E,CAEhC,CACA0X,KACC,OAAOjY,KAAKiK,EACb,CACQmN,KACHpX,KAAK+M,GAAG4D,UAGZ3Q,KAAKiK,GAAKjK,KAAKkY,GAAGlY,KAAK+M,GAAe,GAAX/M,KAAKmY,IACjC,CACQD,GAAG3X,EAASC,GACnB,IAAIC,EAAIF,EAAE6S,IACNnS,EAAIV,EAAE4S,KACNjS,EAAIX,EAAE0G,MACN/B,EAAI3E,EAAEqQ,OACN7F,EAAI0I,EAAgC4B,GAAG9U,EAAEsW,QACzCxS,EAAIoP,EAAgC4B,GAAG9U,EAAE6S,KACzCrL,EAAIgD,EAAI1G,EACRkI,EAAIhM,EAAE0G,MAAQ8H,EAAiB5B,GAAGlG,MAClC4L,EAAIY,EAAgC4B,GAAGtG,EAAiB5B,GAAGiG,KAE/D,GAAIrL,EAAIwE,EAAIvM,KAAK+B,GAAI,CACpB,IAAIsS,EAAItM,EAAI/H,KAAK+B,GAEjBd,IADQoT,EAAI9H,GACC,EAAKwC,EAAiB5B,GAAGlG,MACtC/F,EAAImT,EAAItF,EAAiB5B,GAAGlG,MACxBzG,IACCS,EAAI8N,EAAiB5B,GAAGgG,KAC3BlS,GAAM8N,EAAiB5B,GAAGgG,KAAOlS,EACtBA,EAAIC,EAAK6N,EAAiB5B,GAAGiL,QACxCnX,GAAOA,EAAIC,EAAK6N,EAAiB5B,GAAGiL,O,MAGhC,GAAIrQ,EAAIwE,EAAIvM,KAAK+B,GAAI,CAC3B,IACI6R,EADI5T,KAAK+B,GAAKwK,EACNxE,EACRuJ,EAAIjN,EAAKuP,EAAI,EACbb,EAAIhI,EAAK6I,EAAI,EACbpT,IACC8Q,EAAIuB,GACPvB,GAAMuB,EAAIvB,EACVyB,GAAMF,EAAIvB,GACAyB,EAAKF,EAAI7S,KAAK+B,KACxBuP,GAAM,GAAOuB,EAAI7S,KAAK+B,IACtBgR,GAAM,GAAOF,EAAI7S,KAAK+B,MAGxBtB,EAAIgT,EAAgC8B,GAAGjE,GACvCpM,EAAIuO,EAAgC8B,GAAGxC,GAAKtS,C,CAG7C,OADQ,IAAI6U,EAAA,EAAK,EAAGrU,EAAGR,EAAGS,EAAGgE,EAE9B,CACI4R,wBACH,OAAO9W,KAAKoW,EACb,CACIU,sBAAkBvW,GAErB,GADiBA,GAAKP,KAAK8W,kBACpB,CACN,IAAIrW,EAAST,KAAK8W,kBAClB9W,KAAKoW,GAAK7V,EACVP,KAAKgY,GAAG,oBAAqBvX,EAAGF,E,CAElC,CAEI0M,SACH,OAAOjN,KAAKqD,EACb,CACI4J,OAAG1M,GAEN,GADiBA,GAAKP,KAAKiN,GACpB,CACN,IAAIxM,EAAST,KAAKiN,GAClBjN,KAAKqD,GAAK9C,EACVP,KAAKgY,GAAG,QAASvX,EAAGF,E,CAEtB,CAEI2M,SACH,OAAOlN,KAAKqW,EACb,CACInJ,OAAG3M,GAEN,GADiBA,GAAKP,KAAKkN,GACpB,CACN,IAAIzM,EAAST,KAAKkN,GAClBlN,KAAKqW,GAAK9V,EACVP,KAAKgY,GAAG,QAASvX,EAAGF,E,CAEtB,CAIA8X,uBAAuB9X,GACtB,OAAOP,KAAKsY,0BAA0B/X,EACvC,CACA+L,GAAG/L,GACFP,KAAKuY,GAAKhY,CACX,CACAuL,GAAGvL,GACFP,KAAK+M,GAAKxM,CACX,CACA+X,0BAA0B/X,GACzB,OAAOP,KAAKmK,GAAG5J,GAAG,EAAM,EACzB,CACAyJ,GAAGzJ,EAASC,GACX,OAAOR,KAAKmK,GAAG5J,GAAG,EAAOC,EAC1B,CACQ2J,GAAG5J,EAASC,EAAYC,GAC/B,IAAIQ,EAAIV,EACJC,IACHS,EAAIjB,KAAKkY,GAAG3X,GAAG,IAEhB,IAAIW,EAAIlB,KAAKiN,GACT/H,EAAIlF,KAAKkN,GACTnC,EAAkB,IAAIyN,EAAA,EAAa,EAAGzJ,EAAiB7C,GAAIlM,KAAKyY,GAAIvX,EAAE4L,IAC1E/B,EAAEtK,EAAIT,KAAKwI,GACX,IAAInE,EAAkB,IAAImU,EAAA,EAAa,EAAGzJ,EAAiB7C,GAAIlM,KAAKyY,GAAIvT,EAAE4H,IAC1EzI,EAAE5D,EAAIT,KAAKwI,GACX,IAAIT,EAAI/H,KAAKiN,GAAGyL,GAAGzX,EAAEkS,KAAMpI,GACvBwB,EAAIvM,KAAKiN,GAAGyL,GAAGzX,EAAEmX,MAAOrN,GACxB8H,EAAI7S,KAAKkN,GAAGwL,GAAGzX,EAAEmS,IAAK/O,GACtB0R,EAAI/V,KAAKkN,GAAGwL,GAAGzX,EAAE4V,OAAQxS,GACzBgQ,GAAKtM,EAAItH,GAAKT,KAAKyY,GAAGxR,MACtBqN,GAAKyB,EAAItV,GAAKT,KAAKyY,GAAG7H,OACtByC,GAAK9G,EAAIxE,EAAS,EAAJtH,GAAUT,KAAKyY,GAAGxR,MAChC2M,GAAKf,EAAIkD,EAAS,EAAJtV,GAAUT,KAAKyY,GAAG7H,OAChCU,EAAU,IAAIgE,EAAA,EAAK,EAAGjB,EAAGC,EAAGjB,EAAGO,GAKnC,OAJAtC,EAAEqH,UAAU5J,EAAiB7C,IACzBoF,EAAEX,UACLW,EAAIvC,EAAiB7C,IAEfoF,CACR,CACAsH,4BAA4BrY,EAAUC,GACrC,IAAIC,EAAIF,EAAE4T,EACNlT,EAAIT,EAAE4T,EACNlT,EAAIV,EAAE2T,EAAI5T,EAAE4T,EACZjP,EAAI3E,EAAE6T,EAAI5T,EAAE4T,EAChB,GAAIlT,EAAI,GAAKgE,EAAI,EAChB,OAAO6J,EAAiB7C,GAClB,CACN,IAAInB,EAAU,IAAIuK,EAAA,EAAK,EAAG7U,EAAGQ,EAAGC,EAAGgE,GACnC,OAAOlF,KAAKsY,0BAA0BvN,E,CAExC,CACA8N,GAAGtY,GACF,IAAIC,EAAIR,KAAKiN,GACTxM,EAAIT,KAAKkN,GACTjM,EAAkB,IAAIuX,EAAA,EAAa,EAAGjY,EAAGP,KAAKyY,GAAIjY,EAAEsM,IACxD7L,EAAER,EAAIT,KAAKwI,GACX,IAAItH,EAAkB,IAAIsX,EAAA,EAAa,EAAGjY,EAAGP,KAAKyY,GAAIhY,EAAEqM,IACxD5L,EAAET,EAAIT,KAAKwI,GACX,IAAItD,EAAIlF,KAAK8Y,GACT/N,EAAIvK,EAAEuY,GAAG7T,EAAEiO,KAAMlS,GACjBoD,EAAI5D,EAAEsY,GAAG7T,EAAEkO,IAAKlS,GAChB6G,EAAIvH,EAAEuY,GAAG7T,EAAEkT,MAAOnX,GAClBsL,EAAI9L,EAAEsY,GAAG7T,EAAE2R,OAAQ3V,GACnB2R,EAAI9K,EAAIgD,EACRgL,EAAI1R,EAAIkI,EACR8H,EAAU,IAAIiB,EAAA,EAAK,EAAGvK,EAAGwB,EAAGsG,EAAGkD,GAOnC,OANe,GAAX/V,KAAKmY,KACR9D,EAAEsE,UAAU5J,EAAiB5B,IACzBkH,EAAE1D,UACL0D,EAAItF,EAAiB5B,KAGhBkH,CACR,CACA2E,GAAGzY,GACF,IAAIC,EAAIR,KAAKiN,GAAGgM,GAAG1Y,EAAE4T,GACjB1T,EAAIT,KAAKkN,GAAG+L,GAAG1Y,EAAE6T,GACrB,MAAc,CAAEoC,MAAO,KAAarC,EAAG3T,EAAG4T,EAAG3T,EAC9C,CACAyY,GAAG3Y,GACF,IAAIC,EAAIR,KAAKiN,GAAGkM,GAAG5Y,EAAE4T,GACjB1T,EAAIT,KAAKkN,GAAGiM,GAAG5Y,EAAE6T,GACrB,MAAc,CAAEoC,MAAO,KAAarC,EAAG3T,EAAG4T,EAAG3T,EAC9C,CACA2Y,GAAG7Y,GACF,OAAOP,KAAKkZ,GAAG3Y,EAChB,CACA4L,KACC,IAAI5L,GAAI,EAAAuO,EAAA,IAAqCuK,EAAsBnV,EAAGlE,KAAK8W,mBAClE,MAALvW,GACHA,EAAE+Y,gBAEJ,CACA5O,GAAGnK,GACH,CACAgZ,KACC,OAAO,CACR,CACAC,KACCxZ,KAAKgD,GAAGyW,KACR,IAAK,IAAIlZ,KAAK,QAAiBP,KAAK0Z,QACnCnZ,EAAE+G,IAEJ,CAEU2E,KACT,GAAe,GAAXjM,KAAK+C,IACR,IAAK/C,KAAKyY,GAAG9H,SAAW3Q,KAAKyY,GAAGxR,MAAQ,GAAKjH,KAAKyY,GAAG7H,OAAS,EAAG,CAChE,IAAIrQ,EAAYP,KAAKiN,GAAGgM,GAAGjZ,KAAKyY,GAAGtF,KAAQnT,KAAKyY,GAAGxR,MAAQ,GACvDzG,EAAYR,KAAKkN,GAAG+L,GAAGjZ,KAAKyY,GAAGrF,IAAOpT,KAAKyY,GAAG7H,OAAS,GAC3D5Q,KAAKuW,GAAY,CAAEC,MAAO,KAAarC,EAAG5T,EAAG6T,EAAG5T,E,OAGjD,IAAKR,KAAKyY,GAAG9H,SAAW3Q,KAAKyY,GAAGxR,MAAQ,GAAKjH,KAAKyY,GAAG7H,OAAS,EAAG,CAChE,IAAInQ,EAAYT,KAAKiN,GAAGgM,GAAGjZ,KAAKyY,GAAGtF,MAC/BlS,EAAYjB,KAAKkN,GAAG+L,GAAGjZ,KAAKyY,GAAGrF,KACnCpT,KAAKuW,GAAY,CAAEC,MAAO,KAAarC,EAAG1T,EAAG2T,EAAGnT,E,CAGnD,CACU0Y,OACL,QAAO3Z,KAAKuW,GAAGpC,KAAM,QAAOnU,KAAKuW,GAAGnC,KACvCpU,KAAKiM,KAEN,IAAI1L,EAAYP,KAAKuW,GAAGpC,EACpB3T,EAAYR,KAAKuW,GAAGnC,EACxB,KAAK,QAAO7T,MAAO,QAAOC,GAAI,CAC7B,IAAIC,EAAYT,KAAKgH,GAAGmM,KACpBlS,EAAYjB,KAAKgH,GAAGoM,IACpBlS,EAAYlB,KAAKgH,GAAGC,MACpB/B,EAAYlF,KAAKgH,GAAG4J,OACxB,GAAI1P,EAAIlB,KAAK0W,GAAGzP,WACT,CACN,IAAI8D,EAAkB,IAAIyN,EAAA,EAAa,EAAGzJ,EAAiB7C,GAAIlM,KAAKyY,GAAIzY,KAAKiN,GAAGH,IAChF/B,EAAEtK,EAAIT,KAAKwI,GACX,IAAInE,EAAYrE,KAAKiN,GAAGyL,GAAGnY,EAAGwK,GAG7BtK,EAFc,GAAXT,KAAK+C,GACAsB,EAAIrE,KAAKyY,GAAGxR,MACX/F,EAAI,EAETmD,EAAIrE,KAAKyY,GAAGxR,MAEbxG,EAAIS,EAAIlB,KAAK0W,GAAG0B,MACnB3X,EAAIT,KAAK0W,GAAG0B,MAAQlX,EACVT,EAAIT,KAAK0W,GAAGvD,OACtB1S,EAAIT,KAAK0W,GAAGvD,K,CAGd,GAAIjO,EAAIlF,KAAK0W,GAAG9F,YACT,CACN,IAAIrE,EAAkB,IAAIiM,EAAA,EAAa,EAAGzJ,EAAiB7C,GAAIlM,KAAKyY,GAAIzY,KAAKkN,GAAGJ,IAChFP,EAAE9L,EAAIT,KAAKwI,GACX,IAAIqK,EAAY7S,KAAKkN,GAAGwL,GAAGlY,EAAG+L,GAG7BtL,EAFc,GAAXjB,KAAK+C,GACA8P,EAAI7S,KAAKyY,GAAG7H,OACX1L,EAAI,EAET2N,EAAI7S,KAAKyY,GAAG7H,OAEb3P,EAAIiE,EAAIlF,KAAK0W,GAAGG,OACnB5V,EAAIjB,KAAK0W,GAAGG,OAAS3R,EACXjE,EAAIjB,KAAK0W,GAAGtD,MACtBnS,EAAIjB,KAAK0W,GAAGtD,I,CAGdpT,KAAK4Z,GAAG,IAAItE,EAAA,EAAK,EAAG7U,EAAGQ,EAAGC,EAAGgE,IAAI,E,CAEnC,CACU2U,SACT,OAAO,CACR,CAEUC,KACT,IAAIvZ,EAAUR,MAAM+Z,KACpB,GAAe,MAAX9Z,KAAKiN,IAAyB,MAAXjN,KAAKkN,GAC3B,OAAO3M,EAERP,KAAK+Z,KACL,IAAIvZ,EAAYD,EAAE4S,KACd1S,EAAYF,EAAE6S,IACH,GAAXpT,KAAKmY,KACJnY,KAAKuY,GAAGtR,MAAQjH,KAAK0W,GAAGzP,MAC3BzG,EAAI,GAAOR,KAAKuY,GAAGtR,MAAQ,EACjBzG,EAAID,EAAE0G,MAAQjH,KAAK0W,GAAG0B,MAChC5X,EAAIR,KAAK0W,GAAG0B,MAAQpY,KAAKuY,GAAGtR,MAClBzG,EAAIR,KAAK0W,GAAGvD,OACtB3S,EAAIR,KAAK0W,GAAGvD,MAETnT,KAAKuY,GAAG3H,OAAS5Q,KAAK0W,GAAG9F,OAC5BnQ,EAAI,GAAOT,KAAKuY,GAAG3H,OAAS,EAClBnQ,EAAIT,KAAKuY,GAAG3H,OAAS5Q,KAAK0W,GAAGG,OACvCpW,EAAIT,KAAK0W,GAAGG,OAAS7W,KAAKuY,GAAG3H,OACnBnQ,EAAIT,KAAK0W,GAAGtD,MACtB3S,EAAIT,KAAK0W,GAAGtD,MAGd,IAAInS,GAAa,GACZjB,KAAKga,IAAiB,GAAXha,KAAKmY,IAAWnY,KAAKiW,KAChCzV,EAAI,IACPA,EAAKA,EAAIyS,KAAKgH,MAAMzZ,GAAM,GAEvBA,EAAI,IACPA,EAAI,GAAKyS,KAAKiH,KAAK1Z,GAAKA,IAEpBD,EAAE6X,MAAQpY,KAAK0W,GAAG0B,MAAS,IAAO7X,EAAE6X,MAAQpY,KAAK0W,GAAG0B,OAAS7X,EAAE0G,MAAS,IAC5EzG,EAAIR,KAAK0W,GAAGvD,MAAQ5S,EAAE0G,OAAS1G,EAAE6X,MAAQpY,KAAK0W,GAAG0B,QACjDnX,GAAI,GACMV,EAAE4S,KAAOnT,KAAK0W,GAAGvD,MAASF,KAAKkH,IAAI5Z,EAAE4S,KAAOnT,KAAK0W,GAAGvD,MAAQ5S,EAAE0G,MAAS,KACjFzG,EAAIR,KAAK0W,GAAG0B,MAASnF,KAAKkH,IAAI5Z,EAAE4S,KAAOnT,KAAK0W,GAAGvD,MAC/ClS,GAAI,IAGN,IAAIC,EAAI,IAAIoU,EAAA,EAAK,EAAG9U,EAAGC,EAAGF,EAAE0G,MAAO1G,EAAEqQ,QACrC,GAAI5Q,KAAKga,GAAI,CACZ,IAAI9U,EAAIlF,KAAKgK,GAAGhK,KAAK+M,GAAI,GACzB7H,EAAIlF,KAAKqK,GAAGnF,GACZ,IAAI6F,EAAI7J,EAAEiS,KAAOjS,EAAE+F,MAAQ,EACvB5C,EAAInD,EAAEkS,IAAMlS,EAAE0P,OAAS,EAC3B,GAAI1P,EAAE+F,MAAQ/B,EAAE+B,MAAO,CACtB,IAAIc,EAAI7G,EAAE0P,OAAS1P,EAAE+F,MACjBsF,EAAIrH,EAAE+B,MACN4L,EAAI9K,EAAIwE,EACZrL,EAAI,IAAIoU,EAAA,EAAK,EAAGvK,EAAIwB,EAAI,EAAGlI,EAAIwO,EAAI,EAAGtG,EAAGsG,GACzC5R,GAAI,C,CAEL,GAAIC,EAAE0P,OAAS1L,EAAE0L,OAAQ,CACxB,IAAImF,EAAI7U,EAAE+F,MAAQ/F,EAAE0P,OAChByD,EAAInP,EAAE0L,OACN0D,EAAIyB,EAAI1B,EACZnT,EAAI,IAAIoU,EAAA,EAAK,EAAGvK,EAAIuJ,EAAI,EAAGjQ,EAAIgQ,EAAI,EAAGC,EAAGD,GACzCpT,GAAI,C,CAEDC,EAAEiS,KAAOjO,EAAEiO,OACdjS,EAAI,IAAIoU,EAAA,EAAK,EAAGpQ,EAAEiO,KAAMjS,EAAEkS,IAAKlS,EAAE+F,MAAO/F,EAAE0P,QAC1C3P,GAAI,GAEDC,EAAEkS,IAAMlO,EAAEkO,MACblS,EAAI,IAAIoU,EAAA,EAAK,EAAGpU,EAAEiS,KAAMjO,EAAEkO,IAAKlS,EAAE+F,MAAO/F,EAAE0P,QAC1C3P,GAAI,GAEDC,EAAEkX,MAAQlT,EAAEkT,QACflX,EAAI,IAAIoU,EAAA,EAAK,EAAGpQ,EAAEkT,MAAQlX,EAAE+F,MAAO/F,EAAEkS,IAAKlS,EAAE+F,MAAO/F,EAAE0P,QACrD3P,GAAI,GAEDC,EAAE2V,OAAS3R,EAAE2R,SAChB3V,EAAI,IAAIoU,EAAA,EAAK,EAAGpU,EAAEiS,KAAMjO,EAAE2R,OAAS3V,EAAE0P,OAAQ1P,EAAE+F,MAAO/F,EAAE0P,QACxD3P,GAAI,E,CAQN,OALIA,IACHjB,KAAKoa,IAAK,EACVpa,KAAKuY,GAAKrX,EACVlB,KAAKoa,IAAK,GAEJlZ,CACR,CACAmZ,GAAG9Z,EAASC,GACX,IAAIC,GAAa,EACbQ,GAAa,EACbC,EAAY,EACZgE,EAAIlF,KAAK+Z,KACThP,EAAY,EACZ1G,EAAY,EAahB,GAZK9D,EAAE6X,MAAQlT,EAAEkT,MAAS,IACzBrN,GAAMxK,EAAE6X,MAAQlT,EAAEkT,OAAS7X,EAAE0G,OAE1B1G,EAAE4S,KAAOjO,EAAEiO,OACd9O,EAAK4O,KAAKkH,IAAI5Z,EAAE4S,KAAOjO,EAAEiO,MAAQ5S,EAAE0G,OAE3B,GAAL5C,GAAe,GAAL0G,IACbtK,GAAI,GAED4D,EAAI0G,IACP9J,GAAI,GAEDR,EACH,GAAIQ,EAAG,CACN,IAAI8G,EAAI/H,KAAKqD,GAAGqV,IAAI,IAAKlY,GAEzBU,EADQlB,KAAKqD,GAAGqV,GAAG,IAAKlY,GAChBuH,C,MAIR7G,EAFQlB,KAAKqD,GAAGqV,IAAI,IAAKlY,GACjBR,KAAKqD,GAAGqV,GAAG,IAAKlY,GAI1B,OAAO,IAAI8Z,EAAA,EAAyB,KAAe,KAAc7Z,EAAGS,EACrE,CACA6Y,KACC,IAAIxZ,EAAkB,IAAIiY,EAAA,EAAa,EAAGzJ,EAAiB7C,GAAIlM,KAAKyY,GAAIzY,KAAKiN,GAAGH,IAChFvM,EAAEE,EAAIT,KAAKwI,GACX,IAAIhI,EAAkB,IAAIgY,EAAA,EAAa,EAAGzJ,EAAiB7C,GAAIlM,KAAKyY,GAAIzY,KAAKkN,GAAGJ,IAChFtM,EAAEC,EAAIT,KAAKwI,GACX,IAAI/H,EAAYT,KAAKiN,GAAGyL,GAAG3J,EAAiB5B,GAAGgG,KAAM5S,GACjDU,EAAYjB,KAAKiN,GAAGyL,GAAG3J,EAAiB5B,GAAGiL,MAAO7X,GAClDW,EAAYlB,KAAKkN,GAAGwL,GAAG3J,EAAiB5B,GAAGiG,IAAK5S,GAChD0E,EAAYlF,KAAKkN,GAAGwL,GAAG3J,EAAiB5B,GAAG0J,OAAQrW,GAEvD,OADAR,KAAK0W,GAAK,IAAIpB,EAAA,EAAK,EAAG7U,EAAIT,KAAKyY,GAAGxR,MAAO/B,EAAIlF,KAAKyY,GAAG7H,QAAS3P,EAAIR,GAAKT,KAAKyY,GAAGxR,OAAQ/F,EAAIgE,GAAKlF,KAAKyY,GAAG7H,QACjG5Q,KAAK0W,EACb,CACQrM,GAAG9J,GACV,IAAIC,EAAYR,KAAKua,GACjB9Z,EAAY,IAAOF,EAAE4S,KAAO5S,EAAE6X,OAC9BnX,EAAY,IAAOV,EAAE6S,IAAM7S,EAAEsW,QAC7B3V,EAAYX,EAAE0G,MACd/B,EAAY3E,EAAEqQ,OACd7F,EAAYyP,EAAA,EAASvZ,EAAEV,EAAE0G,MAAOzG,EAAG,GACnC6D,EAAYmW,EAAA,EAASvZ,EAAEV,EAAEqQ,OAAQpQ,EAAG,GACpCuH,EAAU/H,KAAKyY,GACflM,EAAYxE,EAAEd,MAAQc,EAAE6I,OACxBiC,EAAY9H,EAAIhD,EAAEd,MAClB8O,EAAY1R,EAAI0D,EAAE6I,OACNiC,EAAIkD,GACXxJ,IACJwJ,EAAIxJ,EAAIsG,GACXA,EAAIkD,EAAIxJ,EACRxB,EAAI8H,EAAI9K,EAAEd,QAEV8O,EAAIlD,EAAItG,EACRlI,EAAI0R,EAAIhO,EAAE6I,SAGZ,IAAI0D,EAAavJ,GAAK7J,EAClBmS,EAAahP,GAAKa,EAClB0O,EAAYU,EAAI7T,EAAI,GAAMsK,EAAIxK,EAAE4S,KAChC7B,EAAY+B,EAAIpS,EAAI,GAAMoD,EAAI9D,EAAE6S,IAChCL,EAAYuB,EAAI7T,EAAI,GAAMsK,EAAIxK,EAAE6X,MAChC7D,EAAYlB,EAAIpS,EAAI,GAAMoD,EAAI9D,EAAEsW,OAiBpC,OAhBIjD,EAAI,IACPA,EAAI,EACJb,EAAIa,EAAI7I,GAELgI,EAAI,IACPA,EAAI,EACJa,EAAIb,EAAIhI,GAELuG,EAAI,IACPA,EAAI,EACJiD,EAAIjD,EAAIjN,GAELkQ,EAAI,IACPA,EAAI,EACJjD,EAAIiD,EAAIlQ,GAEF,IAAIiR,EAAA,EAAK,EAAG1B,EAAGtC,EAAGyB,EAAIa,EAAGW,EAAIjD,EACrC,CACUmJ,GAAGla,GAEZ,GADAR,MAAM0a,GAAGza,KAAKyY,IACVlY,EAAEoQ,QACL,OAAO2E,EAAA,EAAKsB,MAEb,IAAIpW,EACJ,GAAID,EAAE0G,MAAQ1G,EAAEqQ,OAAQ,CACvB,IAAInQ,GAAY,SAAkB,QAAUF,EAAE0G,MAAQ1G,EAAEqQ,QAAU,GAClEpQ,EAAI,IAAI8U,EAAA,EAAK,EAAG/U,EAAE4S,KAAO1S,EAAGF,EAAE6S,IAAK7S,EAAEqQ,OAAQrQ,EAAEqQ,O,KACzC,CACN,IAAI3P,GAAY,SAAkB,QAAUV,EAAEqQ,OAASrQ,EAAE0G,OAAS,GAClEzG,EAAI,IAAI8U,EAAA,EAAK,EAAG/U,EAAE4S,KAAM5S,EAAE6S,IAAMnS,EAAGV,EAAE0G,MAAO1G,EAAE0G,M,CAE/C,OAAOzG,CACR,CACAka,GAAGna,GACF,OAAOP,KAAKya,GAAGla,EAChB,CACUoa,KACT,OAAO,IAAIC,EAAqB5a,KACjC,CACQ6a,GAAGta,GACD,MAALA,IACHA,EAAEqN,GAAK5N,KAET,CACU8a,GAAGva,GACZR,MAAM+a,GAAGva,GACTP,KAAKgD,GAA2BzC,CACjC,CACAwa,GAAGxa,EAASC,GACXT,MAAMgb,GAAGxa,EAAGC,GACZR,KAAKgb,GAAGhb,KAAKiN,IACbjN,KAAKgb,GAAGhb,KAAKkN,IACToI,EAAA,EAAKyC,gBAAgBxX,EAAGC,IAC3BR,KAAK2Z,KAEF3Z,KAAKga,KACRha,KAAKgH,GAAKhH,KAAK8Z,MAEhB9Z,KAAK+L,IACN,CAGI5H,SACH,OAAOnE,KAAKC,EACb,CACIkE,OAAG5D,GACN,IAAIC,EAAIR,KAAKC,GACbD,KAAKC,GAAKM,EACVP,KAAKgY,GAAG,oBAAqBxX,EAAGR,KAAKC,GACtC,CACAqQ,KACC,OAAOtQ,KAAKmE,EACb,CACA8W,KACC,OAAOjb,KAAKmE,EACb,CACU+W,KACTnb,MAAMmb,KACN,IAAI3a,EAAI0S,KAAKkI,IAAInb,KAAKgH,GAAGC,MAAOjH,KAAKgH,GAAG4J,QACxC5Q,KAAKmE,GAAK5D,CACX,CACA6a,KACC,OAAOpb,KAAKiW,EACb,CACAoF,KACC,OAAe,GAAXrb,KAAK8G,IACJ9G,KAAKsb,GACD,EAGFtb,KAAK8G,EACb,CACUkO,GAAGzU,EAAQC,EAAWC,EAAQQ,GAEvC,OADAlB,MAAMiV,GAAGzU,EAAGC,EAAGC,EAAGQ,GACVT,GACP,IAAK,mBACLR,KAAKoX,KACL,MAEA,IAAK,aACLpX,KAAKiM,KACL,MAEA,KAAK8C,EAAiB7E,IAAI,GAC1BlK,KAAK8X,GAAK9X,KAAK2C,KACA,MAAX3C,KAAKsW,KACRtW,KAAKsW,GAAGiF,4BAAyC,GAAXvb,KAAK8X,IAE5C,MAEA,KAAK/I,EAAiB7E,IAAI,GAC1BlK,KAAKiW,GAAKjW,KAAKsb,GACftb,KAAK8X,GAAK9X,KAAK2C,KACf3C,KAAKmY,GAAKnY,KAAKqb,KACA,MAAXrb,KAAKsW,KACRtW,KAAKsW,GAAGiF,4BAAyC,GAAXvb,KAAK8X,IAE5C,MAEA,KAAK/I,EAAiB7E,IAAI,GAC1BlK,KAAKgH,GAAKhH,KAAK8Z,KACf,MAEA,IAAK,oBACL,GAAe,MAAX9Z,KAAKsW,GAAY,CACpB,IAAIpV,EAAIlB,KAAKsW,GACbpV,EAAE8M,iBAAkB,QAAe9M,EAAE8M,iBAAiB,QAAMhO,KAAMA,KAAKoJ,KACvEpJ,KAAKsW,GAAGzH,gBAAkB,I,CAG3B,GADA7O,KAAKsW,IAAK,EAAAxH,EAAA,IAAqCuK,EAAsBnV,EAAGlE,KAAK8W,mBAC9D,MAAX9W,KAAKsW,GAAY,CACpB,IAAIpR,EAAIlF,KAAKsW,GACbpR,EAAE8I,iBAAkB,QAAgB9I,EAAE8I,iBAAiB,QAAMhO,KAAMA,KAAKoJ,KACxEpJ,KAAKsW,GAAGzH,gBAAkB7O,KAC1BA,KAAKsW,GAAGiF,4BAAyC,GAAXvb,KAAK8X,E,CAE5C9X,KAAKgD,GAAGwY,IAAG,EAAA1M,EAAA,IAAqCuK,EAAsBnV,EAAGzD,IAAI,EAAAqO,EAAA,IAAqCuK,EAAsBnV,EAAGjD,IAC5H,MAAXjB,KAAKsW,KACRtW,KAAKsW,GAAGtH,cAAgBhP,KACxBA,KAAKgD,GAAGyY,GAAGzb,KAAKgH,IAChBhH,KAAKgD,GAAGyU,GAAGzX,KAAK0X,KAEjB,MAEA,IAAK,QAEL,IAAK,QACL1X,KAAKgN,GAASvM,GACdT,KAAK6a,GAAS5Z,GACd,MAEA,KAAK8N,EAAiB7E,IAAI,GACrBlK,KAAK0b,KACT1b,KAAKuY,GAAKxJ,EAAiB7C,IAE5BlM,KAAKoX,KACLpX,KAAKqX,KACLrX,KAAKiM,KACLjM,KAAKgH,GAAKhH,KAAK8Z,KACf9Z,KAAKgD,GAAG2Y,KACR,MAEA,IAAK,mBACL3b,KAAKgD,GAAGyY,GAAGzb,KAAKgH,IAChB,MAEA,IAAK,kBACL,IAAK,IAAI+D,KAAK,QAAiB/K,KAAK0Z,QACnC3O,EAAE5D,IAAG,GAEN,MAEA,KAAK4H,EAAiB7E,IAAI,GAC1BlK,KAAKmE,GAAKnE,KAAK4b,GACf,MAEA,IAAK,oBACA5b,KAAK6F,IACT7F,KAAK6b,GAAG7b,KAAKsQ,KAAMtQ,KAAKib,MAEzB,MAEA,IAAK,0BACLjb,KAAKgD,GAAGyU,GAAGzX,KAAK0X,IAChB,MAEA,IAAK,qBAEL,IAAK,sBACL,IAAIrT,EAAYpD,GACZ,QAAOoD,KAAM,QAAWA,IAC3BrE,KAAKua,GAAK,KACVva,KAAK8b,GAAK,OAEV9b,KAAKua,GAAKlW,EACVrE,KAAK8b,GAAKzX,GAEX,MAEA,KAAK0K,EAAiB7E,IAAI,GAC1BlK,KAAK+b,KACL,MAEA,IAAK,0BACL,IAAK,IAAIhU,KAAK,QAAiB/H,KAAK0Z,QACnC3R,EAAEjI,KAML,CAEQsJ,GAAG7I,EAAQC,GACU,MAAxBR,KAAKgO,iBACRhO,KAAKgO,gBAAgBhO,KAAM,IAAIoN,EAAA,EAEjC,CACQJ,GAAGzM,GACD,MAALA,IACHA,EAAEqN,GAAK,KAET,CACQyJ,KACQ,MAAXrX,KAAKiN,KACRjN,KAAKiN,GAAGiI,GAAKlV,KAAKiK,GAAGkJ,KACrBnT,KAAKiN,GAAGmI,GAAKpV,KAAKiK,GAAGmO,OAEP,MAAXpY,KAAKkN,KACRlN,KAAKkN,GAAGgI,GAAKlV,KAAKiK,GAAGmJ,IACrBpT,KAAKkN,GAAGkI,GAAKpV,KAAKiK,GAAG4M,QAEtB7W,KAAKiN,GAAG+O,IAAG,GACXhc,KAAKkN,GAAG8O,IAAG,EACZ,CAGAC,cAEC,OADAjc,KAAK2E,GAAK3E,KAAKgD,GAAGkZ,GACXlc,KAAK2E,EACb,CACAwX,KACC,OAAOnc,KAAKgD,GAAGoZ,EAChB,CACAC,eACC,OAAOrc,KAAKgD,GAAGsZ,EAChB,CACUC,GAAGhc,EAAWC,GACvB,GAAyD,QAArD,EAAAsO,EAAA,IAA6B0N,EAAA,EAActY,EAAG1D,GAAa,CAC9D,IAAIC,EAAmBD,EACnBS,EAAkCV,EACtCU,EAAEqH,YAAc7H,EAAEgc,oBAAoBC,OACtCzb,EAAEsJ,GAAK9J,EAAEgc,oBAAoBE,S,MAE7B5c,MAAMwc,GAAGhc,EAAGC,EAEd,CACAgP,SAASjP,EAAqBC,GAC7BR,KAAK4c,GAAGrc,EAAGC,EACZ,CACAiP,WAAWlP,GACVP,KAAKsE,GAAG/D,EACT,CACAmP,kBACC1P,KAAK6c,IACN,CACAlN,YAAYpP,GACI,MAAXP,KAAKqB,GACRrB,KAAKqB,GAAGwO,WAAuBtP,EAAG,GAElCuP,OAAOD,WAAuBtP,EAAG,EAEnC,CACA6L,GAAG7L,GACFP,KAAK8c,GAAGvc,EACT,CACA0E,KACC,IAAI1E,EAAI,IAAIwc,EAAA,EACRvc,EAAIR,KAAKiN,GAAGqP,KACZ7b,EAAIT,KAAKkN,GAAGoP,KAChB/b,EAAEyc,KAAKC,KAAKzc,GACZD,EAAEyc,KAAKC,KAAKxc,GACZ,IAAK,IAAIQ,EAAI,EAAGA,EAAIjB,KAAK0Z,OAAOlN,MAAOvL,IAAK,CAC3C,IAAIC,EAAIlB,KAAK0Z,OAAOwD,OAAOjc,GAAG2G,KAC9BrH,EAAEmZ,OAAOuD,KAAK/b,E,CAMf,OAJAX,EAAE4c,KAAOnd,KAAKmd,KACd5c,EAAE6c,YAAcC,EAAA,EAAS7c,EAAER,KAAKyY,IAChClY,EAAE+c,YAAcD,EAAA,EAAS7c,EAAER,KAAKyY,IAChClY,EAAEgd,SAAWF,EAAA,EAAS7c,EAAER,KAAKyY,IACtBlY,CACR,CACAid,GAAGjd,EAASC,EAASC,GACpB,OAAOF,CACR,CACA+I,KACA,CAEcmU,SACb,OAAOzd,KAAK2W,EACb,CACc8G,OAAGld,GAChBP,KAAK2W,GAAKpW,CACX,CACAqL,GAAGrL,GACFP,KAAKyd,GAAKld,EACVP,KAAK+L,IACN,CACQA,KACP,GAAI/L,KAAKI,KAAOJ,KAAKyd,GAAG9M,QAAS,CAChC,IAAIpQ,EAAIP,KAAKsY,0BAA0BtY,KAAKyd,IAC5Czd,KAAKyd,GAAKnI,EAAA,EAAKsB,MACf5W,KAAK4Z,GAAGrZ,GAAG,E,CAEb,CACIH,SACH,OAAQJ,KAAKyY,GAAG9H,UAAY3Q,KAAKwI,GAAGmI,OACrC,EAjzBO,EAAA7I,IAAW,QAASiH,EAAkB,mBAA0BiH,EAAAjR,EAAcb,EAAG,CAAC4M,EAAA,IA2ClF,EAAAjO,GAAwB,EAoBxB,EAAAsK,GAAW,IAAImI,EAAA,EAAK,EAAU,CAAEkB,MAAO,KAAarC,GAAI,IAAKC,GAAI,aAAsB,CAAEoC,MAAO,KAAarC,EAAG,IAAKC,EAAG,cA0GhH,EAAAlI,GAAW,IAAIoJ,EAAA,EAAK,EAAG,EAAG,EAAG,EAAG,GAyoBxC,EAAApL,KAAgB,QAAQwT,EAAA,EAAoBC,EAAA,EAAkB5O,EAAkB,KAAM,CAAE,6BAA8B,CAAEzB,EAAA,GAA+B,QAAoCA,EAAA,EAA+B,IAAM,oCAAqC,CAAE,GAAG,GAAS,uBAAwB,CAAEE,EAAA,GAAyB,QAA8BA,EAAA,EAAyBuB,EAAiBlM,KAAO,2CAA4C,CAAE,GAAG,GAAS,kCAAmC,CAAE,GAAG,GAAS,oBAAqB,CAAE,EAAG4T,KAAO,kBAAmB,CAAQnB,EAAA,EAAMpR,EAAG6K,EAAiB5B,IAAM,iBAAkB,CAAE,GAAG,KAMpnB,MAAekM,UAA6BuE,EAAA,EAElD1d,YAAYK,GACXR,QAYO,KAAAkV,GAAgC,KAiGxC,KAAAjH,gBAAsE,KAC9D,KAAApL,GAAyB,KAUjC,KAAAib,GAA8B,KAC9B,KAAApP,gBAAsE,KAkCtE,KAAAiE,cAAkE,KAgBlE,KAAAoL,gBAAmF,KACnF,KAAAC,iBAAqF,KA3KpF/d,KAAKmO,GAAWkL,EAAsBnV,EACtClE,KAAK6d,GAAKtd,EACVP,KAAK+U,GAAK/U,KAAKmB,KACfnB,KAAKge,GAAGhe,KAAK+U,GACd,CACUiJ,GAAGzd,GACb,CACUY,KACT,OAAO,IAAI8c,EAAyBje,KACrC,CAGI6O,sBACH,OAAO7O,KAAKiV,EACb,CACIpG,oBAAgBtO,GACnBP,KAAKiV,GAAK1U,EACK,MAAXP,KAAK8C,KACR9C,KAAK8C,GAAGob,GAAK3d,EAEf,CACQ4d,GAAG5d,EAAQC,GACU,MAAxBR,KAAKgO,iBACRhO,KAAKgO,gBAAgBhO,KAAM,IAAIoN,EAAA,EAEjC,CACAgR,KACC,IAAI7d,EAAIP,KAAK8C,GACbvC,EAAEyN,iBAAkB,QAAgBzN,EAAEyN,iBAAiB,QAAMhO,KAAMA,KAAKme,KACxEne,KAAK8C,GAAGob,GAAKle,KAAK6O,gBAClB,IAAIrO,EAAIR,KAAK8C,GACbtC,EAAEkS,eAAgB,QAAgBlS,EAAEkS,eAAe,QAAM1S,KAAMA,KAAKqe,KACpE,IAAI5d,EAAIT,KAAK8C,GACbrC,EAAEsd,kBAAmB,QAAgBtd,EAAEsd,kBAAkB,QAAM/d,KAAMA,KAAKwQ,KAC1E,IAAIvP,EAAIjB,KAAK8C,GACb7B,EAAE6c,iBAAkB,QAAgB7c,EAAE6c,iBAAiB,QAAM9d,KAAMA,KAAKse,KACxEte,KAAK8C,GAAG6P,GAAK3S,KAAKue,QAClBve,KAAK8C,GAAG0b,GAAKxe,KAAKye,UAClBze,KAAK8C,GAAGiE,GAAK/G,KAAKub,2BACnB,CACQ/K,GAAGjQ,EAAQC,GACW,MAAzBR,KAAK+d,kBACR/d,KAAK+d,iBAAiB/d,KAAMQ,EAE9B,CACQ8d,GAAG/d,EAAQC,GACU,MAAxBR,KAAK8d,iBACR9d,KAAK8d,gBAAgB9d,KAAMQ,EAE7B,CACQke,KACQ,MAAX1e,KAAK8C,IACR9C,KAAK+U,GAAG7T,GAEV,CACUyd,GAAGpe,EAAWC,EAAQC,GAC/B,OAAQF,GACP,KAAK8Y,EAAqBnP,IAAI,GAC9BlK,KAAK0e,KACL,MAEA,IAAK,gBACL1e,KAAK+U,GAAG7T,IACR,MAEA,KAAKmY,EAAqBnP,IAAI,GACf,MAAXlK,KAAK8C,KACR9C,KAAK8C,GAAG6P,GAAK3S,KAAKue,SAEnB,MAEA,KAAKlF,EAAqBnP,IAAI,GACf,MAAXlK,KAAK8C,KACR9C,KAAK8C,GAAG0b,GAAKxe,KAAKye,WAEnB,MAEA,KAAKpF,EAAqBnP,IAAI,GACf,MAAXlK,KAAK8C,KACR9C,KAAK8C,GAAGiE,GAAK/G,KAAKub,6BAMQ,MAAxBvb,KAAKyO,iBACRzO,KAAKyO,gBAAgBzO,KAAM,IAAI,KAAyBO,GAE1D,CAEIyO,oBACH,OAAyBhP,KAAKS,EAAE4Y,EAAqBuF,sBACtD,CACI5P,kBAAczO,GACjBP,KAAKqE,EAAEgV,EAAqBuF,sBAAuBre,EACpD,CAEQmV,UAAUnV,EAAqBC,GACfD,EAAGse,GAAqBre,EAAEyH,SAA4BzH,EAAE0H,SAChF,CACQ2W,GAAGte,EAAqBC,GAC/BR,KAAK2e,GAAG,gBAAiBpe,EAAGC,EAC7B,CACA8Y,iBACgB,MAAXtZ,KAAK8C,IACR9C,KAAK8C,GAAGgc,GAAG,EAAG,EAAG,EAAG,EAEtB,CAGIhc,SACH,OAAO9C,KAAK4C,EACb,CACIE,OAAGvC,GACNP,KAAK4C,GAAKrC,EACkB,MAAxBP,KAAKyO,iBACRzO,KAAKyO,gBAAgBzO,KAAM,IAAI,KAAyB,mBAE1D,CAGA+e,GAAGxe,GACF,GAA0B,MAAtBP,KAAKgP,eAAyBzO,EAAE0G,MAAQ,GAAK1G,EAAEqQ,OAAS,EAC3D,OAAOrQ,EAER,IAAIC,EAAI,IAAI8U,EAAA,EAAK,EAAG,EAAG,EAAG/U,EAAE0G,MAAO1G,EAAEqQ,QACjCnQ,EAAIT,KAAKgP,cAAc0L,GAAGla,GAC1BS,EAAU8N,EAAiB5B,GAC3BjM,EAAUlB,KAAKgP,cAAc/E,GAC7B/E,EAAY+N,KAAKkI,IAAInb,KAAKiS,WAAWrB,OAAQ5Q,KAAKiS,WAAWhL,OAC7D8D,EAAY7J,EAAE+F,MAAQhG,EAAEgG,MAC5BjH,KAAK8C,GAAGqb,GAAM3d,EAAEyG,MAAQxG,EAAEwG,MAAS/B,EAAI6F,EACvC,IAAI1G,EAAkBrE,KAAKgP,cAAc/B,GACrClF,EAAkB/H,KAAKgP,cAAc9B,GACrCX,EAAkB,IAAIiM,EAAA,EAAa,EAAGxY,KAAKiS,WAAYzR,EAAG6D,EAAEyI,IAChEP,EAAE9L,EAAIA,EACN,IAAIoS,EAAkB,IAAI2F,EAAA,EAAa,EAAGxY,KAAKiS,WAAYzR,EAAGuH,EAAE+E,IAChE+F,EAAEpS,EAAIA,EACN,IAAIsV,EAAY1R,EAAEqU,GAAGzX,EAAEkS,KAAM5G,GACzB8H,EAAYtM,EAAE2Q,GAAGzX,EAAE4V,OAAQhE,GAC3ByB,GAAcyB,EAAIvV,EAAEyG,MAASjH,KAAK8C,GAAGqb,GACrC9K,GAAcgB,EAAI7T,EAAEoQ,OAAU5Q,KAAK8C,GAAGqb,IAAM3d,EAAEoQ,OAASpQ,EAAEyG,OAE7D,OADAjH,KAAK8C,GAAG+O,GAAY,CAAE2E,MAAO,KAAarC,EAAGG,EAAGF,EAAGf,GAC5C9S,CACR,CACAkS,GAAGlS,GACFP,KAAK+U,GAAG7P,EAAE3E,EACX,CACAoS,GAAGpS,GACFP,KAAK+U,GAAG1Q,EAAE9D,EACX,CACA6O,GAAG7O,GACFP,KAAK+U,GAAGhK,EAAExK,EACX,CAEQ8d,GAAG9d,EAAQC,GACQ,MAAtBR,KAAK0S,eACR1S,KAAK0S,cAAc1S,KAAM,IAAIqN,EAAA,EAE/B,CACAmG,KACCxT,KAAK+U,GAAG7T,GACT,CACA6H,GAAGxI,GACFP,KAAK+U,GAAGhN,EAAExH,EACX,CACU2T,IACTnU,MAAMmU,IACNlU,KAAK6d,GAAGxK,EAAIrT,KAAK2I,QAClB,EA5KO,EAAAb,IAAW,QAASuR,EAAsB,uBAA8BuE,EAAA,EAAS1Z,EAAG,CAAC,OAmG5E,EAAA0a,sBAA4ClB,EAAA,EAAmB3V,EAAE,gBAAuBgH,EAAkB7K,EAASmV,EAAsBnV,EAAG,IAAIyZ,EAAA,EAAiB,EAAG,KAAMtE,EAAqBzG,KA+ExM,EAAA1I,KAAgB,QAAQwT,EAAA,EAAoBC,EAAA,EAAkBtE,EAAsB,KAAM,CAAE,8BAA+B,CAAE,GAAG,GAAS,UAAW,CAAE,EAAG,MAAQ,YAAa,CAAE,EAAG,MAAQ,aAAc,CAAQ/D,EAAA,EAAMpR,EAAGoR,EAAA,EAAKsB,SAMhO,MAAMqH,UAAiC,KAE7C/d,YAAYK,GACXR,QAOS,KAAAQ,EAA0B,KAO1B,KAAAgM,EAAU,KAIZ,KAAAtL,EAAiB,KAUjB,KAAAT,EAAY,EA3BnBR,KAAKuM,EAAI+I,EAAA,EAAKsB,MACd5W,KAAKO,EAAIA,EACTP,KAAKO,EAAEuC,GAAK,IAAIkc,EAAA,EAChBhf,KAAKO,EAAEuC,GAAGA,GAAK9C,KAAKO,EAAEsd,GACtB7d,KAAKO,EAAE6d,IACR,CAEAld,IACKlB,KAAKuM,EAAEoE,SAGX3Q,KAAKO,EAAEwe,GAAG,IAAIE,EAAA,EAAK,EAAGjf,KAAKuM,EAAEtF,MAAOjH,KAAKuM,EAAEqE,QAC5C,CAEA1L,EAAE3E,GACDP,KAAKO,EAAEuC,GAAGoD,GAAG3F,EACd,CAEAwK,EAAExK,GACDP,KAAKiB,EAAIV,EACTP,KAAKO,EAAEuC,GAAGqD,GAAG5F,EACd,CACA8D,EAAE9D,GACDP,KAAKuM,EAAIhM,EACTP,KAAKO,EAAEuC,GAAGyD,GAAGhG,GACbP,KAAKO,EAAEiT,IACR,CAEI/S,QACH,OAAOT,KAAKQ,CACb,CACAuH,EAAExH,GACDP,KAAKQ,EAAID,EACTP,KAAKO,EAAEuC,GAAGoc,GAAG3e,EACd,EArCO,EAAAuH,IAAW,QAASmW,EAA0B,4BA2C/C,MAAMkB,UAA4Cnb,EAAA,EAExD9D,YAAYK,GACXR,MAAMQ,GAGG,KAAAuM,GAAsC,KAF/C9M,KAAK8M,GAAKvM,CACX,CAEAyB,KACCjC,MAAMiC,KACN,IAAIzB,EAAgCP,KAAK8M,GAAG7M,GAC5CM,EAAEwJ,GAAK/J,KAAK8M,GAAGjC,GACftK,EAAEgW,GAAKvW,KAAK8M,GAAGrC,GACflK,EAAE6e,gBAAkBpf,KAAK8M,GAAGvC,GAC5BhK,EAAE6I,GAAKpJ,KAAK8M,GAAG5B,GACf3K,EAAEmK,GAAK1K,KAAK8M,GAAGd,GACfzL,EAAEiZ,GAAKxZ,KAAK8M,GAAGnC,EAChB,CACAe,KACC,IAAInL,EAAgCP,KAAK8M,GAAG7M,GAC5C,GAAkB,MAAdD,KAAK8M,GAAGvI,GAGX,OAFAhE,EAAEJ,GAAK,UACPI,EAAEH,GAAK,MAGRG,EAAEJ,GAAwBH,KAAK8M,GAAGvI,GAAI0I,GACtC1M,EAAEH,GAAwBJ,KAAK8M,GAAGvI,GAAI2I,EACvC,CACAvB,KAC8B3L,KAAK8M,GAAG7M,GAAI8J,GAAK/J,KAAK8M,GAAGjC,EACvD,CACAY,KAC8BzL,KAAK8M,GAAG7M,GAAIsW,GAAKvW,KAAK8M,GAAGrC,EACvD,CACA4U,KAC8Brf,KAAK8M,GAAG7M,GAAImf,gBAAkBpf,KAAK8M,GAAGvC,EACpE,CACAsH,KAC8B7R,KAAK8M,GAAG7M,GAAImJ,GAAKpJ,KAAK8M,GAAG5B,EACvD,CACAoU,KAC8Btf,KAAK8M,GAAG7M,GAAIyK,GAAK1K,KAAK8M,GAAGd,EACvD,CACA4F,KAC8B5R,KAAK8M,GAAG7M,GAAIuZ,GAAKxZ,KAAK8M,GAAGnC,EACvD,EA3CO,EAAA7C,IAAW,QAASqX,EAAqC,sCAA6Cnb,EAAA,EAAgBE,GAiDvH,MAAMqb,UAAwCJ,EAEpDjf,YAAYK,GACXR,MAAMQ,GAGC,KAAAif,GAAkC,KAFzCxf,KAAKwf,GAAKjf,CACX,CAEA8Q,KACCtR,MAAMsR,KACDrR,KAAKsR,CAEX,CACAtP,KACCjC,MAAMiC,KACY,MAAdhC,KAAKwf,GAAGnI,KACXrX,KAAKwf,GAAGnI,GAAGoI,GAAKzf,KAAKwf,GAAGzT,GACxB/L,KAAKwf,GAAGnI,GAAGqI,GAAK1f,KAAKwf,GAAGxS,GAE1B,CACAjJ,KACmB,MAAd/D,KAAKwf,GAAGnI,KACXrX,KAAKwf,GAAGnI,GAAGoI,GAAKzf,KAAKwf,GAAGzT,GAE1B,CACAoM,KACmB,MAAdnY,KAAKwf,GAAGnI,KACXrX,KAAKwf,GAAGnI,GAAGqI,GAAK1f,KAAKwf,GAAGxS,GAE1B,EA3BO,EAAAlF,IAAW,QAASyX,EAAiC,kCAAyCJ,EAAqCjb,GAiCpI,MAAM0W,UAA6B+E,EAAA,EAEzCzf,YAAYK,GACXR,MAAMQ,GAcG,KAAAqf,GAAuB,KA2CvB,KAAAxE,GAAW,KAkBrB,KAAAkB,GAAY,KACZ,KAAAF,GAAY,KACZ,KAAAF,GAAe,KA0DP,KAAA2D,GAAapJ,IAtIpBzW,KAAKob,GAAK9F,EAAA,EAAKsB,MACf5W,KAAK4f,GAAKrf,EACVP,KAAK4f,GAAGE,GAAK,EACb9f,KAAK4f,GAAGjW,GAAK,IACd,CACA0K,EAAE9T,GACD,OAAO,CACR,CACAwf,GAAGxf,GACFP,KAAKuM,EAAEyT,GAAGzf,GACVP,KAAK4f,GAAGxT,GAAG7L,GACXP,KAAKigB,IACN,CAEUC,SACT,OAAO,CACR,CACAC,KACC,IAAI5f,EACAC,EACAC,EACAQ,EACAC,EACAgE,EAAIlF,KAAKuM,EAAEqG,GAAGrS,EAAGC,EAAGC,EAAGQ,EAAGC,GAC9BX,EAAI2E,EAAEkL,GACN5P,EAAI0E,EAAEmL,GACN5P,EAAIyE,EAAE6V,GACN9Z,EAAIiE,EAAE8P,GACN9T,EAAIgE,EAAEiQ,GACNnV,KAAKsc,GAAK7b,EACVT,KAAKkc,GAAKjb,EACVjB,KAAKoc,GAAKlb,EACV,IAAI6J,EAAI/K,KAAKuM,EAAErL,IAKf,GAJAlB,KAAK4f,GAAGhL,GAAK7J,EAAExK,EACfP,KAAK4f,GAAG7K,GAAKhK,EAAE7F,EACflF,KAAK4f,GAAGjL,GAAY,MAAP5J,EAAEvK,EAAYuK,EAAEvK,EAAI,IAAI4f,EAAA,EACrCpgB,KAAK4f,GAAGze,GAAY,MAAP4J,EAAEtK,EAAYsK,EAAEtK,EAAI,IAAI2f,EAAA,EACb,GAApBpgB,KAAK4f,GAAGjL,GAAGnI,MACd,IAAK,IAAInI,EAAI,EAAGA,EAAI0G,EAAExK,EAAEiM,MAAOnI,IAC9BrE,KAAK4f,GAAGjL,GAAGnD,IAAIzG,EAAExK,EAAEgQ,KAAKlM,IAG1B,GAAiB,GAAb0G,EAAEtK,EAAE+L,MACP,IAAK,IAAIzE,EAAI,EAAGA,EAAIgD,EAAE7F,EAAEsH,MAAOzE,IAC9B/H,KAAK4f,GAAGze,GAAGqQ,IAAIzG,EAAE7F,EAAEqL,KAAKxI,GAG3B,CACAsY,GAAG9f,GAEF,GADAR,MAAMsgB,GAAG9f,GACwB,MAA7BP,KAAK4f,GAAG9I,kBAA2B,CACtC,IAAItW,EAAgDR,KAAK4f,GAAG9I,kBAC5DtW,EAAE4O,GAAGpP,KAAKuM,EAAE+T,IACZ9f,EAAEiS,GAAGlS,E,CAEP,CAEUggB,GAAGhgB,GACZR,MAAMwgB,GAAGhgB,GACTP,KAAKob,GAAK7a,EACuB,MAA7BP,KAAK4f,GAAG9I,mBACyC9W,KAAK4f,GAAG9I,kBAC1DnE,GAAG3S,KAAKob,GAEZ,CACAoF,KACC,OAAO,IAAIlL,EAAA,EAAK,EAAG,EAAG,EAAGtV,KAAKob,GAAGnU,MAAOjH,KAAKob,GAAGxK,OACjD,CACA+K,KACkC,MAA7B3b,KAAK4f,GAAG9I,mBACyC9W,KAAK4f,GAAG9I,kBAC1DtD,IAEJ,CAIAiI,GAAGlb,GACgB,MAAdP,KAAK4f,GAAGtJ,KACXtW,KAAK4f,GAAGtJ,GAAGrE,WAAa1R,EAE1B,CACAib,GAAGjb,EAAyBC,GAI3B,GAHkB,MAAdR,KAAK4f,GAAGtJ,KACXtW,KAAK4f,GAAGtJ,GAAGrE,WAAajS,KAAK4f,GAAG5Y,IAExB,MAALzG,EAAW,CACd,IAAIE,EAAIF,EAAEuC,GACD,MAALrC,GACHT,KAAK4f,GAAG1B,GAAG7Z,EAAEoc,OAAOhgB,EAAEmU,IAEvBrU,EAAEkS,GAAG,MACLlS,EAAE6O,GAAG,K,CAEN,GAAS,MAAL5O,EAAW,CACd,IAAIS,EAAIT,EAAEsC,GACD,MAAL7B,GACHjB,KAAK4f,GAAG1B,GAAG7Z,EAAEmN,IAAIvQ,EAAE2T,IAEf5U,KAAKob,GAAGzK,SACZ3Q,KAAKugB,GAAGvgB,KAAKob,IAEA,MAAVpb,KAAKqP,GACRrP,KAAKqgB,GAAGrgB,KAAKqP,E,CAGN,MAAL7O,GACHR,KAAK0gB,GAAG1gB,KAAKqP,EAEf,CACQqR,GAAGngB,GACV,IAAIC,EAAIR,KAAK4f,GAAGlI,GACP,GAALlX,IACHD,EAAEuS,KACFvS,EAAE4N,GAAG3N,EAAGA,IAETD,EAAEwV,EAAE/V,KAAKob,GAAGjI,KAAMnT,KAAKob,GAAGhI,IAAKpT,KAAKob,GAAGnU,MAAOjH,KAAKob,GAAGxK,QAC7C,GAALpQ,GACHD,EAAEgT,GAEJ,CACUoN,KACT3gB,KAAK4gB,GAAGC,GAAKtP,EAAA,EAAShF,EACtBvM,KAAK8gB,GAAGD,GAAKtP,EAAA,EAAShF,EACtBvM,KAAK4gB,GAAGG,QAAUxP,EAAA,EAAS+O,GAC3BtgB,KAAK8gB,GAAGC,QAAUxP,EAAA,EAAS+O,GAC3BvgB,MAAM4gB,IACP,CACAlJ,GAAGlX,GACFP,KAAK6f,GAAKtf,EACuB,MAA7BP,KAAK4f,GAAG9I,mBACY9W,KAAK4f,GAAG9I,kBAAmB/N,GAAGxI,EAEvD,CAEIygB,SACH,OAAOhhB,KAAK6f,EACb,CACImB,OAAGzgB,GACNP,KAAK6f,GAAKtf,CACX,EA/IO,EAAAuH,IAAW,QAAS8S,EAAsB,uBAA8B+E,EAAA,EAAkBzb,GAqJ3F,MAAM6S,UAA6BsC,EAEzCnZ,cACCH,MAAM,IAAIkhB,EAAA,EACX,CACIC,eACH,OAAelhB,KAAKS,EAAEsW,EAAqBoK,iBAC5C,CACID,aAAS3gB,GACZP,KAAKqE,EAAE0S,EAAqBoK,iBAAkB5gB,EAC/C,CAEQmV,UAAUnV,EAAqBC,GACfD,EAAG6gB,GAAG,WAAY5gB,EAAEyH,SAAUzH,EAAE0H,SACxD,CACQkZ,GAAG7gB,EAAWC,EAAQC,GAEvB,aADEF,IAEmBP,KAAK6d,GAAIwD,eAAoB,MAAL5gB,EAAY,KAAeA,GAC7ET,KAAK+U,GAAG7T,KAKTnB,MAAM4e,GAAGpe,EAAGC,EAAGC,EAChB,EAxBO,EAAAqH,IAAW,QAASiP,EAAsB,uBAA8BsC,EAAsBnV,GAUrF,EAAAid,iBAAuCzD,EAAA,EAAmB3V,EAAE,WAAY,KAAoBgP,EAAsB7S,EAAG,IAAIyZ,EAAA,EAAiB,EAAG,KAAM5G,EAAqBuK,KAoBlL,MAAeC,UAAwC1hB,EAAA,EAEnDkE,KACT,OAAO,IAAIob,EAAoCnf,KAChD,CACAiE,GAAG1D,GACFR,MAAMkE,GAAG1D,GACTP,KAAKwK,GAA0CjK,CAChD,CAQU+D,GAAG/D,EAAQC,EAAWC,EAAQQ,GAEvC,OADAlB,MAAMuE,GAAG/D,EAAGC,EAAGC,EAAGQ,GACVT,GACP,IAAK,eACLR,KAAKwK,GAAGkB,KACR,MAEA,KAAK6V,EAAgCrX,IAAI,GACzClK,KAAKwK,GAAGmB,KACR,MAEA,KAAK4V,EAAgCrX,IAAI,GACzClK,KAAKwK,GAAGiB,KACR,MAEA,KAAK8V,EAAgCrX,IAAI,GACzClK,KAAKwK,GAAG6U,KACR,MAEA,KAAKkC,EAAgCrX,IAAI,GACzClK,KAAKwK,GAAGqH,KACR,MAEA,KAAK0P,EAAgCrX,IAAI,GACzClK,KAAKwK,GAAG8U,KACR,MAEA,KAAKiC,EAAgCrX,IAAI,GACzClK,KAAKwK,GAAGoH,KAKV,EAhDO,EAAA9J,IAAW,QAASyZ,EAAiC,kCAAyC1hB,EAAA,EAAyBqE,GAiDvH,EAAAgG,KAAgB,QAAQwT,EAAA,EAAoBC,EAAA,EAAkB4D,EAAiC,uBAAwB,CAAE,2BAA4B,CAAE,EAAG,UAAY,4BAA6B,CAAE,EAAG,UAAY,kCAAmC,CAAE,EAAG,MAAQ,kCAAmC,CAAE,EAAG,MAAQ,kCAAmC,CAAE,EAAG,MAAQ,wBAAyB,CAAE,KAAmB,QAMnZ,MAAMC,UAAoCD,EAEtC3T,KACT,OAAO,IAAI4T,CACZ,CACUC,SACT,OAAO,CACR,CACAvhB,cACCH,QAIO,KAAA4Z,GAAiB,KAyEzB,KAAA+H,2BAAwF,KA5EvF1hB,KAAKmO,GAAWqT,EAA6Btd,CAC9C,CAGI8I,SACH,OAAOhN,KAAK2Z,EACb,CACI3M,OAAGzM,GAEN,GADiBP,KAAK2Z,IAAMpZ,EACrB,CACN,IAAIE,EAAST,KAAK2Z,GAClB,GAAe,MAAX3Z,KAAK2Z,GAAY,CACpB,IAAI1Y,EAAIjB,KAAK2Z,GACb1Y,EAAEwN,iBAAkB,QAAexN,EAAEwN,iBAAiB,QAAMzO,KAAMA,KAAK2hB,I,CAGxE,GADA3hB,KAAK2Z,GAAKpZ,EACK,MAAXP,KAAK2Z,GAAY,CACpB,IAAIzY,EAAIlB,KAAK2Z,GACbzY,EAAEuN,iBAAkB,QAAgBvN,EAAEuN,iBAAiB,QAAMzO,KAAMA,KAAK2hB,I,CAEzE3hB,KAAKgI,qBAAqB,aAAcvH,EAAGT,KAAK2Z,IACjC,MAAX3Z,KAAKqX,KACRrX,KAAKqX,GAAGqI,GAAKnf,E,CAGhB,CACQohB,GAAGphB,EAAQC,GAClBR,KAAK8L,GAAGqM,KACRnY,KAAK0J,KACL1J,KAAKmH,IAAG,EACT,CACAuC,KACgB,MAAX1J,KAAKqX,KACRrX,KAAKwZ,GAAKxZ,KAAKqX,GAAGuK,GAEpB,CAEUC,KACT9hB,MAAM8hB,KACN7hB,KAAK0J,IACN,CAEUtJ,KACTJ,KAAKqX,GAAK,IAAIyK,EAAA,EACd,IAAIvhB,EAAIP,KAAKqX,GAEb,OADA9W,EAAEmhB,4BAA6B,QAAgBnhB,EAAEmhB,4BAA4B,QAAM1hB,KAAMA,KAAKwJ,KACvFxJ,KAAKqX,EACb,CACQ7N,GAAGjJ,EAAQC,GACqB,MAAnCR,KAAK0hB,4BACR1hB,KAAK0hB,2BAA2B1hB,KAAMQ,EAExC,CACUuD,KACT,OAAO,IAAIwb,EAAgCvf,KAC5C,CACAiE,GAAG1D,GACFR,MAAMkE,GAAG1D,GACTP,KAAK8L,GAAsCvL,CAC5C,CAEU+D,GAAG/D,EAAQC,EAAWC,EAAQQ,GAEvC,OADAlB,MAAMuE,GAAG/D,EAAGC,EAAGC,EAAGQ,GACVT,GACP,KAAKghB,EAA4BtX,IAAI,GACrClK,KAAK8L,GAAG/H,KACR,MAEA,IAAK,aACL/D,KAAK8L,GAAGqM,KACRnY,KAAK0J,KAKP,CAEUkD,SACT,OAAO,CACR,CACUC,OAAOtM,GAChBR,MAAM8M,OAAOtM,EACd,EA3FO,EAAAuH,IAAW,QAAS0Z,EAA6B,8BAAqCD,EAAiCrd,GA4FvH,EAAAgG,KAAgB,QAAQwT,EAAA,EAAoBC,EAAA,EAAkB6D,EAA6B,uBAAwB,CAAE,yBAA0B,CAAQO,EAAA,EAAY7d,EAAG,MAAQ,wBAAyB,CAAE,EAAG,U,wECv/CxM8d,E,iCCHL,MAAMC,UAAgCC,EAAA,EACzChiB,YAAYiiB,GAIR,GAHApiB,QAGIoiB,EACA,IAAK,IAAIpa,EAAI,EAAGA,EAAIoa,EAAKC,OAAQra,IAC7B/H,KAAKwR,IAAI2Q,EAAKpa,GAG1B,CAIUsa,mBAGN,IAAIC,EAAO,IAAIC,EAAA,EAA+C,KAAc,KAAc,GAc1F,OAbAD,EAAKE,QAAU,CAACC,EAAKC,KACjB,IAAIC,EAAYF,EAChB,OAAIE,EAAKC,OACED,EAAKC,OAAOF,GAEhBC,IAASD,CAAG,EAEvBJ,EAAKO,SAAYJ,GACNA,EAEXH,EAAKQ,WAAcJ,GACRA,EAEJJ,CACX,GD7BJ,SAAYN,GAIX,uBAIA,2CAIA,mBAIA,+BAIA,iCAIA,8BACA,CAzBD,CAAYA,IAAAA,EAAoB,KA8BzB,IAAIe,GAA6B,QAAS,uBAAwB,8E,qCE7BlE,MAAMC,UAA6BC,EAAA,EAKzC/iB,YAAYK,KAAc2iB,GAEzB,OADA3iB,EAAU,MAALA,EAAe,EAAIA,GAEvB,KAAK,EAEJR,MAAM,KAAc,GAErB,MAEA,KAAK,EACL,CACC,IAAIU,EAAkDyiB,EAAM,GAC5DnjB,MAAM,KAAc,EAAGU,E,EAM1B,EAtBO,EAAAqH,IAAW,QAASkb,EAAsB,uBAA8BC,EAAA,EAAwB/e,EAAEif,WAAW,O,0FCc9G,MAAMC,UAA+B,KAE3CljB,YAAYK,GACXR,MAAMQ,GACNP,KAAK6S,EAAItS,CACV,CAEA8T,IAC0B,MAArBrU,KAAK6S,EAAEwQ,aACVrjB,KAAK6S,EAAEwQ,WAAa,IAAIL,EAAqB,IAEzBhjB,KAAK6S,EAAEgL,GAAIqD,SAAWlhB,KAAK6S,EAAEyQ,eAC7BtjB,KAAK6S,EAAEgL,GAAIwF,WAAarjB,KAAK6S,EAAE0Q,iBAC/BvjB,KAAK6S,EAAEgL,GAAI2F,YAAcxjB,KAAK6S,EAAE2Q,WACtD,CACAnQ,IACsBrT,KAAK6S,EAAEgL,GAAIqD,SAAWlhB,KAAK6S,EAAEyQ,cACnD,CACAvN,IACsB/V,KAAK6S,EAAEgL,GAAI2F,YAAcxjB,KAAK6S,EAAE2Q,WACtD,CACAlP,IACsBtU,KAAK6S,EAAEgL,GAAIwF,WAAarjB,KAAK6S,EAAE0Q,gBACrD,EAtBO,EAAAzb,IAAW,QAASsb,EAAwB,yBAAgC,KAA0Blf,GA4BvG,MAAMuf,UAA2BpK,EAAA,EAIvCnZ,cACCH,MAAM,IAAI2jB,EAAA,EAAmB,IAHtB,KAAAC,qBAA4B,KAgB5B,KAAAC,gBAA0B,EAS1B,KAAA1E,GAAa,KAUb,KAAAkC,GAA2B,KAS3B,KAAAjZ,GAAa,KASb,KAAA0b,GAAa,KAjDpB7jB,KAAK8jB,qBAAuB9jB,KAAK8jB,qBAAqBC,KAAK/jB,MAC3DA,KAAKgkB,GAAG3P,IACRrU,KAAKikB,yBAA2BR,EAAmBxd,EACpD,CACU9E,KACT,OAAO,IAAIiiB,EAAuBpjB,KACnC,CACUge,GAAGzd,GACZR,MAAMie,GAAGzd,GACTP,KAAKgkB,GAA6BzjB,CACnC,CAGI2jB,oBACH,OAAOlkB,KAAK4jB,cACb,CACIM,kBAAc3jB,GACjBP,KAAK4jB,eAAiBrjB,CACvB,CAII+iB,qBACH,OAAOtjB,KAAKkf,EACb,CACIoE,mBAAe/iB,GAClB,IAAIC,EAAIR,KAAKkf,GACblf,KAAKkf,GAAK3e,EACVP,KAAK6R,GAAG,iBAAkBrR,EAAGR,KAAKkf,GACnC,CAGIqE,uBACH,OAAOvjB,KAAKohB,EACb,CACImC,qBAAiBhjB,GACpB,IAAIC,EAAIR,KAAKohB,GACbphB,KAAKohB,GAAK7gB,EACVP,KAAK6R,GAAG,mBAAoBrR,EAAGR,KAAKohB,GACrC,CAEI+C,yBACH,OAAOnkB,KAAKmI,EACb,CACIgc,uBAAmB5jB,GACtB,IAAIC,EAAIR,KAAKmI,GACbnI,KAAKmI,GAAK5H,EACVP,KAAK6R,GAAG,qBAAsBrR,EAAGR,KAAKmI,GACvC,CAEI8b,+BACH,OAAOjkB,KAAK6jB,EACb,CACII,6BAAyB1jB,GAC5B,IAAIC,EAAIR,KAAK6jB,GACb7jB,KAAK6jB,GAAKtjB,EACVP,KAAK2e,GAAG,2BAA4Bne,EAAGR,KAAK6jB,GAC7C,CAIAO,qBACCpkB,KAAK4R,IAAG,EACT,CACQA,GAAGrR,GACVP,KAAKqf,GAAG9e,EACT,CACQyf,KACP,OAAsB,MAAjBhgB,KAAKkhB,UAAyC,MAAnBlhB,KAAKqjB,UAItC,CACQtf,KACP/D,KAAKkkB,eAAgB,EAChBlkB,KAAKqkB,KAILrkB,KAAKskB,gBACTtkB,KAAK4R,IAAG,GAJR5R,KAAKwf,GAAG,GAAI,KAMd,CACQ6E,KACP,SAAI,EAAAE,EAAA,IAAoBvkB,KAAKwkB,SAAWxkB,KAAKwkB,OAAOpC,OAAS,GAI9D,CACQzW,KACR,CACQ6T,GAAGjf,EAAWC,GACjBD,GAAKP,KAAKsjB,iBACbtjB,KAAKsjB,eAAiB/iB,GAEvB,IAAIE,EAAS,MAALD,EAAY,KAAO,IAAIwiB,EAAqB,EAAGxiB,GACnDR,KAAKujB,kBAAoB9iB,IAC5BT,KAAKujB,iBAAmB9iB,GAEzBT,KAAKgkB,GAAG3P,GACT,CACQgL,GAAG9e,GACV,IAAMA,GAAOP,KAAmB,eAC/B,OAED,IAAKA,KAAKqkB,KAGT,OAFArkB,KAAKkkB,eAAgB,OACrBlkB,KAAKwf,GAAG,GAAI,MAGbxf,KAAKkkB,eAAgB,EACrB,IAAI1jB,EAAY,KAUhB,GAT+B,MAA3BR,KAAKmkB,mBACJM,EAAA,EAAIC,sBAAsB1kB,KAAKmkB,mBAAoB,KACtD3jB,EAAIR,KAAKmkB,oBAGNM,EAAA,EAAIC,sBAAsB1kB,KAAKikB,yBAA0B,KAC5DzjB,EAAIR,KAAKikB,0BAGF,MAALzjB,EAEH,YADAR,KAAKwf,GAAG,GAAI,MAGb,IAAI/e,EAAIT,KAAK2kB,aACbnkB,IAAK,QAAiCuiB,EAA4BtiB,GAClE,IACImkB,EAAOpkB,UADMR,KAAKwkB,OAAS,4BAE/BxkB,KAAK2jB,qBAAuB,IAAgBkB,OAAOD,EAAM5kB,KAAK8jB,qBAAsB,KACrF,CACQA,qBAAqBvjB,EAAQC,GACpC,GAAIA,GAAKR,KAAK2jB,qBACb,OAED3jB,KAAK2jB,qBAAuB,KAC5B,IAAImB,EAAQvkB,EACRwkB,EAAuBC,KAAKC,MAAMH,GAAQI,aAC9C,GAAqB,MAAjBH,EACH,OAED,IAAII,EAAaJ,EAAc3C,OAAS,EAAI2C,EAAc,GAAGK,UAAY,KACzE,GAAkB,MAAdD,EACH,OAED,GAAyB,GAArBA,EAAW/C,OAAe,OAC9B,IAAIiD,EAA6BF,EAAW,GAAW,SACnDG,EAA8B,IAAIC,EAAA,EAAe,KAAc,GACnE,IAAK,IAAIxd,EAAI,EAAGA,EAAIod,EAAW,GAAGK,mBAAmBpD,OAAQra,IAAOud,EAAY9T,IAAI2T,EAAW,GAAGK,mBAAmBzd,IACrH/H,KAAKwf,GAAG6F,EAAWC,EACpB,CACQ7Z,GAAGlL,EAAQC,GAClBR,KAAK+U,GAAG7T,IACRlB,KAAK+D,KACL/D,KAAK6R,GAAG4R,EAAmBvZ,IAAI,GAAIlK,KAAKujB,iBAAkBvjB,KAAKujB,iBAChE,CACQ1R,GAAGtR,EAAWC,EAAQC,GAC7B,OAAQF,GACP,KAAKkjB,EAAmBvZ,IAAI,GAI5B,KAAKuZ,EAAmBvZ,IAAI,GAC5BlK,KAAK+D,KACL,MAEA,KAAK0f,EAAmBvZ,IAAI,GAC5BlK,KAAK2L,KACL3L,KAAKsjB,eAAyB7iB,EAC9BT,KAAKgkB,GAAG3Q,IACRrT,KAAK+U,GAAG7T,IACR,MAEA,KAAKuiB,EAAmBvZ,IAAI,GAC5BlK,KAAKgkB,GAAGjO,IACR/V,KAAK+U,GAAG7T,IACR,MAEA,KAAKuiB,EAAmBvZ,IAAI,GAC5BlK,KAAK+D,KACL,MAEA,KAAK0f,EAAmBvZ,IAAI,GAC5BlK,KAAK2L,KACL,IACIzK,EAA0BT,EAC9B,GAA6B,MAAzBT,KAAKujB,iBAA0B,CAClC,IAAIre,EAAIlF,KAAKujB,iBACbre,EAAEugB,mBAAoB,QAAevgB,EAAEugB,mBAAmB,QAAMzlB,KAAMA,KAAKyL,I,CAE5EzL,KAAKujB,iBAAmBriB,EACK,MAAzBlB,KAAKujB,mBACRriB,EAAEukB,mBAAoB,QAAgBvkB,EAAEukB,mBAAmB,QAAMzlB,KAAMA,KAAKyL,MAE7EzL,KAAKgkB,GAAG1P,IACRtU,KAAK+U,GAAG7T,IACR,MAEA,IAAK,iBACL,IAAI6J,EAAYtK,GACZ,EAAA8jB,EAAA,IAAoBxZ,IACvB/K,KAAK+D,KAEN,MAEA,IAAK,qBACL/D,KAAKikB,yBAAmCxjB,EACxCT,KAAK2L,KACL3L,KAAK+D,KACL,MAEA,IAAK,2BACL/D,KAAK2L,KACL3L,KAAK+D,KAKNhE,MAAM4e,GAAGpe,EAAGC,EAAGC,EAChB,EAhOO,EAAAqH,IAAW,QAAS2b,EAAoB,qBAA4BpK,EAAA,EAAsBnV,GAEzE,EAAA+B,GAAa,wDA+N9B,EAAAiE,KAAgB,QAAQwT,EAAA,EAAoBC,EAAA,EAAkB8F,EAAoB,KAAM,CAAE,SAAU,CAAE,GAAG,EAAAc,EAAA,OAAiB,cAAe,CAAE,EAAG,SAAW,eAAgB,CAAExB,GAA4B,QAAiCA,EAA4B,IAAM,iBAAkB,CAAE,GAAG,GAAS,aAAc,CAAQC,EAAsB9e,EAAG,MAAQ,WAAY,CAAE,EAAG,Q,0BC1QnX,MAAMwhB,UAA8B,IAGjCC,uBAET,OAAO,IAAIlC,CACZ,CAIwC1b,QACtC,OAAO/H,KAAK6B,eACb,CACA3B,cACCH,QAsCO,KAAA6lB,YAAuC,KAoCvC,KAAAC,kBAA6C,IAzErD,CAII3B,oBACH,OAAQlkB,KAAK+H,EAAEmc,aAChB,CACIA,kBAAchQ,GACjBlU,KAAK+H,EAAEmc,eAAgB,QAAWhQ,EACnC,CAIIoQ,qBACH,OAAQtkB,KAAK+H,EAAEuc,cAChB,CACIA,mBAAepQ,GAClBlU,KAAK+H,EAAEuc,gBAAiB,QAAWpQ,EACpC,CAIIgN,eACH,OAAQlhB,KAAK+H,EAAEmZ,QAChB,CACIA,aAAShN,GACZlU,KAAK+H,EAAEmZ,SAAWhN,CACnB,CAIIoP,qBACH,OAAQtjB,KAAK+H,EAAEub,cAChB,CACIA,mBAAepP,GAClBlU,KAAK+H,EAAEub,eAAiBpP,CACzB,CAMImP,iBACoC,GAAyB,OAArBrjB,KAAK4lB,YAAsB,CAC3B,IAAItD,EAAO,IAAIL,EACX6D,EAAY9lB,KAAK+H,EAAEsb,WAC5DyC,IACsCA,EAAY,IAAI9C,EAA8B,IAE/ChjB,KAAK4lB,YAAetD,EAAayD,WAAWD,GAC5C9lB,KAAK+H,EAAEsb,WAAayC,C,CAG/D,OAAO9lB,KAAK4lB,WACb,CACIvC,eAAWnP,GACkD,OAArBlU,KAAK4lB,cACJ5lB,KAAK4lB,YAAoBI,eAAe,MACzChmB,KAAK4lB,YAAc,MAEvB,IAAItD,EAAO,IAAIL,EACfjiB,KAAK4lB,YAAetD,EAAa2D,WAAW/R,GAC5C,IAAIgS,EAAW,IAAIC,EAAA,EAAuC,MACtDL,EAAY9lB,KAAK+H,EAAEsb,WACzDyC,IACmCA,EAAY,IAAI9C,EAA8B,IAE9CkD,EAAiBhJ,OAAS4I,EAC3BI,EAASnU,QACR/R,KAAK4lB,YAAoBI,eAAeE,GACzClmB,KAAK+H,EAAEsb,WAAayC,CAE5D,CAMIvC,uBACoC,GAA+B,OAA3BvjB,KAAK6lB,kBAA4B,CACjC,IAAIvD,EAAO,IAAIL,EACX6D,EAAY9lB,KAAK+H,EAAEwb,iBAC5DuC,IACsCA,EAAY,IAAI9C,EAA8B,IAE/ChjB,KAAK6lB,kBAAqBvD,EAAayD,WAAWD,GAClD9lB,KAAK+H,EAAEwb,iBAAmBuC,C,CAGrE,OAAO9lB,KAAK6lB,iBACb,CACItC,qBAAiBrP,GACkD,OAA3BlU,KAAK6lB,oBACJ7lB,KAAK6lB,kBAA0BG,eAAe,MAC/ChmB,KAAK6lB,kBAAoB,MAE7B,IAAIvD,EAAO,IAAIL,EACfjiB,KAAK6lB,kBAAqBvD,EAAa2D,WAAW/R,GAClD,IAAIgS,EAAW,IAAIC,EAAA,EAAuC,MACtDL,EAAY9lB,KAAK+H,EAAEwb,iBACzDuC,IACmCA,EAAY,IAAI9C,EAA8B,IAE9CkD,EAAiBhJ,OAAS4I,EAC3BI,EAASnU,QACR/R,KAAK6lB,kBAA0BG,eAAeE,GAC/ClmB,KAAK+H,EAAEwb,iBAAmBuC,CAElE,CAII3B,yBACH,OAAQnkB,KAAK+H,EAAEoc,kBAChB,CACIA,uBAAmBjQ,GACtBlU,KAAK+H,EAAEoc,mBAAqBjQ,CAC7B,CAII+P,+BACH,OAAQjkB,KAAK+H,EAAEkc,wBAChB,CACIA,6BAAyB/P,GAC5BlU,KAAK+H,EAAEkc,yBAA2B/P,CACnC,CAIIsP,kBACH,OAAQxjB,KAAK+H,EAAEyb,WAChB,CACIA,gBAAYtP,GACflU,KAAK+H,EAAEyb,YAActP,CACtB,CAKIsQ,aACH,OAAQxkB,KAAK+H,EAAEyc,MAChB,CACIA,WAAOtQ,GACVlU,KAAK+H,EAAEyc,OAAStQ,CACjB,CAKIyQ,mBACH,OAAO3kB,KAAK+H,EAAE4c,YACf,CACIA,iBAAazQ,GAChBlU,KAAK+H,EAAE4c,cAAe,QAAiC5B,EAA4B7O,EACpF,CAKOkQ,qBACNpkB,KAAK+H,EAAEqc,oBACR,ECtLM,MAAMgC,EACF1Q,kBAEH,KAAc2Q,aAAa,wBAAyBX,GACpD,KAAclW,SAAS,qBAA4BiU,EAAoBjN,MAC3E,E,uGCJG,MAAM8P,UAA4B,IAODve,QACtC,OAAO/H,KAAK6B,eACb,CACA3B,cACCH,QAGW,KAAAwmB,iBAAgF,KAChF,KAAAC,yBAAgC,IAH5C,CAQWC,sBACX,OAAOzmB,KAAKumB,gBACZ,CACeE,oBAAgBC,GACe,OAAlC1mB,KAAKwmB,2BACLxmB,KAAK+H,EAAE0e,iBAAkB,QAAezmB,KAAK+H,EAAE0e,gBAAiBzmB,KAAKwmB,0BACrExmB,KAAKwmB,yBAA2B,KAChCxmB,KAAKumB,iBAAmB,MAG5BvmB,KAAKumB,iBAAmBG,EACxB1mB,KAAKwmB,yBAA2B,CAACnT,EAAGnS,KAExB,IAAIylB,EAAY,IAAI,IAClCA,EAAWC,uBAAuB1lB,GACflB,KAAa6mB,uBACb7mB,KAAa6mB,sBAAsB7mB,KAAM2mB,GAE1C3mB,KAAKumB,kBACzBvmB,KAAKumB,iBAAiBvmB,KAAM2mB,E,EAIxB3mB,KAAK+H,EAAE0e,iBAAkB,QAAgBzmB,KAAK+H,EAAE0e,gBAAiBzmB,KAAKwmB,yBAC1E,E,eC1CE,MAAMM,UAAyBzN,EAAA,EAErCnZ,YAAYK,GACXR,MAAMQ,GAWP,KAAAkmB,gBAAiE,KAVhElmB,EAAEkmB,iBAAkB,QAAgBlmB,EAAEkmB,iBAAiB,QAAMzmB,KAAMA,KAAKohB,IACzE,CACQA,GAAG7gB,EAAQC,GAClBR,KAAKgkB,GAAGxjB,EACT,CACUwjB,GAAGzjB,GACgB,MAAxBP,KAAKymB,iBACRzmB,KAAKymB,gBAAgBzmB,KAAMO,EAE7B,EAZO,EAAAuH,IAAW,QAASgf,EAAkB,mBAA0BzN,EAAA,EAAsBnV,GCJvF,MAAM6iB,EACFrR,kBAEH,KAAc2Q,aAAa,sBAAuBC,GAClD,KAAc9W,SAAS,mBAA0BsX,EAAkBtQ,MACvE,E,6NCYG,MAAMwQ,UAAwC,KAEpD9mB,YAAYK,GACXR,MAAMQ,GAGC,KAAAif,GAAkC,KAFzCxf,KAAKwf,GAAKjf,CACX,CAEA8Q,KACCtR,MAAMsR,KACDrR,KAAKsR,IACTtR,KAAKwf,GAAG5W,GAAK2I,EAAA,EAAS8C,EAExB,CACArS,KACCjC,MAAMiC,KACY,MAAdhC,KAAKwf,GAAGvf,KACXD,KAAKwf,GAAGhG,GAAGkG,GAAK1f,KAAKwf,GAAGvT,GACxBjM,KAAKwf,GAAGhG,GAAGyN,GAAKjnB,KAAKwf,GAAG5T,GAE1B,CACA7H,KACmB,MAAd/D,KAAKwf,GAAGhG,KACXxZ,KAAKwf,GAAGhG,GAAGkG,GAAK1f,KAAKwf,GAAGvT,GAE1B,CACAkM,KACmB,MAAdnY,KAAKwf,GAAGhG,KACXxZ,KAAKwf,GAAGhG,GAAGyN,GAAKjnB,KAAKwf,GAAG5T,GAE1B,EA5BO,EAAA9D,IAAW,QAASkf,EAAiC,kCAAyC,KAAqC9iB,GAkCpI,MAAMgjB,UAAoC,KAEtCtZ,KACT,OAAO,IAAIsZ,CACZ,CACUC,SACT,OAAO,CACR,CACAjnB,cACCH,QA8ED,KAAA2hB,2BAAwF,KA7EvF1hB,KAAKmO,GAAW+Y,EAA6BhjB,CAC9C,CACU7C,KACTtB,MAAMsB,IACP,CAEUjB,KACTJ,KAAKwZ,GAAK,IAAI4N,EAAA,EACd,IAAI7mB,EAAIP,KAAKwZ,GACbjZ,EAAEmhB,4BAA6B,QAAgBnhB,EAAEmhB,4BAA4B,QAAM1hB,KAAMA,KAAKwJ,KAC9F,IAAIhJ,EAAIR,KAAKwZ,GAEb,OADAhZ,EAAE2I,iBAAkB,QAAgB3I,EAAE2I,iBAAiB,QAAMnJ,KAAMA,KAAK0J,KACjE1J,KAAKwZ,EACb,CACQhQ,GAAGjJ,EAAQC,GACqB,MAAnCR,KAAK0hB,4BACR1hB,KAAK0hB,2BAA2B1hB,KAAMQ,EAExC,CACQkJ,GAAGnJ,EAAQC,GAClB,IAAIC,GAAI,EAAAqO,EAAA,IAAqCsY,EAAA,EAAsBljB,EAAGlE,KAAKC,IAClE,MAALQ,GAGkB,mBAAlBD,EAAEsJ,eACL9J,KAAKqX,GAAK5W,EAAEmhB,GAEd,CAIUC,KACT9hB,MAAM8hB,IACP,CACU9d,KACT,OAAO,IAAIijB,EAAgChnB,KAC5C,CACAiE,GAAG1D,GACFR,MAAMkE,GAAG1D,GACTP,KAAK8L,GAAsCvL,CAC5C,CAGU+D,GAAG/D,EAAQC,EAAWC,EAAQQ,GAEvC,OADAlB,MAAMuE,GAAG/D,EAAGC,EAAGC,EAAGQ,GACVT,GACP,KAAK0mB,EAA4Bhd,IAAI,GACrClK,KAAK8L,GAAG/H,KACR,MAEA,KAAKmjB,EAA4Bhd,IAAI,GACrClK,KAAK8L,GAAGqM,KACR,MAEA,KAAK+O,EAA4Bhd,IAAI,GACrClK,KAAKwZ,GAAGiE,GAAKzd,KAAK2Z,GAClB,MAEA,IAAK,YACL3Z,KAAKwZ,GAAGO,GAAK/Z,KAAK+Z,GAClB,MAEA,IAAK,UACL/Z,KAAKwZ,GAAG6N,GAAKrnB,KAAKqnB,GAClB,MAEA,IAAK,aACLrnB,KAAKwZ,GAAG8N,GAAKtnB,KAAKsnB,GAClB,MAEA,IAAK,WACLtnB,KAAKwZ,GAAG+N,GAAKvnB,KAAKunB,GAKpB,EArFO,EAAAzf,IAAW,QAASof,EAA6B,8BAAqC,KAAiChjB,GAuFvH,EAAAgG,KAAgB,QAAQwT,EAAA,EAAoBC,EAAA,EAAkBuJ,EAA6B,uBAAwB,CAAE,wBAAyB,CAAQM,EAAA,EAAiBtjB,EAAG,MAAQ,kBAAmB,CAAQsjB,EAAA,EAAiBtjB,EAAG,MAAQ,wBAAyB,CAAE,EAAG,SAAW,sBAAuB,CAAQujB,EAAAC,EAAsBxjB,EAAG,Q,0BCrI3U,MAAMyjB,UAAgD,IAGnDhC,uBAET,OAAO,IAAIuB,CACZ,CAIwCnf,QACtC,OAAO/H,KAAK6B,eACb,CACA3B,cACCH,QA0KW,KAAA6nB,4BAAwH,KACxH,KAAAC,oCAA2C,IAzKvD,CAEIC,oBACQ/nB,MAAyB,mBACzBA,MAAyB,oBAEnBC,KAAK+H,EAAG+f,mBACR9nB,KAAK+H,EAAG+f,oBAGb9nB,KAAK+nB,YACN/nB,KAAK+nB,WAAY,EACjB/nB,KAAKgoB,yBAEb,CACAC,uBACQloB,MAA4B,sBAC5BA,MAA4B,uBAEtBC,KAAK+H,EAAGkgB,sBACRjoB,KAAK+H,EAAGkgB,uBAEdjoB,KAAK+nB,YACL/nB,KAAK+nB,WAAY,EAEzB,CAGuBG,gCACP,GAA0G,MAAtGP,EAAwCQ,2DAAoE,CAC5G,IAAIC,GAAQ,QAAoBT,GACpD,IAAK,IAAI5f,EAAI,EAAGA,EAAIqgB,EAAMhG,OAAQra,IACVqgB,EAAMrgB,IAAK,QAASqgB,EAAMrgB,IAElD4f,EAAwCQ,2DAA6DC,C,CAErF,OAAOT,EAAwCQ,0DACnD,CAMOzS,kBACEiS,EAAwCU,uBACzCV,EAAwCU,sBAAuB,EAC/D,IAAsBC,gBAClBX,EAAwCY,YACxCZ,GAEhB,CAIRa,oBACH,OAAQxoB,KAAK+H,EAAE4P,EAChB,CAII8Q,sBACH,OAAQzoB,KAAK+H,EAAE6D,EAChB,CACI6c,oBAAgBvU,GACnBlU,KAAK+H,EAAE6D,GAAKsI,CACb,CAIIwU,gBACoC,MAAM3V,EAAI/S,KAAK+H,EAAEkE,GACjB,GAAS,MAAL8G,EACA,OAAO,KAGX,IAAMA,EAAUtR,eAAgB,CAC5B,IAAIP,EAAI,IAA4BynB,oBAAoB5V,GACpD7R,IACCA,EAAUW,gBAAkBkR,GAEhCA,EAAUtR,eAAiBP,C,CAEvE,OAAQ6R,EAAUtR,cACnB,CACIinB,cAAUxU,GACmC,MAALA,GAAalU,KAAK4oB,mBAAsB1U,EAAU2U,UAAW3U,EAAU2U,SAAS7oB,KAAK4oB,kBAAmB5oB,KAAMA,MAE7IA,KAAK+H,EAAEkE,GAAd,MAALiI,EAAwB,KAAmBA,EAAEnM,CAC9C,CAII+gB,sBACoC,MAAM/V,EAAI/S,KAAK+H,EAAEsP,GACjB,GAAS,MAALtE,EACA,OAAO,KAGX,IAAMA,EAAUtR,eAAgB,CAC5B,IAAIP,EAAI,IAA4BynB,oBAAoB5V,GACpD7R,IACCA,EAAUW,gBAAkBkR,GAEhCA,EAAUtR,eAAiBP,C,CAEvE,OAAQ6R,EAAUtR,cACnB,CACIqnB,oBAAgB5U,GAC6B,MAALA,GAAalU,KAAK4oB,mBAAsB1U,EAAU2U,UAAW3U,EAAU2U,SAAS7oB,KAAK4oB,kBAAmB5oB,KAAMA,MAE7IA,KAAK+H,EAAEsP,GAAd,MAALnD,EAAwB,KAAmBA,EAAEnM,CAC9C,CAIIghB,oBACoC,MAAMhW,EAAI/S,KAAK+H,EAAE4R,GACjB,GAAS,MAAL5G,EACA,OAAO,KAGX,IAAMA,EAAUtR,eAAgB,CAC5B,IAAIP,EAAI,EAAA8nB,EAAiCL,oBAAoB5V,GACzD7R,IACCA,EAAUW,gBAAkBkR,GAEhCA,EAAUtR,eAAiBP,C,CAEvE,OAAQ6R,EAAUtR,cACnB,CACIsnB,kBAAc7U,GAC+B,MAALA,GAAalU,KAAK4oB,mBAAsB1U,EAAU2U,UAAW3U,EAAU2U,SAAS7oB,KAAK4oB,kBAAmB5oB,KAAMA,MAE7IA,KAAK+H,EAAE4R,GAAd,MAALzF,EAAwB,KAAmBA,EAAEnM,CAC9C,CAEWkhB,WAAW9L,GAGlB,OADiBpd,MAAMkpB,WAAW9L,KAMlCnd,KAAK0oB,WAAc1oB,KAAK0oB,UAAkBvL,MAASnd,KAAK0oB,UAAkBvL,MAAQA,EAAend,KAAK0oB,UACtG1oB,KAAK8oB,iBAAoB9oB,KAAK8oB,gBAAwB3L,MAASnd,KAAK8oB,gBAAwB3L,MAAQA,EAAend,KAAK8oB,gBACxH9oB,KAAK+oB,eAAkB/oB,KAAK+oB,cAAsB5L,MAASnd,KAAK+oB,cAAsB5L,MAAQA,EAAend,KAAK+oB,cAEvG,KACX,CAEcF,SAASK,EAAgBC,EAAgBC,GAC/CrpB,MAAM8oB,SAASK,EAAWC,EAAWC,GAErCppB,KAAKqpB,YAAa,EACdrpB,KAAK0oB,WAAc1oB,KAAK0oB,UAAkBG,UACrD7oB,KAAK0oB,UAAkBG,SAASK,EAAWC,EAAWnpB,MAEvDA,KAAK8oB,iBAAoB9oB,KAAK8oB,gBAAwBD,UACrD7oB,KAAK8oB,gBAAwBD,SAASK,EAAWC,EAAWnpB,MAE7DA,KAAK+oB,eAAkB/oB,KAAK+oB,cAAsBF,UACjD7oB,KAAK+oB,cAAsBF,SAASK,EAAWC,EAAWnpB,MAGnDA,KAAKqpB,YAAa,CACtB,CAQG3H,iCACX,OAAO1hB,KAAK4nB,2BACZ,CACelG,+BAA2BgF,GACe,OAA7C1mB,KAAK6nB,sCACL7nB,KAAK+H,EAAE2Z,4BAA6B,QAAe1hB,KAAK+H,EAAE2Z,2BAA4B1hB,KAAK6nB,qCAC3F7nB,KAAK6nB,oCAAsC,KAC3C7nB,KAAK4nB,4BAA8B,MAGvC5nB,KAAK4nB,4BAA8BlB,EACnC1mB,KAAK6nB,oCAAsC,CAACxU,EAAGnS,KAEnC,IAAIylB,EAAY,IAAI,IAClCA,EAAWC,uBAAuB1lB,GACflB,KAAaspB,kCACbtpB,KAAaspB,iCAAiCtpB,KAAM2mB,GAErD3mB,KAAK4nB,6BACzB5nB,KAAK4nB,4BAA4B5nB,KAAM2mB,E,EAInC3mB,KAAK+H,EAAE2Z,4BAA6B,QAAgB1hB,KAAK+H,EAAE2Z,2BAA4B1hB,KAAK6nB,oCAChG,EA3K2B,EAAAM,2DAAuE,KAaxE,EAAAI,YAAsB,qCACnB,EAAAF,sBAAuB,EC/DlD,MAAMkB,EACF7T,kBACX,EAAA8T,8BAA8Bha,WACtBmY,EAAwCnY,WACxC,KAAc6W,aAAa,0CAA2CsB,GACtE,KAAcnY,SAAS,8BAAqC0X,EAA6B1Q,MAC7F,E,sNCUG,MAAMiT,UAA+CzlB,EAAA,EAE3D9D,YAAYK,GACXR,MAAMQ,GAGC,KAAAuM,GAAyC,KAFhD9M,KAAK8M,GAAKvM,CACX,CAEAyB,KACCjC,MAAMiC,KACN,IAAIzB,GAA8B,EAAAuO,EAAA,IAAyC4a,EAAA,EAA0BxlB,EAAGlE,KAAK8M,GAAG7M,IAChHM,EAAEmQ,GAAK1Q,KAAK8M,GAAGxD,GACf/I,EAAEopB,GAAK3pB,KAAK8M,GAAGsK,GACf7W,EAAE6L,GAAKpM,KAAK8M,GAAGjC,GACftK,EAAE4L,GAAKnM,KAAK8M,GAAGlD,GACfrJ,EAAEsF,GAAK7F,KAAK8M,GAAGrC,GACflK,EAAE2L,GAAKlM,KAAK8M,GAAGzB,GACf9K,EAAEmW,GAAK1W,KAAK8M,GAAGJ,GACfnM,EAAEqpB,GAAK5pB,KAAK8M,GAAGyJ,GACfhW,EAAEspB,GAAK7pB,KAAK8M,GAAGgd,GACfvpB,EAAEkd,GAAKzd,KAAK8M,GAAGd,EAChB,CACAsT,KAC4Btf,KAAK8M,GAAG7M,GAAIyQ,GAAK1Q,KAAK8M,GAAGxD,EACrD,CACAuI,KAC4B7R,KAAK8M,GAAG7M,GAAI0pB,GAAK3pB,KAAK8M,GAAGsK,EACrD,CACAiE,KAC4Brb,KAAK8M,GAAG7M,GAAImM,GAAKpM,KAAK8M,GAAGjC,EACrD,CACA9G,KAC4B/D,KAAK8M,GAAG7M,GAAIkM,GAAKnM,KAAK8M,GAAGlD,EACrD,CACAgI,KAC4B5R,KAAK8M,GAAG7M,GAAI4F,GAAK7F,KAAK8M,GAAGrC,EACrD,CACA4U,KAC4Brf,KAAK8M,GAAG7M,GAAIiM,GAAKlM,KAAK8M,GAAGzB,EACrD,CACAM,KAC4B3L,KAAK8M,GAAG7M,GAAIyW,GAAK1W,KAAK8M,GAAGJ,EACrD,CACAyL,KACC,IAAI5X,GAA8B,EAAAuO,EAAA,IAAyC4a,EAAA,EAA0BxlB,EAAGlE,KAAK8M,GAAG7M,IAChH,GAAkB,MAAdD,KAAK8M,GAAGvI,GAGX,OAFAhE,EAAEc,GAAK,UACPd,EAAE6D,GAAK,MAGR7D,EAAEc,GAAwBrB,KAAK8M,GAAGvI,GAAI0I,GACtC1M,EAAE6D,GAAwBpE,KAAK8M,GAAGvI,GAAI2I,EACvC,CACApG,KAC4B9G,KAAK8M,GAAG7M,GAAIoB,GAAwBrB,KAAK8M,GAAGvI,GAAI0I,EAC5E,CACA6E,KAC4B9R,KAAK8M,GAAG7M,GAAImE,GAAwBpE,KAAK8M,GAAGvI,GAAI2I,EAC5E,CACAxB,KAC4B1L,KAAK8M,GAAG7M,GAAI2pB,GAAK5pB,KAAK8M,GAAGyJ,EACrD,CACA9K,KAC4BzL,KAAK8M,GAAG7M,GAAI4pB,GAAK7pB,KAAK8M,GAAGgd,EACrD,CACAtK,KAC4Bxf,KAAK8M,GAAG7M,GAAIwd,GAAKzd,KAAK8M,GAAGd,EACrD,CACAqF,KACCtR,MAAMsR,KACDrR,KAAKsR,IACTtR,KAAK8M,GAAGyJ,GAAKhF,EAAA,EAASgE,GACtBvV,KAAK8M,GAAGgd,GAAKvY,EAAA,EAASsM,GACtB7d,KAAK8M,GAAGvE,GAAKgJ,EAAA,EAAS2M,GACtBle,KAAK8M,GAAGtE,GAAK+I,EAAA,EAAS0D,GAExB,EA1EO,EAAAnN,IAAW,QAAS2hB,EAAwC,yCAAgDzlB,EAAA,EAAgBE,GAgF7H,MAAM6lB,UAA2ClqB,EAAA,EAE7C+N,KACT,OAAO,IAAImc,CACZ,CACUC,KACT,OAAK,QAAOhqB,KAAKyI,IAGV8I,EAAA,EAASD,EAFRvR,MAAMiqB,IAGf,CACUC,SACT,OAAO,CACR,CACA/pB,cACCH,QAeO,KAAAyK,GAA+B,KAWvC,KAAA0f,6BAAyF,KACjF,KAAAjf,GAAa,EA1BpBjL,KAAKmO,GAAW4b,EAAoC7lB,CACrD,CACUH,KACT,OAAO,IAAI0lB,EAAuCzpB,KACnD,CACAiE,GAAG1D,GACFR,MAAMkE,GAAG1D,GACTP,KAAKuK,GAA6ChK,CACnD,CAEUH,KAET,OADAJ,KAAKwK,GAAK,IAAIkf,EAAA,EACP1pB,KAAKwK,EACb,CAcIqB,SACH,OAAO7L,KAAKiL,EACb,CACIY,OAAGtL,GACN,IAAIC,EAAIR,KAAKiL,GACbjL,KAAKiL,GAAK1K,EACVP,KAAKgI,qBAAqB,oBAAqBxH,EAAGR,KAAKiL,GACxD,CACU5J,KACTtB,MAAMsB,KACN,IAAId,EAA+BP,KAAKC,GACxCM,EAAE2pB,8BAA+B,QAAgB3pB,EAAE2pB,8BAA8B,QAAMlqB,KAAMA,KAAK8L,KAClG,IAAItL,EAA+BR,KAAKC,GACxCO,EAAE2I,iBAAkB,QAAgB3I,EAAE2I,iBAAiB,QAAMnJ,KAAMA,KAAKiM,IACzE,CACQH,GAAGvL,EAAQC,GAClBR,KAAK6L,GAAKrL,EAAE2pB,cAC6B,MAArCnqB,KAAKkqB,8BACRlqB,KAAKkqB,6BAA6BlqB,KAAMQ,EAE1C,CACQyL,GAAG1L,EAAQC,GACdR,KAAKwK,EAGV,CACUlG,GAAG/D,EAAQC,EAAWC,EAAQQ,GAEvC,OADAlB,MAAMuE,GAAG/D,EAAGC,EAAGC,EAAGQ,GACVT,GACP,IAAK,eACLR,KAAKuK,GAAG4N,KACR,MAEA,KAAK4R,EAAmC7f,IAAI,GAC5ClK,KAAKuK,GAAG+U,KACR,MAEA,KAAKyK,EAAmC7f,IAAI,GAC5ClK,KAAKuK,GAAGsH,KACR,MAEA,KAAKkY,EAAmC7f,IAAI,GAC5ClK,KAAKuK,GAAG8Q,KACR,MAEA,KAAK0O,EAAmC7f,IAAI,GAC5ClK,KAAKuK,GAAGxG,KACR,MAEA,KAAKgmB,EAAmC7f,IAAI,GAC5ClK,KAAKuK,GAAGqH,KACR,MAEA,IAAK,QACL5R,KAAKuK,GAAGzD,KACR,MAEA,IAAK,QACL9G,KAAKuK,GAAGuH,KACR,MAEA,KAAKiY,EAAmC7f,IAAI,GAC5ClK,KAAKuK,GAAG8U,KACR,MAEA,KAAK0K,EAAmC7f,IAAI,GAC5ClK,KAAKuK,GAAGoB,KACR,MAEA,KAAKoe,EAAmC7f,IAAI,GAC5ClK,KAAKuK,GAAGmB,KACR,MAEA,KAAKqe,EAAmC7f,IAAI,GAC5ClK,KAAKuK,GAAGkB,KACR,MAEA,KAAKse,EAAmC7f,IAAI,GAC5ClK,KAAKuK,GAAGiV,KAKV,CACU5S,SACT,OAAO,CACR,CACUC,OAAOtM,GAChBR,MAAM8M,OAAOtM,EACd,EAnIO,EAAAuH,IAAW,QAASiiB,EAAoC,qCAA4ClqB,EAAA,EAAyBqE,GAoI7H,EAAAgG,KAAgB,QAAQwT,EAAA,EAAoBC,EAAA,EAAkBoM,EAAoC,uBAAwB,CAAE,yBAA0B,CAAQK,EAAA,EAAOlmB,EAAGqN,EAAA,EAASsM,IAAM,oBAAqB,CAAE,EAAG,IAAM,yBAA0B,CAAQuM,EAAA,EAAOlmB,EAAGqN,EAAA,EAASgE,IAAM,oBAAqB,CAAE,EAAG,GAAK,2BAA4B,CAAE,EAAG,MAAQ,4BAA6B,CAAE,EAAG,MAAQ,yBAA0B,CAAE,GAAG,GAAS,oBAAqB,CAAE,EAAG,GAAK,wBAAyB,CAAE,GAAG,GAAQ,sBAAuB,CAAE,GAAG,K,0BClO9gB,MAAM8U,UAAuD,IAG1D1E,uBAET,OAAO,IAAIoE,CACZ,CAIwChiB,QACtC,OAAO/H,KAAK6B,eACb,CACA3B,cACCH,QAwKW,KAAAuqB,8BAAmI,KACnI,KAAAC,sCAA6C,IAvKzD,CAEIzC,oBACQ/nB,MAAyB,mBACzBA,MAAyB,oBAEnBC,KAAK+H,EAAG+f,mBACR9nB,KAAK+H,EAAG+f,oBAGb9nB,KAAK+nB,YACN/nB,KAAK+nB,WAAY,EACjB/nB,KAAKgoB,yBAEb,CACAC,uBACQloB,MAA4B,sBAC5BA,MAA4B,uBAEtBC,KAAK+H,EAAGkgB,sBACRjoB,KAAK+H,EAAGkgB,uBAEdjoB,KAAK+nB,YACL/nB,KAAK+nB,WAAY,EAEzB,CAGuBG,gCACP,GAAwH,MAApHmC,EAA+CG,kEAA2E,CAC1H,IAAIpC,GAAQ,QAAoBiC,GACpD,IAAK,IAAItiB,EAAI,EAAGA,EAAIqgB,EAAMhG,OAAQra,IACVqgB,EAAMrgB,IAAK,QAASqgB,EAAMrgB,IAElDsiB,EAA+CG,kEAAoEpC,C,CAEnG,OAAOiC,EAA+CG,iEAC1D,CAMO9U,kBACE2U,EAA+ChC,uBAChDgC,EAA+ChC,sBAAuB,EACtE,IAAsBC,gBAClB+B,EAA+C9B,YAC/C8B,GAEhB,CAIRI,cACH,OAAQzqB,KAAK+H,EAAE2iB,EAChB,CAIIC,yBACH,OAAQ3qB,KAAK+H,EAAEqP,EAChB,CACIuT,uBAAmBzW,GACtBlU,KAAK+H,EAAEqP,GAAKlD,CACb,CAII0W,0BACH,OAAQ5qB,KAAK+H,EAAEuB,EAChB,CACIshB,wBAAoB1W,GACvBlU,KAAK+H,EAAEuB,GAAK4K,CACb,CAII2W,oBACH,OAAQ7qB,KAAK+H,EAAE8C,EAChB,CACIggB,kBAAc3W,GACjBlU,KAAK+H,EAAE8C,IAAK,QAAWqJ,GACgBlU,KAAK8qB,GAAG,gBAAiB9qB,KAAK+H,EAAE8C,GACxE,CAIIkgB,sBACH,OAAQ/qB,KAAK+H,EAAE6B,EAChB,CACImhB,oBAAgB7W,GACnBlU,KAAK+H,EAAE6B,IAAK,QAAWsK,GACgBlU,KAAK8qB,GAAG,kBAAmB9qB,KAAK+H,EAAE6B,GAC1E,CAIIohB,uBACH,OAAQhrB,KAAK+H,EAAE0C,EAChB,CACIugB,qBAAiB9W,GACpBlU,KAAK+H,EAAE0C,IAAK,QAAWyJ,GACgBlU,KAAK8qB,GAAG,mBAAoB9qB,KAAK+H,EAAE0C,GAC3E,CAIIwgB,kBACH,OAAQjrB,KAAK+H,EAAEsD,EAChB,CACI4f,gBAAY/W,GACflU,KAAK+H,EAAEsD,IAAM6I,EAC0BlU,KAAK8qB,GAAG,cAAe9qB,KAAK+H,EAAEsD,GACtE,CAII6f,kBACH,OAAQlrB,KAAK+H,EAAE2E,EAChB,CACIwe,gBAAYhX,GACflU,KAAK+H,EAAE2E,IAAMwH,EAC0BlU,KAAK8qB,GAAG,cAAe9qB,KAAK+H,EAAE2E,GACtE,CAIIye,uBACH,OAAO,QAAcnrB,KAAK+H,EAAEwO,GAC7B,CACI4U,qBAAiBjX,GACpBlU,KAAK+H,EAAEwO,IAAK,QAAcrC,GACalU,KAAK8qB,GAAG,oBAAoB,QAAc9qB,KAAK+H,EAAEwO,IACzF,CAII6U,uBACH,OAAO,QAAcprB,KAAK+H,EAAE+hB,GAC7B,CACIsB,qBAAiBlX,GACpBlU,KAAK+H,EAAE+hB,IAAK,QAAc5V,GACalU,KAAK8qB,GAAG,oBAAoB,QAAc9qB,KAAK+H,EAAE+hB,IACzF,CAIIuB,kBACH,OAAQrrB,KAAK+H,EAAEiE,EAChB,CACIqf,gBAAYnX,GACflU,KAAK+H,EAAEiE,IAAMkI,EAC0BlU,KAAK8qB,GAAG,cAAe9qB,KAAK+H,EAAEiE,GACtE,CAIIsf,wBACH,OAAQtrB,KAAK+H,EAAE8D,EAChB,CACIyf,sBAAkBpX,GACrBlU,KAAK+H,EAAE8D,IAAMqI,EAC0BlU,KAAK8qB,GAAG,oBAAqB9qB,KAAK+H,EAAE8D,GAC5E,CAQWqe,mCACX,OAAOlqB,KAAKsqB,6BACZ,CACeJ,iCAA6BxD,GACe,OAA/C1mB,KAAKuqB,wCACLvqB,KAAK+H,EAAEmiB,8BAA+B,QAAelqB,KAAK+H,EAAEmiB,6BAA8BlqB,KAAKuqB,uCAC/FvqB,KAAKuqB,sCAAwC,KAC7CvqB,KAAKsqB,8BAAgC,MAGzCtqB,KAAKsqB,8BAAgC5D,EACrC1mB,KAAKuqB,sCAAwC,CAAClX,EAAGnS,KAErC,IAAIylB,EAAY,IAAI,IAClCA,EAAWC,uBAAuB1lB,GACflB,KAAaurB,oCACbvrB,KAAaurB,mCAAmCvrB,KAAM2mB,GAEvD3mB,KAAKsqB,+BACzBtqB,KAAKsqB,8BAA8BtqB,KAAM2mB,E,EAIrC3mB,KAAK+H,EAAEmiB,8BAA+B,QAAgBlqB,KAAK+H,EAAEmiB,6BAA8BlqB,KAAKuqB,sCACpG,EAzK2B,EAAAC,kEAA8E,KAa/E,EAAAjC,YAAsB,6CACnB,EAAAF,sBAAuB,EC7DlD,MAAMmD,EACF9V,kBACX,EAAA+V,kCAAkCjc,WAC1B6a,EAA+C7a,WAC/C,KAAc6W,aAAa,iDAAkDgE,GAC7E,KAAc7a,SAAS,qCAA4Cua,EAAoCvT,MAC3G,E,oNCOG,MAAMkV,UAA+BrS,EAAA,EAG3CnZ,cACCH,MAAM,IAAI4rB,EAAA,GA0DH,KAAA3H,GAAa,EAQb,KAAA4H,GAAa,KAQb,KAAAC,GAAa,KAiEb,KAAAC,sBAA6B,KAC7B,KAAAC,0BAAiC,KA3IxC/rB,KAAK6rB,GAAK,YACV7rB,KAAK4rB,GAAK,kCACV5rB,KAAKgkB,GAAK,GACVhkB,KAAKgsB,UAAY,KACjBhsB,KAAKisB,uCAAyCjsB,KAAKisB,uCAAuClI,KAAK/jB,MAC/FA,KAAKksB,mCAAqClsB,KAAKksB,mCAAmCnI,KAAK/jB,KACxF,CAEImsB,mBACH,OAAensB,KAAKS,EAAEirB,EAAuBU,qBAC9C,CACID,iBAAa5rB,GAChBP,KAAKqE,EAAEqnB,EAAuBU,qBAAsB7rB,EACrD,CACQmV,UAAUnV,EAAqBC,GACbD,EAAGwF,GAAG,eAAgBvF,EAAEyH,SAAUzH,EAAE0H,SAC9D,CAEImkB,eACH,OAAersB,KAAKS,EAAEirB,EAAuBY,iBAC9C,CACID,aAAS9rB,GACZP,KAAKqE,EAAEqnB,EAAuBY,iBAAkB/rB,EACjD,CACQmV,UAAUnV,EAAqBC,GACbD,EAAGwF,GAAG,WAAYvF,EAAEyH,SAAUzH,EAAE0H,SAC1D,CAEIqkB,eACH,OAAevsB,KAAKS,EAAEirB,EAAuBc,iBAC9C,CACID,aAAShsB,GACZP,KAAKqE,EAAEqnB,EAAuBc,iBAAkBjsB,EACjD,CACQmV,UAAUnV,EAAqBC,GACbD,EAAGwF,GAAG,WAAYvF,EAAEyH,SAAUzH,EAAE0H,SAC1D,CAEI8jB,gBACH,OAAehsB,KAAKS,EAAEirB,EAAuBe,kBAC9C,CACIT,cAAUzrB,GACbP,KAAKqE,EAAEqnB,EAAuBe,kBAAmBlsB,EAClD,CACQmV,UAAUnV,EAAqBC,GACbD,EAAGwF,GAAG,YAAavF,EAAEyH,SAAUzH,EAAE0H,SAC3D,CAEIwkB,kBACH,OAAgB1sB,KAAKS,EAAEirB,EAAuBiB,oBAC/C,CACID,gBAAYnsB,GACfP,KAAKqE,EAAEqnB,EAAuBiB,oBAAqBpsB,EACpD,CACQmV,UAAUnV,EAAqBC,GACbD,EAAGwF,GAAG,cAAevF,EAAEyH,SAAUzH,EAAE0H,SAC7D,CAEI0kB,0BACH,OAAO5sB,KAAKgkB,EACb,CACI4I,wBAAoBrsB,GACvBP,KAAKgkB,GAAKzjB,EACVP,KAAK4G,IAAG,EACT,CAEIimB,8BACH,OAAO7sB,KAAK4rB,EACb,CACIiB,4BAAwBtsB,GAC3BP,KAAK4rB,GAAKrrB,EACVP,KAAK4G,IAAG,EACT,CAEIkmB,iBACH,OAAO9sB,KAAK6rB,EACb,CACIiB,eAAWvsB,GACdP,KAAK6rB,GAAKtrB,EACVP,KAAK4G,IAAG,EACT,CACAmmB,kBACC/sB,KAAK4G,IAAG,EACT,CACQP,GAAG9F,GACVA,GACD,CACQqG,GAAGrG,GACV,IAAI,EAAAgkB,EAAA,IAAoBvkB,KAAKgsB,YAAmB,GAALzrB,EAE1C,YADAP,KAAKyL,KAGN,IAAIjL,EAAIR,KAAK6sB,wBACb,IAAI,EAAAtI,EAAA,IAAoB/jB,GAEvB,YADAR,KAAKgsB,UAAY,IAMlB,GAHiC,KAA7BxrB,EAAEwsB,OAAOxsB,EAAE4hB,OAAS,EAAG,KAC1B5hB,GAAK,MAEF,EAAA+jB,EAAA,IAAoBvkB,KAAK8sB,YAE5B,YADA9sB,KAAKgsB,UAAY,IAGlB,IAAIvrB,EAAIT,KAAK4sB,oBAKb,GAJInsB,EAAI,IACPA,EAAI,GAELD,IAAK,QAAckrB,EAAuBrH,GAAIrkB,KAAKqsB,SAAUrsB,KAAKusB,SAAUvsB,KAAK8sB,WAAYrsB,IACxFgkB,EAAA,EAAIC,sBAAsBlkB,EAAG,GAEjC,YADAR,KAAKgsB,UAAY,IAGlB,IAAIpH,EAAOpkB,EACXR,KAAK8rB,sBAAwB,IAAgBjH,OAAOD,EAAM5kB,KAAKksB,mCAAoC,KACpG,CACQzgB,KACP,IAAI,EAAA8Y,EAAA,IAAoBvkB,KAAKmsB,cAC5B,OAED,IAAI5rB,EAAIP,KAAKmsB,aAIb,GAHiC,KAA7B5rB,EAAEysB,OAAOzsB,EAAE6hB,OAAS,EAAG,KAC1B,EAAAmC,EAAA,IAAahkB,EAAGA,EAAE6hB,OAAS,EAAG,GAE1BpiB,KAAK0sB,YAMTnsB,GAAI,QAAa,aAAcA,OANT,CACtB,IAAI,EAAAgkB,EAAA,IAAoBvkB,KAAKgsB,WAC5B,OAEDzrB,GAAI,QAAa,uBAAwBA,EAAGP,KAAKgsB,U,CAIlD,IAAKvH,EAAA,EAAIC,sBAAsBnkB,EAAG,GACjC,OAED,IAAIqkB,EAAOrkB,EACXP,KAAK+rB,0BAA4B,IAAgBlH,OAAOD,EAAM5kB,KAAKisB,uCAAwC,KAC5G,CAGQC,mCAAmC3rB,EAAQC,GAClD,GAAIA,GAAKR,KAAK8rB,sBACb,OAED9rB,KAAK8rB,sBAAwB,KAC7B,IAAIhH,EAAQvkB,EACRE,EAA8CukB,KAAKC,MAAMH,GAC7D,GAAS,MAALrkB,EAAW,CACd,IAAIQ,EAAY,GACD,MAAXR,EAAEwsB,QACLhsB,EAAIR,EAAEwsB,OAEPjtB,KAAKgsB,UAAY/qB,C,CAEnB,CACQgrB,uCAAuC1rB,EAAQC,GACtD,GAAIA,GAAKR,KAAK+rB,0BACb,OAED/rB,KAAK+rB,0BAA4B,KACjC,IAAIjH,EAAQvkB,EACRE,EAAsDukB,KAAKC,MAAMH,GAC3D,MAALrkB,GAA6B,MAAdA,EAAEysB,WACIltB,KAAK6d,GAAIsP,cAAgB1sB,EAAEysB,SAASE,KAAKhL,OAEpE,CACQrc,GAAGxF,EAAWC,EAAQC,GAC7B,IAAIQ,GAAI,EAAA6N,EAAA,IAAuC6c,EAAA,EAAwBznB,EAAGlE,KAAK6d,IAC/E,OAAQtd,GACP,IAAK,eACI,MAALU,IACHA,EAAEkrB,cAAe,EAAArd,EAAA,IAAiB,KAAcrO,IAEjDT,KAAKyL,KACL,MAEA,IAAK,WAEL,IAAK,WACL,IAAI,EAAA8Y,EAAA,IAAoBvkB,KAAKqsB,YAAa,EAAA9H,EAAA,IAAoBvkB,KAAKusB,UAClE,OAEDvsB,KAAK4G,IAAG,GACR,MAEA,IAAK,YACL5G,KAAKqG,IAAG,IAAMpF,EAAE+qB,UAAYhsB,KAAKgsB,YACjChsB,KAAKyL,KACL,MAEA,IAAK,cACLxK,EAAEyrB,YAAc1sB,KAAK0sB,YAKtB3sB,MAAM4e,GAAGpe,EAAGC,EAAGC,EAChB,EAzMO,EAAAqH,IAAW,QAAS4jB,EAAwB,yBAAgCrS,EAAA,EAAsBnV,GACjF,EAAAmgB,GAAa,4FAUrB,EAAA+H,qBAA2C1O,EAAA,EAAmB3V,EAAE,eAAgB,KAAoB2jB,EAAwBxnB,EAAG,IAAIyZ,EAAA,EAAiB,EAAG,KAAM+N,EAAuBpmB,KAUpL,EAAAgnB,iBAAuC5O,EAAA,EAAmB3V,EAAE,WAAY,KAAoB2jB,EAAwBxnB,EAAG,IAAIyZ,EAAA,EAAiB,EAAG,KAAM+N,EAAuBnmB,KAU5K,EAAAinB,iBAAuC9O,EAAA,EAAmB3V,EAAE,WAAY,KAAoB2jB,EAAwBxnB,EAAG,IAAIyZ,EAAA,EAAiB,EAAG,KAAM+N,EAAuBjlB,KAU5K,EAAAgmB,kBAAwC/O,EAAA,EAAmB3V,EAAE,YAAa,KAAoB2jB,EAAwBxnB,EAAG,IAAIyZ,EAAA,EAAiB,EAAG,KAAM+N,EAAuB5e,KAU9K,EAAA6f,oBAA0CjP,EAAA,EAAmB3V,EAAE,cAAe,KAAqB2jB,EAAwBxnB,EAAG,IAAIyZ,EAAA,EAAiB,GAAG,EAAM+N,EAAuBzlB,K,eClE7L,MAAMonB,UAAkC,IAGrC1H,uBAET,OAAO,IAAI+F,CACZ,CAIwC3jB,QACtC,OAAO/H,KAAK6B,eACb,CACA3B,cACCH,OACD,CAIIosB,mBACH,OAAQnsB,KAAK+H,EAAEokB,YAChB,CACIA,iBAAajY,GAChBlU,KAAK+H,EAAEokB,aAAejY,CACvB,CAIImY,eACH,OAAQrsB,KAAK+H,EAAEskB,QAChB,CACIA,aAASnY,GACZlU,KAAK+H,EAAEskB,SAAWnY,CACnB,CAIIqY,eACH,OAAQvsB,KAAK+H,EAAEwkB,QAChB,CACIA,aAASrY,GACZlU,KAAK+H,EAAEwkB,SAAWrY,CACnB,CAII8X,gBACH,OAAQhsB,KAAK+H,EAAEikB,SAChB,CACIA,cAAU9X,GACblU,KAAK+H,EAAEikB,UAAY9X,CACpB,CAIIwY,kBACH,OAAQ1sB,KAAK+H,EAAE2kB,WAChB,CACIA,gBAAYxY,GACflU,KAAK+H,EAAE2kB,aAAc,QAAWxY,EACjC,CAII0Y,0BACH,OAAQ5sB,KAAK+H,EAAE6kB,mBAChB,CACIA,wBAAoB1Y,GACvBlU,KAAK+H,EAAE6kB,qBAAuB1Y,CAC/B,CAII2Y,8BACH,OAAQ7sB,KAAK+H,EAAE8kB,uBAChB,CACIA,4BAAwB3Y,GAC3BlU,KAAK+H,EAAE8kB,wBAA0B3Y,CAClC,CAII4Y,iBACH,OAAQ9sB,KAAK+H,EAAE+kB,UAChB,CACIA,eAAW5Y,GACdlU,KAAK+H,EAAE+kB,WAAa5Y,CACrB,CAMO6Y,kBACN/sB,KAAK+H,EAAEglB,iBACR,EC/FM,MAAMO,EACF5X,kBAEH,KAAc2Q,aAAa,4BAA6BgH,GACxD,KAAc7d,SAAS,yBAAgCkc,EAAwBlV,MACnF,E,6JCwBG,MAAM+W,UAAkC,IAOvC3c,WAAO4c,GACPxtB,KAAKytB,QAAUD,EACfxtB,KAAK0tB,MAAM9c,OAAS4c,EACpBxtB,KAAK2tB,wBACT,CACI/c,aACA,OAAO5Q,KAAKytB,OAChB,CAEIxmB,UAAMumB,GACNxtB,KAAK4tB,OAASJ,EACdxtB,KAAK0tB,MAAMzmB,MAAQumB,EACnBxtB,KAAK2tB,wBACT,CACI1mB,YACA,OAAOjH,KAAK4tB,MAChB,CAEOD,yBACH3tB,KAAK6tB,OAAOF,wBAChB,CAKI9mB,aACA,GAAqB,MAAjB7G,KAAK+H,EAAElB,OACP,OAAa7G,KAAK+H,EAAElB,OAAQpF,cACpC,CACIoF,WAAOqN,GACE4Z,MAAL5Z,GAAuB,MAALA,IAClBlU,KAAK+H,EAAElB,OAASqN,EAAEnM,EAC1B,CAeI2R,aACA,GAAqB,OAAjB1Z,KAAK+tB,QAAkB,CACvB,IAAIzL,EAAO,IAAI,IAC+DA,EAAM0L,WAC9EC,aAAY,CAACC,EAAQhtB,KACvB,GAAKlB,KAAKmuB,eAGV,OAAQjtB,EAAEktB,QACN,KAAKC,EAAA,EAA8BC,IAC/BtuB,KAAKmuB,eAAeI,cAAcrtB,EAAEstB,SAASje,KAAK,IAClD,MACJ,KAAK8d,EAAA,EAA8BI,OAC/BzuB,KAAKmuB,eAAeO,mBAAmBxtB,EAAEytB,kBACzC,MACJ,KAAKN,EAAA,EAA8BO,QAC/B5uB,KAAKmuB,eAAeO,mBAAmBxtB,EAAEytB,kBACzC3uB,KAAKmuB,eAAeU,iBAAiB3tB,EAAE4tB,iBAAkB5tB,EAAEstB,SAASje,KAAK,IACzE,MACJ,KAAK8d,EAAA,EAA8BU,MAC/B/uB,KAAKmuB,eAAea,mB,IAIhChvB,KAAK+tB,QAAUzL,C,CAEnB,OAAOtiB,KAAK+tB,OAChB,CAIA7tB,cAEIH,QArFJ,KAAAkvB,cAAsC,GA4CzC,KAAAC,aAAqC,GAI7B,KAAAnB,QAA+B,KAkH5B,KAAAoB,YAAmB,KAgCnB,KAAAhB,eAAgE,KAEhE,KAAAiB,eAAgB,EAkEhB,KAAAC,iBAAwB,KA+cvB,KAAAC,iBAA2F,KAC3F,KAAAC,yBAAgC,KA/nBhCvvB,KAAa6oB,UACd,KAAY2G,sBAAsBC,OAAOC,eAAe1vB,OAE5DA,KAAK2vB,UAAY,IAAI,KAAqB3vB,KACtC4vB,UACA,EAAMC,EAAA,GAGV7vB,KAAK8vB,WAAa9vB,KAAK2vB,UAAUzd,cAAc,OAC/ClS,KAAK2vB,UAAUI,WAAW/vB,KAAK8vB,YAE/B9vB,KAAK8vB,WAAWE,iBAAiB,UAAW,SAC5ChwB,KAAK8vB,WAAWE,iBAAiB,QAAS,QAC1ChwB,KAAK8vB,WAAWE,iBAAiB,SAAU,QAGpChwB,KAAK8vB,WACyB,MAAjC9vB,KAAK8vB,WAAWG,eACTjwB,KAAK8vB,WAAWG,cAG3BjwB,KAAKkwB,SAAWlwB,KAAK2vB,UACrB,IAAIQ,EAAQnwB,KAAK+H,EACjB/H,KAAK6tB,OAASsC,EAEdnwB,KAAKmuB,eAAiB,IAAI,KACtBnuB,KAAKivB,cACLjvB,KAAK+H,EAAE2R,OACP1Z,KAAKkvB,cACJzuB,GAAMA,EAAEsH,IACRA,IACSA,EAAGqoB,MAAQpwB,KACX+H,EAAGsoB,iBAAiBrwB,KAAKmvB,aAC/BpnB,EAAEuoB,YAAYtwB,KAAKmvB,aACfnvB,KAAKuwB,eACJxoB,EAAU8gB,SAAS7oB,KAAMA,KAAMA,MAGpCA,KAAKwwB,sBAAsBzoB,GAC3B/H,KAAKywB,sBAAsB1oB,EAAE,IAEhCA,IAAcA,EAAGsoB,iBAAiB,MAAOtoB,EAAEuoB,YAAY,KAAK,IAGjEH,EAAM5Y,iBAAiBvX,KAAK2vB,WAElB,IAAIe,kBAAkBvO,IAC5B,IAAK,IAAIwO,KAAYxO,EACI,aAAjBwO,EAAS7hB,MACT9O,KAAK4wB,uB,IAIbC,QAAQ7wB,KAAM,CACd8wB,WAAW,IAGf9wB,KAAK2vB,UAAUoB,gBAAe,KAC1B/wB,KAAK2tB,wBAAwB,GAErC,CAEAqD,UACIhxB,KAAK6tB,OAAOmD,UACZhxB,KAAKkwB,SAASc,SAClB,CAIOrL,uBACT,OAAO,IAAI5W,EAAA,CACZ,CAKOkiB,eAAWzD,GACjBxtB,KAAKmvB,YAAc3B,EACnBxtB,KAAKkxB,UACN,CACID,iBACH,OAAOjxB,KAAKmvB,WACb,CAEA+B,WAEC,GAAIlxB,KAAKkvB,cAAgBlvB,KAAKkvB,aAAa9M,OAAS,EAEnD,IADA,IAAI+O,EAAanxB,KAAKkvB,aACbnnB,EAAI,EAAGA,EAAIopB,EAAW/O,OAAQra,IACtCopB,EAAWppB,GAAGuoB,YAAYtwB,KAAKmvB,YAG/B,CAEQyB,wBACJ5wB,KAAKivB,cAAc7M,OAAS,EAC5B,IAAK,IAAIra,EAAI,EAAGA,EAAI/H,KAAKoxB,SAAShP,OAAQra,IAClC/H,KAAKoxB,SAASrpB,aAAc,KAC5B/H,KAAKivB,cAAcoC,KAAyBrxB,KAAKoxB,SAASrpB,IAIvC,MAAvB/H,KAAKmuB,gBACLnuB,KAAKmuB,eAAemD,sBAE5B,CAKArJ,uBACIjoB,KAAKovB,eAAgB,EACjBpvB,KAAK+H,GACL/H,KAAK+H,EAAEwpB,kBAEf,CAEAzJ,oBACI,GAAI9nB,KAAKovB,cAKL,OAJApvB,KAAKovB,eAAgB,OACjBpvB,KAAK+H,GACL/H,KAAK+H,EAAEypB,kBAIfxxB,KAAKyxB,UAAUjgB,IAAI,sBACnBxR,KAAKyxB,UAAUjgB,IAAI,qBAEnBxR,KAAK0xB,YAAY1xB,KAAK2vB,UAAUgC,YAAYre,oBAC5CtT,KAAK+nB,WAAY,EACjB/nB,KAAK0tB,MAAMkE,QAAU,QACrB5xB,KAAK0tB,MAAM9c,OAAS5Q,KAAKytB,QACzBztB,KAAK0tB,MAAMzmB,MAAQjH,KAAK4tB,OACxB5tB,KAAKgoB,yBAELhoB,KAAK6oB,SAAS7oB,KAAMA,MACpB,IAAK,IAAI+H,EAAI,EAAGA,EAAI/H,KAAKkvB,aAAa9M,OAAQra,IAClC/H,KAAKkvB,aAAannB,GACf8gB,SAAS7oB,KAAMA,KAAMA,MAGpCA,KAAK4wB,wBACL5wB,KAAK6xB,kBACT,CAEHA,mBACC,GAAI,KAAcC,aAAa,wCAAyC,CACvE,IAAI3Z,EAAK,KAAc4Z,OAAO,wCAErB/xB,KAAKqvB,iBAAmBlX,EAC3BA,EAAI6Z,eAAiB,KAC1BhyB,KAAKiyB,wBAAwB9Z,EAAG,C,CAOlCnY,KAAK+H,EAAE4lB,wBACR,CAEW8C,sBAAsB/W,GACpBA,EAAQ+W,uBACnB,IAAMzwB,KAAKkyB,kBACVC,IACA,IAAIC,EAAU,IAAI,KACjBD,EACAnyB,KAAK2vB,WAIN,OAFMyC,EAASC,cAAsBF,EAAKE,cACpCD,EAASE,YAAoBH,EAAKG,YACjCF,CAAO,GAEd,CAGK5B,sBAAsB9W,GACM,MAAzB1Z,KAAKqvB,kBAGTrvB,KAAKqvB,iBAAuC,qBAAE3V,EACrD,CAEQuY,wBAAwB9Z,GAC/B,GAAInY,KAAKkvB,cAAgBlvB,KAAKkvB,aAAa9M,OAAS,EAEnD,IADA,IAAI+O,EAAanxB,KAAKkvB,aACbnnB,EAAI,EAAGA,EAAIopB,EAAW/O,OAAQra,IAClCopB,EAAWppB,GAAGwqB,oBACjBvyB,KAAKwwB,sBAAsBW,EAAWppB,GAI1C,CAEWmqB,gBACV,IAAK,KAAcJ,aAAa,gCAC/B,OAAO,KAER,IAAI3Z,EAAK,KAAc4Z,OAAO,gCAC1BI,EAAeha,EACfqa,EAAOxyB,KAgCX,OA9BMmyB,EAAKE,cAAgB,SAAU5xB,EAAGgyB,GAC9B,GAAIhyB,EAAEgB,eACFhB,EAAIA,EAAEgB,mBACH,CACH,IAAIghB,EAAM,IAAI,IACRA,EAAK5gB,gBAAkBpB,EAC7BA,EAAIgiB,C,CAiBjB,OAdcgQ,EASDhyB,EAAEgyB,cAAe,EARbN,EAAI5B,eAAiBiC,EAAK1C,WAAWxc,qBACZ,MAArB6e,EAAI5B,eACJ4B,EAAI5B,cAAcmC,YAAYP,GAGlCK,EAAK1C,WAAWxc,mBAAmBoe,YAAYS,IAK1Dha,EAAIwa,QAAUlyB,EACd0xB,EAAKzE,MAAMkE,QAAU,SAEpB,CACR,EACMO,EAAKG,YAAc,WAClBH,EAAKzE,MAAMkE,QAAU,MAC5B,EACMO,EAAKzE,MAAMkE,QAAU,OAEpBzZ,CACL,CAKIrB,wBACA,OAAgC,MAA5B9W,KAAK+H,EAAE+O,kBACM9W,KAAK+H,EAAE+O,kBAAmBrV,eAEhC,IAEf,CACIqV,sBAAkB5C,GAClB,GAAkB,iBAAP,GAAwB,SAALA,EAG1B,OAFAlU,KAAK+H,EAAE+O,kBAAoB,UAC3B9W,KAAK8qB,GAAG,oBAAqB,SAGxBgD,MAAL5Z,GAAuB,MAALA,EAClBlU,KAAK+H,EAAE+O,kBAAoB5C,EAAEnM,GAE7B/H,KAAK+H,EAAE+O,kBAAoB,KAC3B9W,KAAK8qB,GAAG,oBAAqB,SAErC,CAKoC/iB,QACtC,OAAO/H,KAAK6B,eACb,CAM2BqmB,gCACP,GAA8E,MAA1EqF,EAA0BqF,6CAAsD,CAChF,IAAIxK,GAAQ,QAAoBmF,GACpD,IAAK,IAAIxlB,EAAI,EAAGA,EAAIqgB,EAAMhG,OAAQra,IACVqgB,EAAMrgB,IAAK,QAASqgB,EAAMrgB,IAElDwlB,EAA0BqF,6CAA+CxK,C,CAEzD,OAAOmF,EAA0BqF,4CACrC,CAOOld,kBACE6X,EAA0BlF,uBAC3BkF,EAA0BlF,sBAAuB,EACjD,IAAsBC,gBAClBiF,EAA0BhF,YAC1BgF,GAEhB,CAKRsF,eACH,OAAQ7yB,KAAK+H,EAAE5H,EAChB,CACI0yB,aAAS3e,GACZlU,KAAK+H,EAAE5H,IAAK,QAAW+T,GACgBlU,KAAK8qB,GAAG,WAAY9qB,KAAK+H,EAAE5H,GACnE,CAII2yB,qBACH,OAAO9yB,KAAK+H,EAAEhF,EACf,CACI+vB,mBAAe5e,GAClBlU,KAAK+H,EAAEhF,IAAK,QAA8ByK,EAAA,EAAyB0G,GAC5BlU,KAAK8qB,GAAG,kBAAkB,QAAgCtd,EAAA,EAAyBxN,KAAK+H,EAAEhF,IAClI,CAIIwY,kCACH,OAAQvb,KAAK+H,EAAEuT,EAChB,CACIC,gCAA4BrH,GAC/BlU,KAAK+H,EAAEuT,IAAK,QAAWpH,GACgBlU,KAAK8qB,GAAG,8BAA+B9qB,KAAK+H,EAAEuT,GACtF,CAIIyX,2BACH,OAAO/yB,KAAK+H,EAAE8P,EACf,CACIkb,yBAAqB7e,GACxBlU,KAAK+H,EAAE8P,IAAK,QAAoCvK,EAAA,EAA+B4G,GACxClU,KAAK8qB,GAAG,wBAAwB,QAAsCxd,EAAA,EAA+BtN,KAAK+H,EAAE8P,IACpJ,CAIImb,gCACH,OAAQhzB,KAAK+H,EAAEiS,EAChB,CACIgZ,8BAA0B9e,GAC7BlU,KAAK+H,EAAEiS,IAAK,QAAW9F,GACgBlU,KAAK8qB,GAAG,4BAA6B9qB,KAAK+H,EAAEiS,GACpF,CAIIiZ,yCACH,OAAQjzB,KAAK+H,EAAE2T,EAChB,CACIuX,uCAAmC/e,GACtClU,KAAK+H,EAAE2T,IAAK,QAAWxH,GACgBlU,KAAK8qB,GAAG,qCAAsC9qB,KAAK+H,EAAE2T,GAC7F,CAIIwX,gBACH,OAAO,QAASlzB,KAAK+H,EAAEgF,GACxB,CACImmB,cAAUhf,GACblU,KAAK+H,EAAEgF,IAAK,QAAOmH,GACoBlU,KAAK8qB,GAAG,aAAa,QAAa9qB,KAAK+H,EAAEgF,IACjF,CAIIomB,sBACH,OAAO,QAASnzB,KAAK+H,EAAEkC,GACxB,CACIkpB,oBAAgBjf,GACnBlU,KAAK+H,EAAEkC,IAAK,QAAOiK,GACoBlU,KAAK8qB,GAAG,mBAAmB,QAAa9qB,KAAK+H,EAAEkC,IACvF,CAKImpB,YACoC,MAAMrgB,EAAI/S,KAAK+H,EAAEkF,GACjB,GAAS,MAAL8F,EACA,OAAO,KAGX,IAAMA,EAAUtR,eAAgB,CAC5B,IAAIP,EAAI,IAAyBynB,oBAAoB5V,GACjD7R,IACCA,EAAUW,gBAAkBkR,GAEhCA,EAAUtR,eAAiBP,C,CAEvE,OAAQ6R,EAAUtR,cACnB,CACI2xB,UAAMlf,GACuC,MAALA,GAAalU,KAAK4oB,mBAAsB1U,EAAU2U,UAAW3U,EAAU2U,SAAS7oB,KAAK4oB,kBAAmB5oB,KAAMA,MAE7IA,KAAK+H,EAAEkF,GAAd,MAALiH,EAAwB,KAAmBA,EAAEnM,CAC9C,CAKIsrB,YACoC,MAAMtgB,EAAI/S,KAAK+H,EAAEmF,GACjB,GAAS,MAAL6F,EACA,OAAO,KAGX,IAAMA,EAAUtR,eAAgB,CAC5B,IAAIP,EAAI,IAAyBynB,oBAAoB5V,GACjD7R,IACCA,EAAUW,gBAAkBkR,GAEhCA,EAAUtR,eAAiBP,C,CAEvE,OAAQ6R,EAAUtR,cACnB,CACI4xB,UAAMnf,GACuC,MAALA,GAAalU,KAAK4oB,mBAAsB1U,EAAU2U,UAAW3U,EAAU2U,SAAS7oB,KAAK4oB,kBAAmB5oB,KAAMA,MAE7IA,KAAK+H,EAAEmF,GAAd,MAALgH,EAAwB,KAAmBA,EAAEnM,CAC9C,CAIIurB,YACH,OAAQtzB,KAAK+H,EAAEwrB,EAChB,CAKIC,kBACH,OAAQxzB,KAAK+H,EAAE6T,EAChB,CACI4X,gBAAYtf,GACflU,KAAK+H,EAAE6T,IAAM1H,EAC0BlU,KAAK8qB,GAAG,cAAe9qB,KAAK+H,EAAE6T,GACtE,CAKI6X,wBACH,OAAQzzB,KAAK+H,EAAE5D,EAChB,CACIsvB,sBAAkBvf,GACrBlU,KAAK+H,EAAE5D,IAAM+P,EAC0BlU,KAAK8qB,GAAG,oBAAqB9qB,KAAK+H,EAAE5D,GAC5E,CAIIuvB,kBACH,OAAQ1zB,KAAK+H,EAAE3H,EAChB,CAGW6oB,WAAW9L,GAGlB,OADiBpd,MAAMkpB,WAAW9L,KAMlCnd,KAAK8W,mBAAsB9W,KAAK8W,kBAA0BqG,MAASnd,KAAK8W,kBAA0BqG,MAAQA,EAAend,KAAK8W,kBAEnH,KACX,CAGc+R,SAASK,EAAgBC,EAAgBC,GAC/CrpB,MAAM8oB,SAASK,EAAWC,EAAWC,GAErCppB,KAAKqpB,YAAa,EACdrpB,KAAKozB,OAAUpzB,KAAKozB,MAAcvK,UAC7C7oB,KAAKozB,MAAcvK,SAASK,EAAWC,EAAWnpB,MAEnDA,KAAKqzB,OAAUrzB,KAAKqzB,MAAcxK,UACjC7oB,KAAKqzB,MAAcxK,SAASK,EAAWC,EAAWnpB,MAG3CA,KAAKqpB,YAAa,CACtB,CAMDsK,4BAEN,IAAIC,EAAK5zB,KAAK+H,EAAEkQ,KACO,OAAO,QAAS2b,EACxC,CAMOvb,uBAAuBwb,GAE7B,IAAID,EAAK5zB,KAAK+H,EAAEsQ,wBAAuB,QAAOwb,IACvB,OAAO,QAASD,EACxC,CAKOE,iBAAiBC,GACvB/zB,KAAK+H,EAAEuE,IAAG,QAAOynB,GAClB,CAKOC,gBAAgBd,GACtBlzB,KAAK+H,EAAE+D,IAAG,QAAOonB,GAClB,CAMO5a,0BAA0Bub,GAEhC,IAAID,EAAK5zB,KAAK+H,EAAEuQ,2BAA0B,QAAOub,IAC1B,OAAO,QAASD,EACxC,CACOK,wBAAwBJ,EAAoBK,GAElD,IAAIN,EAAK5zB,KAAK+H,EAAEiC,IAAG,QAAO6pB,GAAaK,GAChB,OAAO,QAASN,EACxC,CACOhb,4BAA4Bub,EAAoBC,GAEtD,IAAIR,EAAK5zB,KAAK+H,EAAE6Q,6BAA4B,QAAQub,IAAY,QAAQC,IACjD,OAAO,QAASR,EACxC,CAMOS,sBAAsBpiB,GAE5B,IAAI2hB,EAAK5zB,KAAK+H,EAAE8Q,IAAG,QAAO5G,IACH,OAAO,QAAS2hB,EACxC,CAMOU,mBAAmBC,GAEzB,IAAIX,EAAK5zB,KAAK+H,EAAEiR,IAAG,QAAQub,IACJ,OAAO,QAAUX,EACzC,CAMOY,cAAcC,GAEpB,IAAIb,EAAK5zB,KAAK+H,EAAEmR,IAAG,QAAQub,IACJ,OAAO,QAAUb,EACzC,CAMOc,eAAeD,GAErB,IAAIb,EAAK5zB,KAAK+H,EAAEqR,IAAG,QAAQqb,IACJ,OAAO,QAAUb,EACzC,CAKOta,iBACNtZ,KAAK+H,EAAEoE,IACR,CAKOwoB,eACN30B,KAAK+H,EAAEyR,IACR,CAKOob,iCAGiB,OADd50B,KAAK+H,EAAEuI,IAEjB,CAKOukB,+BAGiB,OADd70B,KAAK+H,EAAEkT,IAEjB,CAKOvL,kBACN1P,KAAK+H,EAAE2H,iBACR,CAKOolB,mBAGiB,OADd90B,KAAK+H,EAAE9C,IAEjB,CAMO8vB,iBAAiBlB,GACvB7zB,KAAK+H,EAAE6D,IAAG,QAAOioB,GAClB,CASW7lB,sBACX,OAAOhO,KAAKsvB,gBACZ,CACethB,oBAAgB0Y,GACe,OAAlC1mB,KAAKuvB,2BACLvvB,KAAK+H,EAAEiG,iBAAkB,QAAehO,KAAK+H,EAAEiG,gBAAiBhO,KAAKuvB,0BACrEvvB,KAAKuvB,yBAA2B,KAChCvvB,KAAKsvB,iBAAmB,MAG5BtvB,KAAKsvB,iBAAmB5I,EACxB1mB,KAAKuvB,yBAA2B,CAAClc,EAAGnS,KAExB,IAAIylB,EAAY,IAAI,IAClCA,EAAWC,uBAAuB1lB,GACflB,KAAag1B,uBACbh1B,KAAag1B,sBAAsBh1B,KAAM2mB,GAE1C3mB,KAAKsvB,kBACzBtvB,KAAKsvB,iBAAiBtvB,KAAM2mB,E,EAIxB3mB,KAAK+H,EAAEiG,iBAAkB,QAAgBhO,KAAK+H,EAAEiG,gBAAiBhO,KAAKuvB,yBAC1E,EA/Y2B,EAAAqD,6CAAyD,KAc1D,EAAArK,YAAsB,qBACnB,EAAAF,sBAAuB,EC/YlD,MAAM4M,EACFvf,kBACK,EAAA0Q,4BAA4B5W,WACpC,EAAA0lB,8BAA8B1lB,WAC9B,EAAAuX,0BAA0BvX,WAC1B8d,EAAgC9d,WAChC+d,EAA0B/d,WAC1B,KAAc6W,aAAa,4BAA6BkH,EAC5D,E,wEChBG,MAAM4H,EAGHxP,uBAET,OAAO,IAAItY,EAAA,CACZ,CAKYtF,QACV,OAAO/H,KAAK6B,eACb,CACQuzB,0BAER,CACAl1B,cACAF,KAAK6B,gBAAkB7B,KAAK2lB,uBACtB3lB,KAAK6B,gBAAiBJ,eAAiBzB,KAC7CA,KAAKo1B,0BACgCp1B,KAAaq1B,qBACbr1B,KAAaq1B,qBAGlD,CACUzO,uBAAuB7e,GAC7B/H,KAAK6B,gBAAkBkG,EACjB/H,KAAK6B,gBAAiBJ,eAAiBzB,KACjDA,KAAKo1B,0BACgCp1B,KAAaq1B,qBACbr1B,KAAaq1B,qBAGlD,E,oCCtBM,MAAeC,EAGZ3P,uBAET,OAAO,IACR,CAKY5d,QACX,OAAO/H,KAAK6B,eACZ,CAGA6T,2BAA2B6f,GACvB,IAAKA,EAC2B,OAAO,KAEX,IAAKA,EAAS/e,MACV,OAAO,KAEX,IACIgf,EAAe,MADRD,EAAS/e,MAAM2G,KACQ,YAClC,OAAK,KAAc2U,aAAa0D,GAGzB,KAAczD,OAAOyD,GAFjB,IAGf,CACpBJ,0BAER,CACAl1B,cAyGY,KAAAovB,iBAAyF,KACzF,KAAAC,yBAAgC,KA+BhC,KAAAkG,eAAqF,KACrF,KAAAC,uBAA8B,KA+B9B,KAAAC,iBAAmG,KACnG,KAAAC,yBAAgC,KA+BhC,KAAAC,kBAAqG,KACrG,KAAAC,0BAAiC,KAzM7C91B,KAAK6B,gBAAkB7B,KAAK2lB,uBACtB3lB,KAAK6B,gBAAiBJ,eAAiBzB,KAC7CA,KAAKo1B,0BACgCp1B,KAAaq1B,qBACbr1B,KAAaq1B,qBAGlD,CACUzO,uBAAuB7e,GAC7B/H,KAAK6B,gBAAkBkG,EACjB/H,KAAK6B,gBAAiBJ,eAAiBzB,KACjDA,KAAKo1B,0BACgCp1B,KAAaq1B,qBACbr1B,KAAaq1B,qBAGlD,CAIIxmB,sBACH,OAAO7O,KAAK+H,EAAE8G,eACf,CACIA,oBAAgBqF,GACoBlU,KAAK+H,EAAE8G,gBAAkBqF,CACjE,CAKIjC,iBACH,OAAO,QAASjS,KAAK+H,EAAEkK,WACxB,CACIA,eAAWiC,GACdlU,KAAK+H,EAAEkK,YAAa,QAAOiC,EAC5B,CAIIlF,oBACoC,MAAM+D,EAAI/S,KAAK+H,EAAEiH,cACjB,OAAS,MAAL+D,EACO,KAG1CA,EAAUtR,cACnB,CACIuN,kBAAckF,GACLlU,KAAK+H,EAAEiH,cAAd,MAALkF,EAAmC,KAA8BA,EAAEnM,CACpE,CAIIwW,cACH,OAAQve,KAAK+H,EAAEwW,OAChB,CACIA,YAAQrK,GACXlU,KAAK+H,EAAEwW,QAAUrK,CAClB,CAIIqH,kCACH,OAAQvb,KAAK+H,EAAEwT,2BAChB,CACIA,gCAA4BrH,GAC/BlU,KAAK+H,EAAEwT,6BAA8B,QAAWrH,EACjD,CAIIuK,gBACH,OAAQze,KAAK+H,EAAE0W,SAChB,CACIA,cAAUvK,GACblU,KAAK+H,EAAE0W,UAAYvK,CACpB,CACI6hB,cACH,OAAQ/1B,KAAK+H,EAAEguB,OAChB,CACIA,YAAQ7hB,GACXlU,KAAK+H,EAAEguB,SAAW7hB,CACnB,CAEW+U,WAAW9L,GAElB,OAAKnd,KAAag2B,cACV7Y,GAAgC,GAAxBA,EAAK8Y,QAAQ,QACbj2B,KAAag2B,aAAa7Y,GAI1Cnd,KAAKgP,eAAkBhP,KAAKgP,cAAsBmO,MAASnd,KAAKgP,cAAsBmO,MAAQA,EAAend,KAAKgP,cAEvG,IACX,CAKGsK,iBACNtZ,KAAK+H,EAAEuR,gBACR,CAQWtL,sBACX,OAAOhO,KAAKsvB,gBACZ,CACethB,oBAAgB0Y,GACe,OAAlC1mB,KAAKuvB,2BACLvvB,KAAK+H,EAAEiG,iBAAkB,QAAehO,KAAK+H,EAAEiG,gBAAiBhO,KAAKuvB,0BACrEvvB,KAAKuvB,yBAA2B,KAChCvvB,KAAKsvB,iBAAmB,MAG5BtvB,KAAKsvB,iBAAmB5I,EACxB1mB,KAAKuvB,yBAA2B,CAAClc,EAAGnS,KAExB,IAAIylB,EAAY,IAAI,IAClCA,EAAWC,uBAAuB1lB,GACflB,KAAag1B,uBACbh1B,KAAag1B,sBAAsBh1B,KAAM2mB,GAE1C3mB,KAAKsvB,kBACzBtvB,KAAKsvB,iBAAiBtvB,KAAM2mB,E,EAIxB3mB,KAAK+H,EAAEiG,iBAAkB,QAAgBhO,KAAK+H,EAAEiG,gBAAiBhO,KAAKuvB,yBAC1E,CAQO7c,oBACX,OAAO1S,KAAKy1B,cACZ,CACe/iB,kBAAcgU,GACe,OAAhC1mB,KAAK01B,yBACL11B,KAAK+H,EAAE2K,eAAgB,QAAe1S,KAAK+H,EAAE2K,cAAe1S,KAAK01B,wBACjE11B,KAAK01B,uBAAyB,KAC9B11B,KAAKy1B,eAAiB,MAG1Bz1B,KAAKy1B,eAAiB/O,EACtB1mB,KAAK01B,uBAAyB,CAACriB,EAAGnS,KAEtB,IAAIylB,EAAY,IAAIwO,EAClCxO,EAAWC,uBAAuB1lB,GACflB,KAAak2B,qBACbl2B,KAAak2B,oBAAoBl2B,KAAM2mB,GAExC3mB,KAAKy1B,gBACzBz1B,KAAKy1B,eAAez1B,KAAM2mB,E,EAItB3mB,KAAK+H,EAAE2K,eAAgB,QAAgB1S,KAAK+H,EAAE2K,cAAe1S,KAAK01B,uBACtE,CAQO5X,sBACX,OAAO9d,KAAK21B,gBACZ,CACe7X,oBAAgB4I,GACe,OAAlC1mB,KAAK41B,2BACL51B,KAAK+H,EAAE+V,iBAAkB,QAAe9d,KAAK+H,EAAE+V,gBAAiB9d,KAAK41B,0BACrE51B,KAAK41B,yBAA2B,KAChC51B,KAAK21B,iBAAmB,MAG5B31B,KAAK21B,iBAAmBjP,EACxB1mB,KAAK41B,yBAA2B,CAACviB,EAAGnS,KAExB,IAAIylB,EAAY,IAAI,IAClCA,EAAWC,uBAAuB1lB,GACflB,KAAam2B,uBACbn2B,KAAam2B,sBAAsBn2B,KAAM2mB,GAE1C3mB,KAAK21B,kBACzB31B,KAAK21B,iBAAiB31B,KAAM2mB,E,EAIxB3mB,KAAK+H,EAAE+V,iBAAkB,QAAgB9d,KAAK+H,EAAE+V,gBAAiB9d,KAAK41B,yBAC1E,CAQO7X,uBACX,OAAO/d,KAAK61B,iBACZ,CACe9X,qBAAiB2I,GACe,OAAnC1mB,KAAK81B,4BACL91B,KAAK+H,EAAEgW,kBAAmB,QAAe/d,KAAK+H,EAAEgW,iBAAkB/d,KAAK81B,2BACvE91B,KAAK81B,0BAA4B,KACjC91B,KAAK61B,kBAAoB,MAG7B71B,KAAK61B,kBAAoBnP,EACzB1mB,KAAK81B,0BAA4B,CAACziB,EAAGnS,KAEzB,IAAIylB,EAAY,IAAI,IAClCA,EAAWC,uBAAuB1lB,GACflB,KAAao2B,wBACbp2B,KAAao2B,uBAAuBp2B,KAAM2mB,GAE3C3mB,KAAK61B,mBACzB71B,KAAK61B,kBAAkB71B,KAAM2mB,E,EAIzB3mB,KAAK+H,EAAEgW,kBAAmB,QAAgB/d,KAAK+H,EAAEgW,iBAAkB/d,KAAK81B,0BAC5E,E,oOCnQE,MAAMO,EACF3gB,kBACK,EAAA4gB,+BAA+B9mB,WACvC,EAAA+mB,kCAAkC/mB,WAClC,EAAAgnB,iCAAiChnB,WACjC,EAAAinB,2BAA2BjnB,WAC3B,EAAAknB,8BAA8BlnB,WAC9B,EAAAmnB,mBAAmBnnB,WACnB,EAAAonB,yBAAyBpnB,WACzB,EAAAqnB,iCAAiCrnB,WACjC,EAAAsnB,4CAA4CtnB,WAC5C,EAAAunB,gCAAgCvnB,WAChC,EAAAwnB,qCAAqCxnB,WACrC,EAAAgc,4CAA4Chc,WAC5C,EAAA+Z,qCAAqC/Z,WACrC,EAAAylB,2BAA2BzlB,WAC3B,EAAAynB,yBAAyBznB,UAE7B,E,6DC9BG,MAAe0nB,UAA4C,IAO1BnvB,QACtC,OAAO/H,KAAK6B,eACb,CACA3B,cACCH,OAED,CAEI+nB,oBACQ/nB,MAAyB,mBACzBA,MAAyB,oBAEnBC,KAAK+H,EAAG+f,mBACR9nB,KAAK+H,EAAG+f,oBAGb9nB,KAAK+nB,YACN/nB,KAAK+nB,WAAY,EACjB/nB,KAAKgoB,yBAEb,CACAC,uBACQloB,MAA4B,sBAC5BA,MAA4B,uBAEtBC,KAAK+H,EAAGkgB,sBACRjoB,KAAK+H,EAAGkgB,uBAEdjoB,KAAK+nB,YACL/nB,KAAK+nB,WAAY,EAEzB,CAGuBG,gCACP,GAAkG,MAA9FgP,EAAoCC,uDAAgE,CACpG,IAAI/O,GAAQ,QAAoB8O,GACpD,IAAK,IAAInvB,EAAI,EAAGA,EAAIqgB,EAAMhG,OAAQra,IACVqgB,EAAMrgB,IAAK,QAASqgB,EAAMrgB,IAElDmvB,EAAoCC,uDAAyD/O,C,CAE7E,OAAO8O,EAAoCC,sDAC/C,CAKZC,mBACH,OAAQp3B,KAAK+H,EAAEsvB,EAChB,CAII91B,iBACH,OAAQvB,KAAK+H,EAAExG,UAChB,CAKI+1B,uBACH,OAAQt3B,KAAK+H,EAAE5D,EAChB,CACImzB,qBAAiBpjB,GACpBlU,KAAK+H,EAAE5D,IAAM+P,EAC0BlU,KAAK8qB,GAAG,mBAAoB9qB,KAAK+H,EAAE5D,GAC3E,CAMIuD,sBACH,OAAO1H,KAAK+H,EAAEL,eACf,CACIA,oBAAgBwM,GACoBlU,KAAK+H,EAAEL,gBAAkBwM,CACjE,CAKOqjB,iCACNv3B,KAAK+H,EAAEjI,IACR,CACO03B,aAAajnB,EAAWknB,GAGP,OADdz3B,KAAK+H,EAAEzH,GAAGiQ,EAAMknB,EAE1B,CAMOC,mBAAmBD,GAGF,OADdz3B,KAAK+H,EAAEpH,GAAG82B,EAEpB,CAMOE,QAAQC,GAGS,OADd53B,KAAK+H,EAAE1F,IAAG,QAAQu1B,GAE5B,CACOC,wBAAwBD,EAAgBE,GAGvB,OADd93B,KAAK+H,EAAExF,IAAG,QAAQq1B,GAAQE,EAEpC,CACOC,oBAAoBH,EAAgBE,GAGnB,OADd93B,KAAK+H,EAAEvF,IAAG,QAAQo1B,GAAQE,EAEpC,CACOE,eAAeJ,EAAgBK,EAA2BH,GAGzC,OADd93B,KAAK+H,EAAEtF,IAAG,QAAQm1B,GAAQK,EAAkBH,EAEtD,CACOI,uBAAuBN,EAAgBK,EAA2BH,GAExE,IAAIlE,EAAK5zB,KAAK+H,EAAErF,IAAG,QAAQk1B,GAAQK,EAAkBH,GAC9B,OAAO,QAAUlE,EACzC,CAMOuE,0BAA0BP,GAEhC,IAAIhE,EAAK5zB,KAAK+H,EAAEpF,IAAG,QAAQi1B,IACJ,OAAO,QAAShE,EACxC,CAMOwE,gCAAgCR,GAEtC,IAAIhE,EAAK5zB,KAAK+H,EAAEhF,IAAG,QAAQ60B,IACJ,OAAO,QAAShE,EACxC,CACOyE,mBAAmBT,EAAgBK,EAA2BH,GAG7C,OADd93B,KAAK+H,EAAE9E,IAAG,QAAQ20B,GAAQK,EAAkBH,EAEtD,CACOQ,2BAA2BV,EAAgBK,EAA2BH,GAE5E,IAAIlE,EAAK5zB,KAAK+H,EAAE7E,IAAG,QAAQ00B,GAAQK,EAAkBH,GAC9B,OAAO,QAAUlE,EACzC,CACO2E,kBAAkBX,EAAgBK,EAA2BH,GAG5C,OADd93B,KAAK+H,EAAE5E,IAAG,QAAQy0B,GAAQK,EAAkBH,EAEtD,CACOU,0BAA0BZ,EAAgBK,EAA2BH,GAE3E,IAAIlE,EAAK5zB,KAAK+H,EAAE3E,IAAG,QAAQw0B,GAAQK,EAAkBH,GAC9B,OAAO,QAAUlE,EACzC,CACO6E,sCAAsCC,EAAgBT,EAA2BH,GAEvF,IAAIlE,EAAK5zB,KAAK+H,EAAE1E,IAAG,QAAQq1B,GAAQT,EAAkBH,GAC9B,OAAO,QAAUlE,EACzC,CACO+E,8BAA8BD,EAAgBT,EAA2BH,GAGxD,OADd93B,KAAK+H,EAAEzE,IAAG,QAAQo1B,GAAQT,EAAkBH,EAEtD,CAKOc,cAGiB,OADd54B,KAAK+H,EAAEnE,IAEjB,CAMOi1B,aAAaC,GACnB94B,KAAK+H,EAAEZ,GAAG2xB,EACX,CAKOnE,eACN30B,KAAK+H,EAAET,IACR,EA3K+B,EAAA6vB,uDAAmE,I,8FCnC5F,MAAe4B,UAA2C,IAOzBhxB,QACtC,OAAO/H,KAAK6B,eACb,CACA3B,cACCH,OAED,CAEI+nB,oBACQ/nB,MAAyB,mBACzBA,MAAyB,oBAEnBC,KAAK+H,EAAG+f,mBACR9nB,KAAK+H,EAAG+f,oBAGb9nB,KAAK+nB,YACN/nB,KAAK+nB,WAAY,EACjB/nB,KAAKgoB,yBAEb,CACAC,uBACQloB,MAA4B,sBAC5BA,MAA4B,uBAEtBC,KAAK+H,EAAGkgB,sBACRjoB,KAAK+H,EAAGkgB,uBAEdjoB,KAAK+nB,YACL/nB,KAAK+nB,WAAY,EAEzB,CAGuBG,gCACP,GAAgG,MAA5F6Q,EAAmCC,sDAA+D,CAClG,IAAI5Q,GAAQ,QAAoB2Q,GACpD,IAAK,IAAIhxB,EAAI,EAAGA,EAAIqgB,EAAMhG,OAAQra,IACVqgB,EAAMrgB,IAAK,QAASqgB,EAAMrgB,IAElDgxB,EAAmCC,sDAAwD5Q,C,CAE3E,OAAO2Q,EAAmCC,qDAC9C,CAMZC,iBACH,OAAOj5B,KAAK+H,EAAE0C,EACf,CACIwuB,eAAW/kB,GACdlU,KAAK+H,EAAE0C,IAAK,QAAuB,IAAkByJ,GACdlU,KAAK8qB,GAAG,cAAc,QAAyB,IAAkB9qB,KAAK+H,EAAE0C,IAChH,CAIIyuB,sBACH,OAAQl5B,KAAK+H,EAAE6B,EAChB,CACIsvB,oBAAgBhlB,GACnBlU,KAAK+H,EAAE6B,IAAMsK,EAC0BlU,KAAK8qB,GAAG,kBAAmB9qB,KAAK+H,EAAE6B,GAC1E,CAIIuvB,wBACH,OAAOn5B,KAAK+H,EAAEwC,EACf,CACI4uB,sBAAkBjlB,GACrBlU,KAAK+H,EAAEwC,IAAK,QAA8B,IAAyB2J,GAC5BlU,KAAK8qB,GAAG,qBAAqB,QAAgC,IAAyB9qB,KAAK+H,EAAEwC,IACrI,CAII6uB,qBACH,OAAOp5B,KAAK+H,EAAEyC,EACf,CACI4uB,mBAAellB,GAClBlU,KAAK+H,EAAEyC,IAAK,QAA2B,IAAsB0J,GACtBlU,KAAK8qB,GAAG,kBAAkB,QAA6B,IAAsB9qB,KAAK+H,EAAEyC,IAC5H,CAII6uB,qBACH,OAAQr5B,KAAK+H,EAAE2C,EAChB,CACI2uB,mBAAenlB,GAClBlU,KAAK+H,EAAE2C,GAAOwJ,CACf,CAIIolB,kBACH,OAAO,QAAct5B,KAAK+H,EAAEqC,GAC7B,CACIkvB,gBAAYplB,GACflU,KAAK+H,EAAEqC,IAAK,QAAc8J,GACalU,KAAK8qB,GAAG,eAAe,QAAc9qB,KAAK+H,EAAEqC,IACpF,CAIImvB,oBACH,OAAO,QAAcv5B,KAAK+H,EAAEuC,GAC7B,CACIivB,kBAAcrlB,GACjBlU,KAAK+H,EAAEuC,IAAK,QAAc4J,GACalU,KAAK8qB,GAAG,iBAAiB,QAAc9qB,KAAK+H,EAAEuC,IACtF,CAMIkvB,qBACH,OAAQx5B,KAAK+H,EAAE8C,EAChB,CACI2uB,mBAAetlB,GAClBlU,KAAK+H,EAAE8C,IAAMqJ,EAC0BlU,KAAK8qB,GAAG,iBAAkB9qB,KAAK+H,EAAE8C,GACzE,CAII4uB,2BACH,OAAQz5B,KAAK+H,EAAEuB,EAChB,CACImwB,yBAAqBvlB,GACxBlU,KAAK+H,EAAEuB,GAAO4K,CACf,CAIIwlB,wBACH,OAAO,QAAc15B,KAAK+H,EAAEyB,GAC7B,CACIkwB,sBAAkBxlB,GACrBlU,KAAK+H,EAAEyB,IAAK,QAAc0K,GACalU,KAAK8qB,GAAG,qBAAqB,QAAc9qB,KAAK+H,EAAEyB,IAC1F,CAIImwB,0BACH,OAAO,QAAc35B,KAAK+H,EAAE2B,GAC7B,CACIiwB,wBAAoBzlB,GACvBlU,KAAK+H,EAAE2B,IAAK,QAAcwK,GACalU,KAAK8qB,GAAG,uBAAuB,QAAc9qB,KAAK+H,EAAE2B,IAC5F,EA1H+B,EAAAsvB,sDAAkE,I,4MC7B3F,MAAMY,UAAqCtuB,EAAA,EAEjDpL,YAAYK,GACXR,MAAMQ,GAGG,KAAA8e,GAA+B,KAFxCrf,KAAKqf,GAAK9e,CACX,CAEA8Q,KACCtR,MAAMsR,KACDrR,KAAKsR,IACTtR,KAAKqf,GAAGzW,GAAK2I,EAAA,EAAS+C,EAExB,CACAtS,KACCjC,MAAMiC,KACkBhC,KAAKqf,GAAGpf,GAAI8N,GAAK/N,KAAKqf,GAAGwa,GACzB75B,KAAKqf,GAAGpf,GAAIiO,GAAKlO,KAAKqf,GAAG1I,EAClD,CACA9E,KACyB7R,KAAKqf,GAAGpf,GAAI8N,GAAK/N,KAAKqf,GAAGwa,EAClD,CACAva,KACyBtf,KAAKqf,GAAGpf,GAAIiO,GAAKlO,KAAKqf,GAAG1I,EAClD,EAtBO,EAAA7O,IAAW,QAAS8xB,EAA8B,+BAAsCtuB,EAAA,EAA+BpH,GA4BxH,MAAM41B,UAAiC9uB,EAAA,EAEnC4C,KACT,OAAO,IAAIksB,CACZ,CACUC,SACT,OAAO,CACR,CACA75B,cACCH,QAuBD,KAAAi6B,WAA4D,KAtB3Dh6B,KAAKmO,GAAW2rB,EAA0B51B,CAC3C,CACUH,KACT,OAAO,IAAI61B,EAA6B55B,KACzC,CACAiE,GAAG1D,GACFR,MAAMkE,GAAG1D,GACTP,KAAK8pB,GAAmCvpB,CACzC,CAIUH,KACT,IAAIG,EAAI,IAAI05B,EAAA,EAEZ,OADA15B,EAAEy5B,YAAa,QAAgBz5B,EAAEy5B,YAAY,QAAMh6B,KAAMA,KAAKoZ,KACvD7Y,CACR,CACQ6Y,GAAG7Y,EAAQC,GACK,MAAnBR,KAAKg6B,YACRh6B,KAAKg6B,WAAWh6B,KAAMQ,EAExB,CAEU8D,GAAG/D,EAAQC,EAAWC,EAAQQ,GAEvC,OADAlB,MAAMuE,GAAG/D,EAAGC,EAAGC,EAAGQ,GACVT,GACP,KAAKs5B,EAAyB5vB,IAAI,GAClClK,KAAK8pB,GAAGjY,KACR,MAEA,KAAKioB,EAAyB5vB,IAAI,GAClClK,KAAK8pB,GAAGxK,KAKV,EA7CO,EAAAxX,IAAW,QAASgyB,EAA0B,2BAAkC9uB,EAAA,EAA2B9G,GA8C3G,EAAAgG,KAAgB,QAAQwT,EAAA,EAAoBC,EAAA,EAAkBmc,EAA0B,uBAAwB,CAAE,mBAAoB,CAAQI,EAAA,EAAOh2B,EAAG,MAAQ,2BAA4B,CAAQi2B,EAAA,EAAej2B,EAAG,Q,0BCtFvN,MAAMk2B,UAA6C,IAGhDzU,uBAET,OAAO,IAAImU,CACZ,CAIwC/xB,QACtC,OAAO/H,KAAK6B,eACb,CACA3B,cACCH,QA6GW,KAAAs6B,YAA4F,KAC5F,KAAAC,oBAA2B,IA5GvC,CAEIxS,oBACQ/nB,MAAyB,mBACzBA,MAAyB,oBAEnBC,KAAK+H,EAAG+f,mBACR9nB,KAAK+H,EAAG+f,oBAGb9nB,KAAK+nB,YACN/nB,KAAK+nB,WAAY,EACjB/nB,KAAKgoB,yBAEb,CACAC,uBACQloB,MAA4B,sBAC5BA,MAA4B,uBAEtBC,KAAK+H,EAAGkgB,sBACRjoB,KAAK+H,EAAGkgB,uBAEdjoB,KAAK+nB,YACL/nB,KAAK+nB,WAAY,EAEzB,CAGuBG,gCACP,GAAoG,MAAhGkS,EAAqCG,wDAAiE,CACtG,IAAInS,GAAQ,QAAoBgS,GACpD,IAAK,IAAIryB,EAAI,EAAGA,EAAIqgB,EAAMhG,OAAQra,IACVqgB,EAAMrgB,IAAK,QAASqgB,EAAMrgB,IAElDqyB,EAAqCG,wDAA0DnS,C,CAE/E,OAAOgS,EAAqCG,uDAChD,CAMO7kB,kBACE0kB,EAAqC/R,uBACtC+R,EAAqC/R,sBAAuB,EAC5D,IAAsBC,gBAClB8R,EAAqC7R,YACrC6R,GAEhB,CAIRI,iBACH,OAAQx6B,KAAK+H,EAAE8X,EAChB,CAII4a,gBACH,OAAOz6B,KAAK+H,EAAE4O,GAAM3W,KAAK+H,EAAE4O,GAAG+jB,KAAkB,IACjD,CACID,cAAUvmB,GACblU,KAAK26B,mBACkC36B,KAAK+H,EAAE4O,GAAG+jB,KAAOxmB,CACzD,CAII0mB,kBACH,OAAO56B,KAAK+H,EAAE4O,GAAM3W,KAAK+H,EAAE4O,GAAGkkB,OAAoB,IACnD,CACID,gBAAY1mB,GACflU,KAAK26B,mBACkC36B,KAAK+H,EAAE4O,GAAGkkB,OAAS3mB,CAC3D,CAII4mB,2BACH,OAAO96B,KAAK+H,EAAE4O,GAAM3W,KAAK+H,EAAE4O,GAAGokB,gBAA6BtkB,GAC5D,CACIqkB,yBAAqB5mB,GACelU,KAAK26B,mBAC5C36B,KAAK+H,EAAE4O,GAAGokB,iBAAmB7mB,EACUlU,KAAK8qB,GAAG,uBAAwB9qB,KAAK+H,EAAE4O,GAAGokB,gBAClF,CAIIC,mBACH,OAAOh7B,KAAK+H,EAAE4O,GAAM3W,KAAK+H,EAAE4O,GAAGof,QAAqBtf,GACpD,CACIukB,iBAAa9mB,GACuBlU,KAAK26B,mBAC5C36B,KAAK+H,EAAE4O,GAAGof,SAAW7hB,EACkBlU,KAAK8qB,GAAG,eAAgB9qB,KAAK+H,EAAE4O,GAAGof,QAC1E,CACA4E,mBACI36B,KAAK+H,EAAE4O,KAG6B3W,KAAK+H,EAAE4O,GAAK,IAAIujB,EAAA,EAExB,CAKrBF,iBACX,OAAOh6B,KAAKq6B,WACZ,CACeL,eAAWtT,GACe,OAA7B1mB,KAAKs6B,sBACLt6B,KAAK+H,EAAEiyB,YAAa,QAAeh6B,KAAK+H,EAAEiyB,WAAYh6B,KAAKs6B,qBAC3Dt6B,KAAKs6B,oBAAsB,KAC3Bt6B,KAAKq6B,YAAc,MAGvBr6B,KAAKq6B,YAAc3T,EACnB1mB,KAAKs6B,oBAAsB,CAACjnB,EAAGnS,KAEnB,IAAIylB,EAAY,IAAI,IAClCA,EAAWC,uBAAuB1lB,GACflB,KAAai7B,kBACbj7B,KAAai7B,iBAAiBj7B,KAAM2mB,GAErC3mB,KAAKq6B,aACzBr6B,KAAKq6B,YAAYr6B,KAAM2mB,E,EAInB3mB,KAAK+H,EAAEiyB,YAAa,QAAgBh6B,KAAK+H,EAAEiyB,WAAYh6B,KAAKs6B,oBAChE,EA3G2B,EAAAC,wDAAoE,KAarE,EAAAhS,YAAsB,iCACnB,EAAAF,sBAAuB,EC9DlD,MAAMkO,EACF7gB,kBACX,EAAAwlB,+BAA+B1rB,WACvB4qB,EAAqC5qB,WACrC,KAAc6W,aAAa,uCAAwC+T,GACnE,KAAc5qB,SAAS,2BAAkCsqB,EAA0BtjB,MACvF,E,sPCYG,MAAM2kB,UAA+Cn3B,EAAA,EAE3D9D,YAAYK,GACXR,MAAMQ,GAGC,KAAAuM,GAAyC,KAFhD9M,KAAK8M,GAAKvM,CACX,CAEA8Q,KACCtR,MAAMsR,KACDrR,KAAKsR,CAEX,CACAtP,KACCjC,MAAMiC,KACN,IAAIzB,EAAkBP,KAAK8M,GAAG7M,GAC9BM,EAAE66B,IAAMp7B,KAAK8M,GAAGuuB,GAChB96B,EAAE+6B,IAAMt7B,KAAK8M,GAAGyuB,GAChBh7B,EAAEkK,GAAKzK,KAAK8M,GAAGrC,GACflK,EAAEiJ,GAAKxJ,KAAK8M,GAAGpC,GACfnK,EAAEoK,GAAK3K,KAAK8M,GAAGlD,GACfrJ,EAAEi7B,IAAMx7B,KAAK8M,GAAG3C,GAChB5J,EAAEk7B,IAAMz7B,KAAK8M,GAAG4uB,GAChBn7B,EAAEo7B,IAAM37B,KAAK8M,GAAGsM,GAChB7Y,EAAEq7B,IAAM57B,KAAK8M,GAAG4S,GAChBnf,EAAEs7B,IAAM77B,KAAK8M,GAAG+L,GAChBtY,EAAEu7B,IAAM97B,KAAK8M,GAAGyJ,GAChBhW,EAAEw7B,IAAM/7B,KAAK8M,GAAG4J,GAChBnW,EAAEy7B,IAAMh8B,KAAK8M,GAAG9C,GAChBzJ,EAAE07B,IAAMj8B,KAAK8M,GAAGmL,GAChB1X,EAAE27B,IAAMl8B,KAAK8M,GAAGzC,EACjB,CACAtG,KACgB/D,KAAK8M,GAAG7M,GAAIm7B,IAAMp7B,KAAK8M,GAAGuuB,EAC1C,CACA7b,KACgBxf,KAAK8M,GAAG7M,GAAIq7B,IAAMt7B,KAAK8M,GAAGyuB,EAC1C,CACAY,KACgBn8B,KAAK8M,GAAG7M,GAAIwK,GAAKzK,KAAK8M,GAAGrC,EACzC,CACA3D,KACgB9G,KAAK8M,GAAG7M,GAAIuJ,GAAKxJ,KAAK8M,GAAGpC,EACzC,CACAoH,KACgB9R,KAAK8M,GAAG7M,GAAI0K,GAAK3K,KAAK8M,GAAGlD,EACzC,CACAwyB,KACgBp8B,KAAK8M,GAAG7M,GAAI2K,GAAK5K,KAAK8M,GAAGjC,EACzC,CACAwxB,KACgBr8B,KAAK8M,GAAG7M,GAAImzB,MAA2BpzB,KAAK8M,GAAGvI,GAAI0I,EACnE,CACAqvB,KACgBt8B,KAAK8M,GAAG7M,GAAIozB,MAA2BrzB,KAAK8M,GAAGvI,GAAI2I,EACnE,CACAqvB,KACC,IAAIh8B,EAAkBP,KAAK8M,GAAG7M,GAC9B,GAAkB,MAAdD,KAAK8M,GAAGvI,GAGX,OAFAhE,EAAE6yB,MAAQ,UACV7yB,EAAE8yB,MAAQ,MAGX9yB,EAAE6yB,MAA2BpzB,KAAK8M,GAAGvI,GAAI0I,GACzC1M,EAAE8yB,MAA2BrzB,KAAK8M,GAAGvI,GAAI2I,EAC1C,CACAiL,KACgBnY,KAAK8M,GAAG7M,GAAIkK,GAAKnK,KAAK8M,GAAG1C,EACzC,CACAiR,KACgBrb,KAAK8M,GAAG7M,GAAIoK,GAAKrK,KAAK8M,GAAGxC,EACzC,CACAkyB,KACgBx8B,KAAK8M,GAAG7M,GAAIw7B,IAAMz7B,KAAK8M,GAAG4uB,EAC1C,CACAt2B,KACgBpF,KAAK8M,GAAG7M,GAAI07B,IAAM37B,KAAK8M,GAAGsM,GAC1BpZ,KAAK8M,GAAG7M,GAAIu7B,IAAMx7B,KAAK8M,GAAG3C,EAC1C,CACAkV,KACgBrf,KAAK8M,GAAG7M,GAAI27B,IAAM57B,KAAK8M,GAAG4S,EAC1C,CACA/T,KACgB3L,KAAK8M,GAAG7M,GAAI67B,IAAM97B,KAAK8M,GAAGyJ,GAC1BvW,KAAK8M,GAAG7M,GAAI87B,IAAM/7B,KAAK8M,GAAG4J,GAC1B1W,KAAK8M,GAAG7M,GAAI+7B,IAAMh8B,KAAK8M,GAAG9C,GAC1BhK,KAAK8M,GAAG7M,GAAIg8B,IAAMj8B,KAAK8M,GAAGmL,GAC1BjY,KAAK8M,GAAG7M,GAAIi8B,IAAMl8B,KAAK8M,GAAGzC,EAC1C,CACAoB,KACgBzL,KAAK8M,GAAG7M,GAAI47B,IAAM77B,KAAK8M,GAAG+L,EAC1C,CACAmD,KACgBhc,KAAK8M,GAAG7M,GAAIu7B,IAAMx7B,KAAK8M,GAAG3C,EAC1C,CACAuB,KACgB1L,KAAK8M,GAAG7M,GAAI87B,IAAM/7B,KAAK8M,GAAG4J,EAC1C,CACA9E,KACgB5R,KAAK8M,GAAG7M,GAAI+7B,IAAMh8B,KAAK8M,GAAG9C,EAC1C,CACAsV,KACgBtf,KAAK8M,GAAG7M,GAAIg8B,IAAMj8B,KAAK8M,GAAGmL,EAC1C,CACApG,KACgB7R,KAAK8M,GAAG7M,GAAIi8B,IAAMl8B,KAAK8M,GAAGzC,EAC1C,EAxGO,EAAAvC,IAAW,QAASqzB,EAAwC,yCAAgDn3B,EAAA,EAAgBE,GA8G7H,MAAMu4B,UAA2CvzB,EAAA,EAE7C0E,KACT,OAAO,IAAI6uB,CACZ,CACUC,SACT,OAAO,CACR,CACAx8B,cACCH,QAiBO,KAAAiZ,GAAmB,KAejB,KAAArC,IAAc,EACd,KAAAxJ,IAAc,EAIxB,KAAAwvB,sBAAqF,KACrF,KAAAC,4BAAiG,KArChG58B,KAAKmO,GAAWsuB,EAAoCv4B,CACrD,CACUH,KACT,OAAO,IAAIo3B,EAAuCn7B,KACnD,CACAiE,GAAG1D,GACFR,MAAMkE,GAAG1D,GACTP,KAAKmW,GAA6C5V,CACnD,CAEUs8B,KACT,MAAO,EACR,CACUz8B,KACT,OAAO,IAAI08B,EAAA,CACZ,CAkBUvxB,SACT,OAAO,CACR,CAKUjH,GAAG/D,EAAQC,EAAWC,EAAQQ,GAEvC,OADAlB,MAAMuE,GAAG/D,EAAGC,EAAGC,EAAGQ,GACVT,GACP,IAAK,eACLR,KAAKmW,GAAGomB,KACR,MAEA,KAAKE,EAAmCvyB,IAAI,GAC5ClK,KAAKmW,GAAGpS,KACR,MAEA,KAAK04B,EAAmCvyB,IAAI,GAC5ClK,KAAKmW,GAAGqJ,KACR,MAEA,IAAK,QACLxf,KAAKmW,GAAGkmB,KACR,MAEA,IAAK,QACLr8B,KAAKmW,GAAGmmB,KACR,MAEA,KAAKG,EAAmCvyB,IAAI,IAC5ClK,KAAKmW,GAAGqmB,KACR,MAEA,KAAKC,EAAmCvyB,IAAI,IAC5ClK,KAAKmW,GAAG/Q,KACR,MAEA,KAAKq3B,EAAmCvyB,IAAI,IAC5ClK,KAAKmW,GAAG6F,KACR,MAEA,KAAKygB,EAAmCvyB,IAAI,GAC5ClK,KAAKmW,GAAGkJ,KACR,MAEA,KAAKod,EAAmCvyB,IAAI,GAC5ClK,KAAKmW,GAAG1K,KACR,MAEA,KAAKgxB,EAAmCvyB,IAAI,GAC5ClK,KAAKmW,GAAGxK,KACR,MAEA,KAAK8wB,EAAmCvyB,IAAI,GAC5ClK,KAAKmW,GAAGzK,KACR,MAEA,KAAK+wB,EAAmCvyB,IAAI,IAC5ClK,KAAKmW,GAAGvE,KACR,MAEA,KAAK6qB,EAAmCvyB,IAAI,IAC5ClK,KAAKmW,GAAGmJ,KACR,MAEA,KAAKmd,EAAmCvyB,IAAI,IAC5ClK,KAAKmW,GAAGtE,KACR,MAEA,KAAK4qB,EAAmCvyB,IAAI,GAG5C,GAFclK,KAAKC,GAAIoO,GAAKrO,KAAKiK,GACjCjK,KAAK2W,GAAK3W,KAAKiK,GACXjK,KAAKiK,GAAI,CACZ,IAAI/I,EAAkBlB,KAAKC,GAC3BiB,EAAEy7B,uBAAwB,QAAgBz7B,EAAEy7B,uBAAuB,QAAM38B,KAAMA,KAAK+8B,I,KAC9E,CACN,IAAI73B,EAAkBlF,KAAKC,GAC3BiF,EAAEy3B,uBAAwB,QAAez3B,EAAEy3B,uBAAuB,QAAM38B,KAAMA,KAAK+8B,I,CAEpF,MAEA,KAAKN,EAAmCvyB,IAAI,GAG5C,GAFclK,KAAKC,GAAI+8B,GAAKh9B,KAAKkM,GACjClM,KAAKmN,GAAKnN,KAAKkM,GACXlM,KAAKiK,GAAI,CACZ,IAAIc,EAAkB/K,KAAKC,GAC3B8K,EAAE6xB,6BAA8B,QAAgB7xB,EAAE6xB,6BAA6B,QAAM58B,KAAMA,KAAK0Q,I,KAC1F,CACN,IAAIrM,EAAkBrE,KAAKC,GAC3BoE,EAAEu4B,6BAA8B,QAAev4B,EAAEu4B,6BAA6B,QAAM58B,KAAMA,KAAK0Q,I,CAEhG,MAEA,KAAK+rB,EAAmCvyB,IAAI,GAC9BlK,KAAKC,GAAIyQ,GAAK1Q,KAAKkZ,GACjC,MAEA,KAAKujB,EAAmCvyB,IAAI,GAC9BlK,KAAKC,GAAIg9B,GAAKj9B,KAAK0a,GAKnC,CACQqiB,GAAGx8B,EAAQC,GACgB,MAA9BR,KAAK28B,uBACR38B,KAAK28B,sBAAsB38B,KAAMQ,EAEnC,CACQkQ,GAAGnQ,EAAQC,GACsB,MAApCR,KAAK48B,6BACR58B,KAAK48B,4BAA4B58B,KAAMQ,EAEzC,EA5JO,EAAAsH,IAAW,QAAS20B,EAAoC,qCAA4CvzB,EAAA,EAAwBhF,GA6J5H,EAAAgG,KAAgB,QAAQwT,EAAA,EAAoBC,EAAA,EAAkB8e,EAAoC,uBAAwB,CAAE,uBAAwB,CAAE,GAAK,kBAAmB,CAAQS,EAAA,EAAYh5B,GAAK,iCAAkC,CAAE,GAAG,GAAS,0CAA2C,CAAE,GAAG,GAAS,oCAAqC,CAAE,GAAG,GAAS,uBAAwB,CAAEi5B,EAAA,GAA6B,QAAkCA,EAAA,EAA6B,IAAM,4BAA6B,CAAE,EAAG,KAAS,wBAAyB,CAAE,GAAK,2BAA4B,CAAE,EAAG,MAAQ,4BAA6B,CAAE,EAAG,MAAQ,8BAA+B,CAAE,EAAG1mB,KAAO,gCAAiC,CAAE,EAAGA,KAAO,mCAAoC,CAAE,GAAG,GAAS,yBAA0B,CAAE,EAAG,MAAQ,oBAAqB,CAAQ2mB,EAAA,EAAWl5B,GAAK,mCAAoC,CAAE,GAAG,K,0BCtRr4B,MAAMm5B,UAAuD,IAG1D1X,uBAET,OAAO,IAAI8W,CACZ,CAIwC10B,QACtC,OAAO/H,KAAK6B,eACb,CACA3B,cACCH,QAkRW,KAAAu9B,uBAA4H,KAC5H,KAAAC,+BAAsC,KA+BtC,KAAAC,6BAAwI,KACxI,KAAAC,qCAA4C,IAjTxD,CAEI3V,oBACQ/nB,MAAyB,mBACzBA,MAAyB,oBAEnBC,KAAK+H,EAAG+f,mBACR9nB,KAAK+H,EAAG+f,oBAGb9nB,KAAK+nB,YACN/nB,KAAK+nB,WAAY,EACjB/nB,KAAKgoB,yBAEb,CACAC,uBACQloB,MAA4B,sBAC5BA,MAA4B,uBAEtBC,KAAK+H,EAAGkgB,sBACRjoB,KAAK+H,EAAGkgB,uBAEdjoB,KAAK+nB,YACL/nB,KAAK+nB,WAAY,EAEzB,CAGuBG,gCACP,GAAwH,MAApHmV,EAA+CK,kEAA2E,CAC1H,IAAItV,GAAQ,QAAoBiV,GACpD,IAAK,IAAIt1B,EAAI,EAAGA,EAAIqgB,EAAMhG,OAAQra,IACVqgB,EAAMrgB,IAAK,QAASqgB,EAAMrgB,IAElDs1B,EAA+CK,kEAAoEtV,C,CAEnG,OAAOiV,EAA+CK,iEAC1D,CAMOhoB,kBACE2nB,EAA+ChV,uBAChDgV,EAA+ChV,sBAAuB,EACtE,IAAsBC,gBAClB+U,EAA+C9U,YAC/C8U,GAEhB,CAIRM,qBACH,OAAQ39B,KAAK+H,EAAE61B,EAChB,CAIIjT,yBACH,OAAQ3qB,KAAK+H,EAAEwzB,EAChB,CACI5Q,uBAAmBzW,GACtBlU,KAAK+H,EAAEwzB,GAAKrnB,CACb,CAII0W,0BACH,OAAQ5qB,KAAK+H,EAAEszB,EAChB,CACIzQ,wBAAoB1W,GACvBlU,KAAK+H,EAAEszB,GAAKnnB,CACb,CAII2pB,uBACH,OAAQ79B,KAAK+H,EAAE2zB,EAChB,CACImC,qBAAiB3pB,GACpBlU,KAAK+H,EAAE2zB,GAAKxnB,CACb,CAII4pB,kBACoC,MAAM/qB,EAAI/S,KAAK+H,EAAEqR,GACjB,GAAS,MAALrG,EACA,OAAO,KAGX,IAAMA,EAAUtR,eAAgB,CAC5B,IAAIP,EAAI,IAAsBynB,oBAAoB5V,GAC9C7R,IACCA,EAAUW,gBAAkBkR,GAEhCA,EAAUtR,eAAiBP,C,CAEvE,OAAQ6R,EAAUtR,cACnB,CACIq8B,gBAAY5pB,GACiC,MAALA,GAAalU,KAAK4oB,mBAAsB1U,EAAU2U,UAAW3U,EAAU2U,SAAS7oB,KAAK4oB,kBAAmB5oB,KAAMA,MAE7IA,KAAK+H,EAAEqR,GAAd,MAALlF,EAAwB,KAAmBA,EAAEnM,CAC9C,CAIIg2B,sBACH,OAAQ/9B,KAAK+H,EAAE2X,EAChB,CACIqe,oBAAgB7pB,GACnBlU,KAAK+H,EAAE2X,GAAKxL,CACb,CAII8pB,qBACH,OAAQh+B,KAAK+H,EAAE8Q,EAChB,CACImlB,mBAAe9pB,GAClBlU,KAAK+H,EAAE8Q,GAAK3E,CACb,CAIIwU,gBACoC,MAAM3V,EAAI/S,KAAK+H,EAAEwO,GACjB,GAAS,MAALxD,EACA,OAAO,KAGX,IAAMA,EAAUtR,eAAgB,CAC5B,IAAIP,EAAI,IAAuBynB,oBAAoB5V,GAC/C7R,IACCA,EAAUW,gBAAkBkR,GAEhCA,EAAUtR,eAAiBP,C,CAEvE,OAAQ6R,EAAUtR,cACnB,CACIinB,cAAUxU,GACmC,MAALA,GAAalU,KAAK4oB,mBAAsB1U,EAAU2U,UAAW3U,EAAU2U,SAAS7oB,KAAK4oB,kBAAmB5oB,KAAMA,MAE7IA,KAAK+H,EAAEwO,GAAd,MAALrC,EAAwB,KAAmBA,EAAEnM,CAC9C,CAKIk2B,+BACH,OAAQj+B,KAAK+H,EAAE2O,EAChB,CACIunB,6BAAyB/pB,GAC5BlU,KAAK+H,EAAE2O,IAAK,QAAWxC,GACgBlU,KAAK8qB,GAAG,2BAA4B9qB,KAAK+H,EAAE2O,GACnF,CAKIwnB,iCACH,OAAQl+B,KAAK+H,EAAEiC,EAChB,CACIk0B,+BAA2BhqB,GAC9BlU,KAAK+H,EAAEiC,IAAK,QAAWkK,GACgBlU,KAAK8qB,GAAG,6BAA8B9qB,KAAK+H,EAAEiC,GACrF,CAKIm0B,8BACH,OAAQn+B,KAAK+H,EAAEkQ,EAChB,CACIkmB,4BAAwBjqB,GAC3BlU,KAAK+H,EAAEkQ,IAAM/D,EAC0BlU,KAAK8qB,GAAG,0BAA2B9qB,KAAK+H,EAAEkQ,GAClF,CAKImmB,4BACH,OAAQp+B,KAAK+H,EAAEsC,EAChB,CACI+zB,0BAAsBlqB,GACzBlU,KAAK+H,EAAEsC,IAAM6J,EAC0BlU,KAAK8qB,GAAG,wBAAyB9qB,KAAK+H,EAAEsC,GAChF,CAKIg0B,iCACH,OAAQr+B,KAAK+H,EAAEoC,EAChB,CACIk0B,+BAA2BnqB,GAC9BlU,KAAK+H,EAAEoC,IAAK,QAAW+J,GACgBlU,KAAK8qB,GAAG,6BAA8B9qB,KAAK+H,EAAEoC,GACrF,CAIIm0B,kCACH,OAAQt+B,KAAK+H,EAAEkC,EAChB,CACIq0B,gCAA4BpqB,GAC/BlU,KAAK+H,EAAEkC,IAAK,QAAWiK,GACgBlU,KAAK8qB,GAAG,8BAA+B9qB,KAAK+H,EAAEkC,GACtF,CAIIs0B,wCACH,OAAQv+B,KAAK+H,EAAEmE,EAChB,CACIqyB,sCAAkCrqB,GACrClU,KAAK+H,EAAEmE,IAAK,QAAWgI,GACgBlU,KAAK8qB,GAAG,oCAAqC9qB,KAAK+H,EAAEmE,GAC5F,CAIIsyB,qBACH,OAAOx+B,KAAK+H,EAAEmR,EACf,CACIslB,mBAAetqB,GAClBlU,KAAK+H,EAAEmR,IAAK,QAAkCikB,EAAA,EAA6BjpB,GACpClU,KAAK8qB,GAAG,kBAAkB,QAAoCqS,EAAA,EAA6Bn9B,KAAK+H,EAAEmR,IAC1I,CAIIulB,0BACH,OAAQz+B,KAAK+H,EAAE2S,EAChB,CACI+jB,wBAAoBvqB,GACvBlU,KAAK+H,EAAE2S,IAAMxG,EAC0BlU,KAAK8qB,GAAG,sBAAuB9qB,KAAK+H,EAAE2S,GAC9E,CAEWuO,WAAW9L,GAGlB,OADiBpd,MAAMkpB,WAAW9L,KAMlCnd,KAAK89B,aAAgB99B,KAAK89B,YAAoB3gB,MAASnd,KAAK89B,YAAoB3gB,MAAQA,EAAend,KAAK89B,YAC5G99B,KAAK0oB,WAAc1oB,KAAK0oB,UAAkBvL,MAASnd,KAAK0oB,UAAkBvL,MAAQA,EAAend,KAAK0oB,UAE3F,KACX,CAEcG,SAASK,EAAgBC,EAAgBC,GAC/CrpB,MAAM8oB,SAASK,EAAWC,EAAWC,GAErCppB,KAAKqpB,YAAa,EACdrpB,KAAK89B,aAAgB99B,KAAK89B,YAAoBjV,UACzD7oB,KAAK89B,YAAoBjV,SAASK,EAAWC,EAAWnpB,MAEzDA,KAAK0oB,WAAc1oB,KAAK0oB,UAAkBG,UACzC7oB,KAAK0oB,UAAkBG,SAASK,EAAWC,EAAWnpB,MAG/CA,KAAKqpB,YAAa,CACtB,CAQGsT,4BACX,OAAO38B,KAAKs9B,sBACZ,CACeX,0BAAsBjW,GACe,OAAxC1mB,KAAKu9B,iCACLv9B,KAAK+H,EAAE40B,uBAAwB,QAAe38B,KAAK+H,EAAE40B,sBAAuB38B,KAAKu9B,gCACjFv9B,KAAKu9B,+BAAiC,KACtCv9B,KAAKs9B,uBAAyB,MAGlCt9B,KAAKs9B,uBAAyB5W,EAC9B1mB,KAAKu9B,+BAAiC,CAAClqB,EAAGnS,KAE9B,IAAIylB,EAAY,IAAI,IAClCA,EAAWC,uBAAuB1lB,GACflB,KAAa0+B,6BACb1+B,KAAa0+B,4BAA4B1+B,KAAM2mB,GAEhD3mB,KAAKs9B,wBACzBt9B,KAAKs9B,uBAAuBt9B,KAAM2mB,E,EAI9B3mB,KAAK+H,EAAE40B,uBAAwB,QAAgB38B,KAAK+H,EAAE40B,sBAAuB38B,KAAKu9B,+BACtF,CAQOX,kCACX,OAAO58B,KAAKw9B,4BACZ,CACeZ,gCAA4BlW,GACe,OAA9C1mB,KAAKy9B,uCACLz9B,KAAK+H,EAAE60B,6BAA8B,QAAe58B,KAAK+H,EAAE60B,4BAA6B58B,KAAKy9B,sCAC7Fz9B,KAAKy9B,qCAAuC,KAC5Cz9B,KAAKw9B,6BAA+B,MAGxCx9B,KAAKw9B,6BAA+B9W,EACpC1mB,KAAKy9B,qCAAuC,CAACpqB,EAAGnS,KAEpC,IAAIylB,EAAY,IAAI,IAClCA,EAAWC,uBAAuB1lB,GACflB,KAAa2+B,mCACb3+B,KAAa2+B,kCAAkC3+B,KAAM2mB,GAEtD3mB,KAAKw9B,8BACzBx9B,KAAKw9B,6BAA6Bx9B,KAAM2mB,E,EAIpC3mB,KAAK+H,EAAE60B,6BAA8B,QAAgB58B,KAAK+H,EAAE60B,4BAA6B58B,KAAKy9B,qCAClG,EAnT2B,EAAAC,kEAA8E,KAa/E,EAAAnV,YAAsB,4CACnB,EAAAF,sBAAuB,EClElD,MAAMyO,EACFphB,kBACX,EAAAkpB,sBAAsBpvB,WACd6tB,EAA+C7tB,WAC/C,KAAc6W,aAAa,iDAAkDgX,GAC7E,KAAc7tB,SAAS,qCAA4CitB,EAAoCjmB,MAC3G,E,uKCDG,MAAMqoB,UAAgD,IAGnDlZ,uBAET,OAAO,IAAI,IACZ,CAIwC5d,QACtC,OAAO/H,KAAK6B,eACb,CACA3B,cACCH,QAsJW,KAAA6nB,4BAAwH,KACxH,KAAAC,oCAA2C,IArJvD,CAEIC,oBACQ/nB,MAAyB,mBACzBA,MAAyB,oBAEnBC,KAAK+H,EAAG+f,mBACR9nB,KAAK+H,EAAG+f,oBAGb9nB,KAAK+nB,YACN/nB,KAAK+nB,WAAY,EACjB/nB,KAAKgoB,yBAEb,CACAC,uBACQloB,MAA4B,sBAC5BA,MAA4B,uBAEtBC,KAAK+H,EAAGkgB,sBACRjoB,KAAK+H,EAAGkgB,uBAEdjoB,KAAK+nB,YACL/nB,KAAK+nB,WAAY,EAEzB,CAGuBG,gCACP,GAA0G,MAAtG2W,EAAwCC,2DAAoE,CAC5G,IAAI1W,GAAQ,QAAoByW,GACpD,IAAK,IAAI92B,EAAI,EAAGA,EAAIqgB,EAAMhG,OAAQra,IACVqgB,EAAMrgB,IAAK,QAASqgB,EAAMrgB,IAElD82B,EAAwCC,2DAA6D1W,C,CAErF,OAAOyW,EAAwCC,0DACnD,CAMOppB,kBACEmpB,EAAwCxW,uBACzCwW,EAAwCxW,sBAAuB,EAC/D,IAAsBC,gBAClBuW,EAAwCtW,YACxCsW,GAEhB,CAIRE,aACH,OAAQ/+B,KAAK+H,EAAEi3B,EAChB,CAIIC,sBACH,OAAQj/B,KAAK+H,EAAEgE,EAChB,CACIkzB,oBAAgB/qB,GACnBlU,KAAK+H,EAAEgE,GAAKmI,CACb,CAIIgrB,iBACoC,MAAMnsB,EAAI/S,KAAK+H,EAAEiF,GACjB,GAAS,MAAL+F,EACA,OAAO,KAGX,IAAMA,EAAUtR,eAAgB,CAC5B,IAAIP,EAAI,IAAuBynB,oBAAoB5V,GAC/C7R,IACCA,EAAUW,gBAAkBkR,GAEhCA,EAAUtR,eAAiBP,C,CAEvE,OAAQ6R,EAAUtR,cACnB,CACIy9B,eAAWhrB,GACkC,MAALA,GAAalU,KAAK4oB,mBAAsB1U,EAAU2U,UAAW3U,EAAU2U,SAAS7oB,KAAK4oB,kBAAmB5oB,KAAMA,MAE7IA,KAAK+H,EAAEiF,GAAd,MAALkH,EAAwB,KAAmBA,EAAEnM,CAC9C,CAIIo3B,uBACoC,MAAMpsB,EAAI/S,KAAK+H,EAAEyR,GACjB,GAAS,MAALzG,EACA,OAAO,KAGX,IAAMA,EAAUtR,eAAgB,CAC5B,IAAIP,EAAI,IAAuBynB,oBAAoB5V,GAC/C7R,IACCA,EAAUW,gBAAkBkR,GAEhCA,EAAUtR,eAAiBP,C,CAEvE,OAAQ6R,EAAUtR,cACnB,CACI09B,qBAAiBjrB,GAC4B,MAALA,GAAalU,KAAK4oB,mBAAsB1U,EAAU2U,UAAW3U,EAAU2U,SAAS7oB,KAAK4oB,kBAAmB5oB,KAAMA,MAE7IA,KAAK+H,EAAEyR,GAAd,MAALtF,EAAwB,KAAmBA,EAAEnM,CAC9C,CAEWkhB,WAAW9L,GAGlB,OADiBpd,MAAMkpB,WAAW9L,KAMlCnd,KAAKk/B,YAAel/B,KAAKk/B,WAAmB/hB,MAASnd,KAAKk/B,WAAmB/hB,MAAQA,EAAend,KAAKk/B,WACzGl/B,KAAKm/B,kBAAqBn/B,KAAKm/B,iBAAyBhiB,MAASnd,KAAKm/B,iBAAyBhiB,MAAQA,EAAend,KAAKm/B,iBAEhH,KACX,CAEctW,SAASK,EAAgBC,EAAgBC,GAC/CrpB,MAAM8oB,SAASK,EAAWC,EAAWC,GAErCppB,KAAKqpB,YAAa,EACdrpB,KAAKk/B,YAAel/B,KAAKk/B,WAAmBrW,UACvD7oB,KAAKk/B,WAAmBrW,SAASK,EAAWC,EAAWnpB,MAExDA,KAAKm/B,kBAAqBn/B,KAAKm/B,iBAAyBtW,UACvD7oB,KAAKm/B,iBAAyBtW,SAASK,EAAWC,EAAWnpB,MAGtDA,KAAKqpB,YAAa,CACtB,CAKD+V,yBACNp/B,KAAK+H,EAAE2B,IACR,CAQWgY,iCACX,OAAO1hB,KAAK4nB,2BACZ,CACelG,+BAA2BgF,GACe,OAA7C1mB,KAAK6nB,sCACL7nB,KAAK+H,EAAE2Z,4BAA6B,QAAe1hB,KAAK+H,EAAE2Z,2BAA4B1hB,KAAK6nB,qCAC3F7nB,KAAK6nB,oCAAsC,KAC3C7nB,KAAK4nB,4BAA8B,MAGvC5nB,KAAK4nB,4BAA8BlB,EACnC1mB,KAAK6nB,oCAAsC,CAACxU,EAAGnS,KAEnC,IAAIylB,EAAY,IAAI,IAClCA,EAAWC,uBAAuB1lB,GACflB,KAAaspB,kCACbtpB,KAAaspB,iCAAiCtpB,KAAM2mB,GAErD3mB,KAAK4nB,6BACzB5nB,KAAK4nB,4BAA4B5nB,KAAM2mB,E,EAInC3mB,KAAK+H,EAAE2Z,4BAA6B,QAAgB1hB,KAAK+H,EAAE2Z,2BAA4B1hB,KAAK6nB,oCAChG,EAvJ2B,EAAAiX,2DAAuE,KAaxE,EAAAvW,YAAsB,qCACnB,EAAAF,sBAAuB,EC9DlD,MAAM2O,EACFthB,kBACX,EAAA2pB,2BAA2B7vB,WACnBqvB,EAAwCrvB,WACxC,KAAc6W,aAAa,0CAA2CwY,GACtE,KAAcrvB,SAAS,8BAAqC,KAA6BgH,MAC7F,E,mHCFG,MAAe8oB,UAA8C,IAO5Bv3B,QACtC,OAAO/H,KAAK6B,eACb,CAEA3B,cACCH,QAmEU,KAAAw/B,UAAiB,KACjB,KAAAC,mBAA0B,KA4JzB,KAAAC,qBAA+G,KAC/G,KAAAC,6BAAoC,KA+BpC,KAAAC,2BAA2H,KAC3H,KAAAC,mCAA0C,IA/PtD,CAGI9X,oBACQ/nB,MAAyB,mBACzBA,MAAyB,oBAEnBC,KAAK+H,EAAG+f,mBACR9nB,KAAK+H,EAAG+f,oBAGb9nB,KAAK+nB,YACN/nB,KAAK+nB,WAAY,EACjB/nB,KAAKgoB,yBAEb,CACAC,uBACQloB,MAA4B,sBAC5BA,MAA4B,uBAEtBC,KAAK+H,EAAGkgB,sBACRjoB,KAAK+H,EAAGkgB,uBAEdjoB,KAAK+nB,YACL/nB,KAAK+nB,WAAY,EAEzB,CAGuBG,gCACP,GAAsG,MAAlGoX,EAAsCO,yDAAkE,CACxG,IAAIzX,GAAQ,QAAoBkX,GACpD,IAAK,IAAIv3B,EAAI,EAAGA,EAAIqgB,EAAMhG,OAAQra,IACVqgB,EAAMrgB,IAAK,QAASqgB,EAAMrgB,IAElDu3B,EAAsCO,yDAA2DzX,C,CAEjF,OAAOkX,EAAsCO,wDACjD,CAOTC,oBAAgBtS,GAChBxtB,KAAK+/B,iBAAmBvS,EACxBxtB,KAAKggC,uBACT,CACIF,sBACA,OAAO9/B,KAAK+/B,gBAChB,CAMIE,mBAAezS,GACfxtB,KAAKkgC,gBAAkB1S,EACvBxtB,KAAKggC,uBACT,CACIC,qBACA,OAAOjgC,KAAKkgC,eAChB,CAIUC,mBAAmBlP,GAYzB,OAX+B,MAA3BjxB,KAAKw/B,qBACLx/B,KAAKw/B,mBAAqB,CAACjrB,EAAGrT,KAC1B,GAAIlB,KAAKu/B,UAAW,CAChBv/B,KAAKu/B,UAAUx3B,EAAEsE,iBAAkB,QAAerM,KAAKu/B,UAAUx3B,EAAEsE,gBAAiBrM,KAAKw/B,oBACzF,IAAIY,EAAOpgC,KAAKu/B,UAChBv/B,KAAKu/B,UAAY,KACjBv/B,KAAK+H,EAAEO,YAAc83B,EAAKzzB,c,IAKlCskB,GAAcA,EAAWtkB,aACrBskB,EAAWzkB,MAAQ,EACZykB,EAAWtkB,gBAEtB3M,KAAKu/B,UAAYtO,EACjBjxB,KAAKu/B,UAAUx3B,EAAEsE,iBAAkB,QAAgBrM,KAAKu/B,UAAUx3B,EAAEsE,gBAAiBrM,KAAKw/B,oBACnF,MAEJvO,CACX,CAGQ+O,wBAC+B,MAA/BhgC,KAAKqgC,yBACLrgC,KAAKqgC,uBAAyB,IAAI,IAClCrgC,KAAKsgC,iCAAmCtgC,KAAKsgC,iCAAiCvc,KAAK/jB,MACnFA,KAAKqgC,uBAAuBh0B,gBAAkBrM,KAAKsgC,kCAGvDtgC,KAAKqgC,uBAAuBE,gBAAkBvgC,KAAK+/B,iBACnD//B,KAAKqgC,uBAAuBJ,eAAiBjgC,KAAKkgC,gBAE9ClgC,KAAK+/B,kBAAoB//B,KAAKkgC,iBAC9BlgC,KAAKqgC,uBAAuBG,UAEpC,CAEQF,iCAAiC/rB,EAAQrT,GAC7ClB,KAAKixB,WAAajxB,KAAKqgC,uBAAuB1zB,cAClD,CAMC8zB,sBACH,OAAQzgC,KAAK+H,EAAEiF,EAChB,CACIyzB,oBAAgBvsB,GACnBlU,KAAK+H,EAAEiF,GAAKkH,CACb,CAIIwsB,gCACH,OAAQ1gC,KAAK+H,EAAE8D,EAChB,CACI60B,8BAA0BxsB,GAC7BlU,KAAK+H,EAAE8D,IAAK,QAAWqI,GACgBlU,KAAK8qB,GAAG,4BAA6B9qB,KAAK+H,EAAE8D,GACpF,CAII80B,sCACH,OAAQ3gC,KAAK+H,EAAEiE,EAChB,CACI20B,oCAAgCzsB,GACnClU,KAAK+H,EAAEiE,IAAK,QAAWkI,GACgBlU,KAAK8qB,GAAG,kCAAmC9qB,KAAK+H,EAAEiE,GAC1F,CAIIwyB,qBACH,OAAOx+B,KAAK+H,EAAE0C,EACf,CACI+zB,mBAAetqB,GAClBlU,KAAK+H,EAAE0C,IAAK,QAAgC,IAA2ByJ,GAChClU,KAAK8qB,GAAG,kBAAkB,QAAkC,IAA2B9qB,KAAK+H,EAAE0C,IACtI,CAIIg0B,0BACH,OAAQz+B,KAAK+H,EAAEqE,EAChB,CACIqyB,wBAAoBvqB,GACvBlU,KAAK+H,EAAEqE,IAAM8H,EAC0BlU,KAAK8qB,GAAG,sBAAuB9qB,KAAK+H,EAAEqE,GAC9E,CAIIw0B,gCACH,OAAQ5gC,KAAK+H,EAAEoE,EAChB,CACIy0B,8BAA0B1sB,GAC7BlU,KAAK+H,EAAEoE,IAAM+H,EAC0BlU,KAAK8qB,GAAG,4BAA6B9qB,KAAK+H,EAAEoE,GACpF,CAII00B,0BACoC,MAAM9tB,EAAI/S,KAAK+H,EAAE2E,GACjB,GAAS,MAALqG,EACA,OAAO,KAGX,IAAMA,EAAUtR,eAAgB,CAC5B,IAAIP,EAAI,IAAI,IACP6R,EAAUyD,MACVtV,EAAUW,gBAAkBkR,EAExB7R,EAAE6G,EAAU+4B,kBACZ5/B,EAAE6G,EAAU+4B,iBAAiB/tB,GAGrCA,EAAUtR,eAAiBP,C,CAEvE,OAAQ6R,EAAUtR,cACnB,CACIo/B,wBAAoB3sB,GACXlU,KAAK+H,EAAE2E,GAAd,MAALwH,EAAwB,KAAmBA,EAAEnM,CAC9C,CAKIg5B,4BACH,OAAQ/gC,KAAK+H,EAAE4C,EAChB,CACIo2B,0BAAsB7sB,GACzBlU,KAAK+H,EAAE4C,IAAMuJ,EAC0BlU,KAAK8qB,GAAG,wBAAyB9qB,KAAK+H,EAAE4C,GAChF,CAEWse,WAAW9L,GAGlB,OADiBpd,MAAMkpB,WAAW9L,KAMlCnd,KAAK6gC,qBAAwB7gC,KAAK6gC,oBAA4B1jB,MAASnd,KAAK6gC,oBAA4B1jB,MAAQA,EAAend,KAAK6gC,oBAEzH,KACX,CAUO11B,0BACX,OAAOnL,KAAKy/B,oBACZ,CACet0B,wBAAoBub,GACe,OAAtC1mB,KAAK0/B,+BACL1/B,KAAK+H,EAAEoD,qBAAsB,QAAenL,KAAK+H,EAAEoD,oBAAqBnL,KAAK0/B,8BAC7E1/B,KAAK0/B,6BAA+B,KACpC1/B,KAAKy/B,qBAAuB,MAGhCz/B,KAAKy/B,qBAAuB/Y,EAC5B1mB,KAAK0/B,6BAA+B,CAACrsB,EAAGnS,KAE5B,IAAIylB,EAAY,IAAI,IAClCA,EAAWC,uBAAuB1lB,GACflB,KAAaghC,2BACbhhC,KAAaghC,0BAA0BhhC,KAAM2mB,GAE9C3mB,KAAKy/B,sBACzBz/B,KAAKy/B,qBAAqBz/B,KAAM2mB,E,EAI5B3mB,KAAK+H,EAAEoD,qBAAsB,QAAgBnL,KAAK+H,EAAEoD,oBAAqBnL,KAAK0/B,6BAClF,CAQOt0B,gCACX,OAAOpL,KAAK2/B,0BACZ,CACev0B,8BAA0Bsb,GACe,OAA5C1mB,KAAK4/B,qCACL5/B,KAAK+H,EAAEqD,2BAA4B,QAAepL,KAAK+H,EAAEqD,0BAA2BpL,KAAK4/B,oCACzF5/B,KAAK4/B,mCAAqC,KAC1C5/B,KAAK2/B,2BAA6B,MAGtC3/B,KAAK2/B,2BAA6BjZ,EAClC1mB,KAAK4/B,mCAAqC,CAACvsB,EAAGnS,KAElC,IAAIylB,EAAY,IAAI,IAClCA,EAAWC,uBAAuB1lB,GACflB,KAAaihC,iCACbjhC,KAAaihC,gCAAgCjhC,KAAM2mB,GAEpD3mB,KAAK2/B,4BACzB3/B,KAAK2/B,2BAA2B3/B,KAAM2mB,E,EAIlC3mB,KAAK+H,EAAEqD,2BAA4B,QAAgBpL,KAAK+H,EAAEqD,0BAA2BpL,KAAK4/B,mCAC9F,EAhQ2B,EAAAC,yDAAqE,I,sRCvB9F,MAAMqB,UAAkC51B,EAAA,EAE9CpL,YAAYK,GACXR,MAAMQ,GAMG,KAAA8e,GAA4B,KALrCrf,KAAKqf,GAAK9e,EACLP,KAAKsR,IACTtR,KAAKqf,GAAGrS,GAAK,SAEf,CAEAqE,KACCtR,MAAMsR,KACDrR,KAAKsR,IACTtR,KAAKqf,GAAG8hB,GAAK5vB,EAAA,EAASwD,GACtB/U,KAAKqf,GAAGzW,GAAK2I,EAAA,EAASqC,EACtB5T,KAAKqf,GAAGlJ,GAAK5E,EAAA,EAAS8B,EACtBrT,KAAKqf,GAAGrG,GAAKzH,EAAA,EAAStQ,EACtBjB,KAAKqf,GAAGyK,GAAKvY,EAAA,EAAShR,EAExB,CACAyB,KACCjC,MAAMiC,KACiBhC,KAAKqf,GAAGpf,GAAImhC,IAAMphC,KAAKqf,GAAGgiB,GAC1BrhC,KAAKqf,GAAGpf,GAAIqhC,GAAKthC,KAAKqf,GAAGnG,GACzBlZ,KAAKqf,GAAGpf,GAAIshC,IAAMvhC,KAAKqf,GAAGK,GAC1B1f,KAAKqf,GAAGpf,GAAIuhC,GAAKxhC,KAAKqf,GAAGlJ,GACzBnW,KAAKqf,GAAGpf,GAAI8N,GAAK/N,KAAKqf,GAAGwa,EACjD,CACA91B,KACwB/D,KAAKqf,GAAGpf,GAAIshC,IAAMvhC,KAAKqf,GAAGK,EAClD,CACArE,KACwBrb,KAAKqf,GAAGpf,GAAIuhC,GAAKxhC,KAAKqf,GAAGlJ,EACjD,CACAmJ,KACwBtf,KAAKqf,GAAGpf,GAAI8N,GAAK/N,KAAKqf,GAAGwa,EACjD,CACA1hB,KACwBnY,KAAKqf,GAAGpf,GAAI2O,GAAK5O,KAAKqf,GAAGrG,EACjD,CACAnH,KACwB7R,KAAKqf,GAAGpf,GAAIwhC,IAAMzhC,KAAKqf,GAAGqiB,EAClD,CACA9vB,KACwB5R,KAAKqf,GAAGpf,GAAI0hC,IAAM3hC,KAAKqf,GAAG8hB,EAClD,CACA3hB,KACwBxf,KAAKqf,GAAGpf,GAAI2hC,IAAM5hC,KAAKqf,GAAGwiB,EAClD,CACA/6B,KACwB9G,KAAKqf,GAAGpf,GAAIqhC,GAAKthC,KAAKqf,GAAGnG,EACjD,CACApH,KACwB9R,KAAKqf,GAAGpf,GAAImhC,IAAMphC,KAAKqf,GAAGgiB,EAClD,EArDO,EAAAv5B,IAAW,QAASo5B,EAA2B,4BAAmC51B,EAAA,EAA+BpH,GA2DlH,MAAM49B,UAA8B92B,EAAA,EAEhC4C,KACT,OAAO,IAAIk0B,CACZ,CACUC,SACT,OAAO,CACR,CACA7hC,cACCH,QAsBD,KAAAi6B,WAA4D,KArB3Dh6B,KAAKmO,GAAW2zB,EAAuB59B,CACxC,CACUH,KACT,OAAO,IAAIm9B,EAA0BlhC,KACtC,CAEAiE,GAAG1D,GACFR,MAAMkE,GAAG1D,GACTP,KAAKoZ,GAAgC7Y,CACtC,CACUH,KACT,IAAIG,EAAI,IAAIyhC,EAAA,EAGZ,OAFAzhC,EAAEy5B,YAAa,QAAgBz5B,EAAEy5B,YAAY,QAAMh6B,KAAMA,KAAKyd,KAC9Dld,EAAE4I,iBAAkB,QAAgB5I,EAAE4I,iBAAiB,QAAMnJ,KAAMA,KAAK+M,KACjExM,CACR,CACQkd,GAAGld,EAAQC,GACK,MAAnBR,KAAKg6B,YACRh6B,KAAKg6B,WAAWh6B,KAAMQ,EAExB,CAEQuM,GAAGxM,EAAQC,IACV,EAAAsO,EAAA,IAAqCkzB,EAAA,EAAsB99B,EAAGlE,KAAKC,GAI5E,CAWA0J,KACC,OAAO3J,KAAKmW,EACb,CACA5M,KACC,OAAOvJ,KAAKiiC,EACb,CACAx4B,KACC,OAAOzJ,KAAKkiC,EACb,CACA74B,KACC,OAAOrJ,KAAK4hB,EACb,CACA/X,KACC,IAAItJ,GAAI,EAAAuO,EAAA,IAAqCkzB,EAAA,EAAsB99B,EAAGlE,KAAKC,IAC3E,OAAS,MAALM,EACI,UAEDA,EAAEsJ,IACV,CAEUvF,GAAG/D,EAAQC,EAAWC,EAAQQ,GAEvC,OADAlB,MAAMuE,GAAG/D,EAAGC,EAAGC,EAAGQ,GACVT,GACP,KAAKshC,EAAsB53B,IAAI,GACRlK,KAAKC,GAAIkiC,GAAKniC,KAAKuW,GAC1C,MAEA,KAAKurB,EAAsB53B,IAAI,GACRlK,KAAKC,GAAIsO,GAAKvO,KAAK8pB,GAC1C,MAEA,KAAKgY,EAAsB53B,IAAI,GAC/BlK,KAAKoZ,GAAGrV,KACR,MAEA,KAAK+9B,EAAsB53B,IAAI,IAC/BlK,KAAKoZ,GAAGiC,KACR,MAEA,KAAKymB,EAAsB53B,IAAI,GAC/BlK,KAAKoZ,GAAGkG,KACR,MAEA,KAAKwiB,EAAsB53B,IAAI,IAC/BlK,KAAKoZ,GAAGjB,KACR,MAEA,KAAK2pB,EAAsB53B,IAAI,GAC/BlK,KAAKoZ,GAAGvH,KACR,MAEA,KAAKiwB,EAAsB53B,IAAI,GAC/BlK,KAAKoZ,GAAGxH,KACR,MAEA,KAAKkwB,EAAsB53B,IAAI,GAC/BlK,KAAKoZ,GAAGoG,KACR,MAEA,KAAKsiB,EAAsB53B,IAAI,IAC/BlK,KAAKoZ,GAAGtS,KACR,MAEA,KAAKg7B,EAAsB53B,IAAI,IAC/BlK,KAAKoZ,GAAGtH,KAKV,CACU+qB,KACT,MAAO,EACR,EAvHO,EAAA/0B,IAAW,QAASg6B,EAAuB,wBAA+B92B,EAAA,EAA2B9G,GA2HrG,EAAAgG,KAAgB,QAAQwT,EAAA,EAAoBC,EAAA,EAAkBmkB,EAAuB,uBAAwB,CAAE,0BAA2B,CAAQM,EAAAt3B,EAAO5G,GAAK,4BAA6B,CAAQk+B,EAAAt3B,EAAO5G,GAAK,6BAA8B,CAAQm+B,EAAA,EAAcn+B,EAAG,MAAQ,oBAAqB,CAAQk+B,EAAAt3B,EAAO5G,GAAK,iCAAkC,CAAEo+B,EAAA,GAA8B,QAAmCA,EAAA,EAA8B,IAAM,uBAAwB,CAAEC,EAAA,GAAsB,QAA2BA,EAAA,EAAsB,IAAM,0BAA2B,CAAEC,EAAA,GAAyB,QAA8BA,EAAA,EAAyB,IAAM,sBAAuB,CAAQJ,EAAAt3B,EAAO5G,GAAK,oBAAqB,CAAQg2B,EAAA,EAAOh2B,GAAK,uBAAwB,CAAQm+B,EAAA,EAAcn+B,EAAG,MAAQ,wBAAyB,CAAE,EAAGu+B,EAAA,EAAY13B,EAAE,IAAM,mBAAoB,CAAE23B,EAAA,GAAkB,QAAuBA,EAAA,EAAkB,IAAM,mBAAoB,CAAQxI,EAAA,EAAOh2B,EAAG,MAAQ,2BAA4B,CAAQi2B,EAAA,EAAej2B,EAAG,Q,0BCrMrhC,MAAMy+B,UAA0C,IAG7Chd,uBAET,OAAO,IAAImc,CACZ,CAIwC/5B,QACtC,OAAO/H,KAAK6B,eACb,CACA3B,cACCH,QA0NW,KAAAs6B,YAAyF,KACzF,KAAAC,oBAA2B,IAzNvC,CAEIxS,oBACQ/nB,MAAyB,mBACzBA,MAAyB,oBAEnBC,KAAK+H,EAAG+f,mBACR9nB,KAAK+H,EAAG+f,oBAGb9nB,KAAK+nB,YACN/nB,KAAK+nB,WAAY,EACjB/nB,KAAKgoB,yBAEb,CACAC,uBACQloB,MAA4B,sBAC5BA,MAA4B,uBAEtBC,KAAK+H,EAAGkgB,sBACRjoB,KAAK+H,EAAGkgB,uBAEdjoB,KAAK+nB,YACL/nB,KAAK+nB,WAAY,EAEzB,CAGuBG,gCACP,GAA8F,MAA1Fya,EAAkCC,qDAA8D,CAChG,IAAIxa,GAAQ,QAAoBua,GACpD,IAAK,IAAI56B,EAAI,EAAGA,EAAIqgB,EAAMhG,OAAQra,IACVqgB,EAAMrgB,IAAK,QAASqgB,EAAMrgB,IAElD46B,EAAkCC,qDAAuDxa,C,CAEzE,OAAOua,EAAkCC,oDAC7C,CAMOltB,kBACEitB,EAAkCta,uBACnCsa,EAAkCta,sBAAuB,EACzD,IAAsBC,gBAClBqa,EAAkCpa,YAClCoa,GAEhB,CAIRE,gBACH,OAAQ7iC,KAAK+H,EAAEmU,EAChB,CAIIue,gBACH,OAAOz6B,KAAK+H,EAAEs5B,GAAMrhC,KAAK+H,EAAEs5B,GAAG3G,KAAkB,IACjD,CACID,cAAUvmB,GACblU,KAAK26B,mBACkC36B,KAAK+H,EAAEs5B,GAAG3G,KAAOxmB,CACzD,CAII0mB,kBACH,OAAO56B,KAAK+H,EAAEs5B,GAAMrhC,KAAK+H,EAAEs5B,GAAGxG,OAAoB,IACnD,CACID,gBAAY1mB,GACflU,KAAK26B,mBACkC36B,KAAK+H,EAAEs5B,GAAGxG,OAAS3mB,CAC3D,CAII4mB,2BACH,OAAO96B,KAAK+H,EAAEs5B,GAAMrhC,KAAK+H,EAAEs5B,GAAGtG,gBAA6BtkB,GAC5D,CACIqkB,yBAAqB5mB,GACelU,KAAK26B,mBAC5C36B,KAAK+H,EAAEs5B,GAAGtG,iBAAmB7mB,EACUlU,KAAK8qB,GAAG,uBAAwB9qB,KAAK+H,EAAEs5B,GAAGtG,gBAClF,CAIIC,mBACH,OAAOh7B,KAAK+H,EAAEs5B,GAAMrhC,KAAK+H,EAAEs5B,GAAGtL,QAAqBtf,GACpD,CACIukB,iBAAa9mB,GACuBlU,KAAK26B,mBAC5C36B,KAAK+H,EAAEs5B,GAAGtL,SAAW7hB,EACkBlU,KAAK8qB,GAAG,eAAgB9qB,KAAK+H,EAAEs5B,GAAGtL,QAC1E,CACA4E,mBACI36B,KAAK+H,EAAEs5B,KAG6BrhC,KAAK+H,EAAEs5B,GAAK,IAAInH,EAAA,EAExB,CAK5BjB,iBACH,OAAOj5B,KAAK+H,EAAEiR,EACf,CACIigB,eAAW/kB,GACdlU,KAAK+H,EAAEiR,IAAK,QAAuB0pB,EAAA,EAAkBxuB,GACdlU,KAAK8qB,GAAG,cAAc,QAAyB4X,EAAA,EAAkB1iC,KAAK+H,EAAEiR,IAChH,CAIImgB,wBACH,OAAOn5B,KAAK+H,EAAEwO,EACf,CACI4iB,sBAAkBjlB,GACrBlU,KAAK+H,EAAEwO,IAAK,QAA8BisB,EAAA,EAAyBtuB,GAC5BlU,KAAK8qB,GAAG,qBAAqB,QAAgC0X,EAAA,EAAyBxiC,KAAK+H,EAAEwO,IACrI,CAII6iB,qBACH,OAAOp5B,KAAK+H,EAAE+hB,EACf,CACIsP,mBAAellB,GAClBlU,KAAK+H,EAAE+hB,IAAK,QAA2ByY,EAAA,EAAsBruB,GACtBlU,KAAK8qB,GAAG,kBAAkB,QAA6ByX,EAAA,EAAsBviC,KAAK+H,EAAE+hB,IAC5H,CAIIuP,qBACH,OAAQr5B,KAAK+H,EAAE2X,EAChB,CACI2Z,mBAAenlB,GAClBlU,KAAK+H,EAAE2X,GAAOxL,CACf,CAIIolB,kBACH,OAAO,QAAct5B,KAAK+H,EAAE25B,GAC7B,CACIpI,gBAAYplB,GACflU,KAAK+H,EAAE25B,IAAK,QAAcxtB,GACalU,KAAK8qB,GAAG,eAAe,QAAc9qB,KAAK+H,EAAE25B,IACpF,CAIInI,oBACH,OAAO,QAAcv5B,KAAK+H,EAAEo5B,GAC7B,CACI5H,kBAAcrlB,GACjBlU,KAAK+H,EAAEo5B,IAAK,QAAcjtB,GACalU,KAAK8qB,GAAG,iBAAiB,QAAc9qB,KAAK+H,EAAEo5B,IACtF,CAIIjI,sBACH,OAAQl5B,KAAK+H,EAAEoO,EAChB,CACI+iB,oBAAgBhlB,GACnBlU,KAAK+H,EAAEoO,IAAMjC,EAC0BlU,KAAK8qB,GAAG,kBAAmB9qB,KAAK+H,EAAEoO,GAC1E,CAII2sB,+BACH,OAAO9iC,KAAK+H,EAAE8xB,EACf,CACIiJ,6BAAyB5uB,GAC5BlU,KAAK+H,EAAE8xB,IAAK,QAAmCyI,EAAA,EAA8BpuB,GACtClU,KAAK8qB,GAAG,4BAA4B,QAAqCwX,EAAA,EAA8BtiC,KAAK+H,EAAE8xB,IACtJ,CAIIJ,2BACH,OAAQz5B,KAAK+H,EAAE6Z,EAChB,CACI6X,yBAAqBvlB,GACxBlU,KAAK+H,EAAE6Z,GAAO1N,CACf,CAIIwlB,wBACH,OAAO,QAAc15B,KAAK+H,EAAEk6B,GAC7B,CACIvI,sBAAkBxlB,GACrBlU,KAAK+H,EAAEk6B,IAAK,QAAc/tB,GACalU,KAAK8qB,GAAG,qBAAqB,QAAc9qB,KAAK+H,EAAEk6B,IAC1F,CAIItI,0BACH,OAAO,QAAc35B,KAAK+H,EAAEm6B,GAC7B,CACIvI,wBAAoBzlB,GACvBlU,KAAK+H,EAAEm6B,IAAK,QAAchuB,GACalU,KAAK8qB,GAAG,uBAAuB,QAAc9qB,KAAK+H,EAAEm6B,IAC5F,CAKWlI,iBACX,OAAOh6B,KAAKq6B,WACZ,CACeL,eAAWtT,GACe,OAA7B1mB,KAAKs6B,sBACLt6B,KAAK+H,EAAEiyB,YAAa,QAAeh6B,KAAK+H,EAAEiyB,WAAYh6B,KAAKs6B,qBAC3Dt6B,KAAKs6B,oBAAsB,KAC3Bt6B,KAAKq6B,YAAc,MAGvBr6B,KAAKq6B,YAAc3T,EACnB1mB,KAAKs6B,oBAAsB,CAACjnB,EAAGnS,KAEnB,IAAIylB,EAAY,IAAI,IAClCA,EAAWC,uBAAuB1lB,GACflB,KAAai7B,kBACbj7B,KAAai7B,iBAAiBj7B,KAAM2mB,GAErC3mB,KAAKq6B,aACzBr6B,KAAKq6B,YAAYr6B,KAAM2mB,E,EAInB3mB,KAAK+H,EAAEiyB,YAAa,QAAgBh6B,KAAK+H,EAAEiyB,WAAYh6B,KAAKs6B,oBAChE,EAxN2B,EAAAsI,qDAAiE,KAalE,EAAAra,YAAsB,8BACnB,EAAAF,sBAAuB,ECnElD,MAAMiO,EACF5gB,kBACX,EAAAqtB,8BAA8BvzB,WACtBmzB,EAAkCnzB,WAClC,KAAc6W,aAAa,oCAAqCsc,GAChE,KAAcnzB,SAAS,wBAA+BsyB,EAAuBtrB,MACjF,E,6MCWG,MAAMwsB,UAAmCh/B,EAAA,EAE/C9D,YAAYK,GACXR,MAAMQ,GAGC,KAAAuM,GAA6B,KAFpC9M,KAAK8M,GAAKvM,CACX,CAEA8Q,KACCtR,MAAMsR,KACDrR,KAAKsR,CAEX,CACAtP,KACC,IAAIzB,EAAmBP,KAAK8M,GAAG7M,GAC/BF,MAAMiC,KACNzB,EAAE66B,IAAMp7B,KAAK8M,GAAGm2B,GAChB1iC,EAAE+6B,IAAMt7B,KAAK8M,GAAG4N,GAChBna,EAAEkK,GAAKzK,KAAK8M,GAAGrC,GACflK,EAAEiJ,GAAKxJ,KAAK8M,GAAGpC,GACfnK,EAAEoK,GAAK3K,KAAK8M,GAAGlD,EAChB,CACA+B,KACiB3L,KAAK8M,GAAG7M,GAAIm7B,IAAMp7B,KAAK8M,GAAGm2B,EAC3C,CACAx3B,KACiBzL,KAAK8M,GAAG7M,GAAIq7B,IAAMt7B,KAAK8M,GAAG4N,EAC3C,CACA8E,KACiBxf,KAAK8M,GAAG7M,GAAIwK,GAAKzK,KAAK8M,GAAGrC,EAC1C,CACA6U,KACiBtf,KAAK8M,GAAG7M,GAAIuJ,GAAKxJ,KAAK8M,GAAGpC,EAC1C,CACAkH,KACiB5R,KAAK8M,GAAG7M,GAAI0K,GAAK3K,KAAK8M,GAAGlD,EAC1C,CACA7F,KACiB/D,KAAK8M,GAAG7M,GAAI2K,GAAK5K,KAAK8M,GAAGjC,EAC1C,CACAwQ,KACiBrb,KAAK8M,GAAG7M,GAAImzB,MAA2BpzB,KAAK8M,GAAGvI,GAAI0I,EACpE,CACAnG,KACiB9G,KAAK8M,GAAG7M,GAAIozB,MAA2BrzB,KAAK8M,GAAGvI,GAAI2I,EACpE,CACAiL,KACC,IAAI5X,EAAmBP,KAAK8M,GAAG7M,GAC/B,GAAkB,MAAdD,KAAK8M,GAAGvI,GAGX,OAFAhE,EAAE6yB,MAAQ,UACV7yB,EAAE8yB,MAAQ,MAGX9yB,EAAE6yB,MAA2BpzB,KAAK8M,GAAGvI,GAAI0I,GACzC1M,EAAE8yB,MAA2BrzB,KAAK8M,GAAGvI,GAAI2I,EAC1C,CACAmS,KACiBrf,KAAK8M,GAAG7M,GAAI8M,GAAK/M,KAAK8M,GAAGyJ,EAC1C,CACA7K,KACiB1L,KAAK8M,GAAG7M,GAAIkK,GAAKnK,KAAK8M,GAAG1C,EAC1C,CACAyH,KACiB7R,KAAK8M,GAAG7M,GAAIoK,GAAKrK,KAAK8M,GAAGxC,EAC1C,EA9DO,EAAAxC,IAAW,QAASk7B,EAA4B,6BAAoCh/B,EAAA,EAAgBE,GAoErG,MAAMg/B,UAA+Bh6B,EAAA,EAEjC0E,KACT,OAAO,IAAIs1B,CACZ,CACUxG,SACT,OAAO,CACR,CACAx8B,cACCH,QAiBO,KAAAmZ,GAAoB,KAMlB,KAAA/L,IAAc,EACd,KAAAgJ,IAAc,EAIxB,KAAAwmB,sBAAqF,KACrF,KAAAC,4BAAiG,KA5BhG58B,KAAKmO,GAAW+0B,EAAwBh/B,CACzC,CACUH,KACT,OAAO,IAAIi/B,EAA2BhjC,KACvC,CACAiE,GAAG1D,GACFR,MAAMkE,GAAG1D,GACTP,KAAKoZ,GAAiC7Y,CACvC,CAEUs8B,KACT,MAAO,EACR,CACUz8B,KACT,OAAO,IAAI+iC,EAAA,CACZ,CASU53B,SACT,OAAO,CACR,CAKUjH,GAAG/D,EAAQC,EAAWC,EAAQQ,GAEvC,OADAlB,MAAMuE,GAAG/D,EAAGC,EAAGC,EAAGQ,GACVT,GACP,IAAK,eACLR,KAAKoZ,GAAGjB,KACR,MAEA,KAAK+qB,EAAuBh5B,IAAI,GAChClK,KAAKoZ,GAAGzN,KACR,MAEA,KAAKu3B,EAAuBh5B,IAAI,GAChClK,KAAKoZ,GAAG3N,KACR,MAEA,KAAKy3B,EAAuBh5B,IAAI,GAChClK,KAAKoZ,GAAGiG,KACR,MAEA,IAAK,QACLrf,KAAKoZ,GAAGiC,KACR,MAEA,IAAK,QACLrb,KAAKoZ,GAAGtS,KACR,MAEA,KAAKo8B,EAAuBh5B,IAAI,GAGhC,GAFclK,KAAKC,GAAIoO,GAAKrO,KAAK0W,GACjC1W,KAAKmN,GAAKnN,KAAK0W,GACX1W,KAAK0W,GAAI,CACZ,IAAIxV,EAAkBlB,KAAKC,GAC3BiB,EAAEy7B,uBAAwB,QAAgBz7B,EAAEy7B,uBAAuB,QAAM38B,KAAMA,KAAK+M,I,KAC9E,CACN,IAAI7H,EAAkBlF,KAAKC,GAC3BiF,EAAEy3B,uBAAwB,QAAez3B,EAAEy3B,uBAAuB,QAAM38B,KAAMA,KAAK+M,I,CAEpF,MAEA,KAAKm2B,EAAuBh5B,IAAI,GAGhC,GAFclK,KAAKC,GAAI+8B,GAAKh9B,KAAK2W,GACjC3W,KAAKmW,GAAKnW,KAAK2W,GACX3W,KAAK0W,GAAI,CACZ,IAAI3L,EAAkB/K,KAAKC,GAC3B8K,EAAE6xB,6BAA8B,QAAgB7xB,EAAE6xB,6BAA6B,QAAM58B,KAAMA,KAAKyd,I,KAC1F,CACN,IAAIpZ,EAAkBrE,KAAKC,GAC3BoE,EAAEu4B,6BAA8B,QAAev4B,EAAEu4B,6BAA6B,QAAM58B,KAAMA,KAAKyd,I,CAEhG,MAEA,KAAKylB,EAAuBh5B,IAAI,GAClBlK,KAAKC,GAAIyQ,GAAK1Q,KAAKgZ,GACjC,MAEA,KAAKkqB,EAAuBh5B,IAAI,GAClBlK,KAAKC,GAAIg9B,GAAKj9B,KAAKiK,GAKnC,CACQ8C,GAAGxM,EAAQC,GACgB,MAA9BR,KAAK28B,uBACR38B,KAAK28B,sBAAsB38B,KAAMQ,EAEnC,CACQid,GAAGld,EAAQC,GACsB,MAApCR,KAAK48B,6BACR58B,KAAK48B,4BAA4B58B,KAAMQ,EAEzC,EA/GO,EAAAsH,IAAW,QAASo7B,EAAwB,yBAAgCh6B,EAAA,EAAwBhF,GAiHpG,EAAAgG,KAAgB,QAAQwT,EAAA,EAAoBC,EAAA,EAAkBulB,EAAwB,uBAAwB,CAAE,0CAA2C,CAAE,GAAG,GAAS,oCAAqC,CAAE,GAAG,GAAS,uBAAwB,CAAE/F,EAAA,GAA6B,QAAkCA,EAAA,EAA6B,IAAM,4BAA6B,CAAE,EAAG,KAAS,2BAA4B,CAAE,EAAG,MAAQ,4BAA6B,CAAE,EAAG,MAAQ,iCAAkC,CAAEmF,EAAA,GAA8B,QAAmCA,EAAA,EAA8B,IAAM,8BAA+B,CAAE,GAAG,K,0BChMpoB,MAAMc,UAA2C,IAG9Czd,uBAET,OAAO,IAAIud,CACZ,CAIwCn7B,QACtC,OAAO/H,KAAK6B,eACb,CACA3B,cACCH,QAgIW,KAAAu9B,uBAAgH,KAChH,KAAAC,+BAAsC,KA+BtC,KAAAC,6BAA4H,KAC5H,KAAAC,qCAA4C,IA/JxD,CAEI3V,oBACQ/nB,MAAyB,mBACzBA,MAAyB,oBAEnBC,KAAK+H,EAAG+f,mBACR9nB,KAAK+H,EAAG+f,oBAGb9nB,KAAK+nB,YACN/nB,KAAK+nB,WAAY,EACjB/nB,KAAKgoB,yBAEb,CACAC,uBACQloB,MAA4B,sBAC5BA,MAA4B,uBAEtBC,KAAK+H,EAAGkgB,sBACRjoB,KAAK+H,EAAGkgB,uBAEdjoB,KAAK+nB,YACL/nB,KAAK+nB,WAAY,EAEzB,CAGuBG,gCACP,GAAgG,MAA5Fkb,EAAmCC,sDAA+D,CAClG,IAAIjb,GAAQ,QAAoBgb,GACpD,IAAK,IAAIr7B,EAAI,EAAGA,EAAIqgB,EAAMhG,OAAQra,IACVqgB,EAAMrgB,IAAK,QAASqgB,EAAMrgB,IAElDq7B,EAAmCC,sDAAwDjb,C,CAE3E,OAAOgb,EAAmCC,qDAC9C,CAMO3tB,kBACE0tB,EAAmC/a,uBACpC+a,EAAmC/a,sBAAuB,EAC1D,IAAsBC,gBAClB8a,EAAmC7a,YACnC6a,GAEhB,CAIRzF,qBACH,OAAQ39B,KAAK+H,EAAE61B,EAChB,CAIIjT,yBACH,OAAQ3qB,KAAK+H,EAAE2S,EAChB,CACIiQ,uBAAmBzW,GACtBlU,KAAK+H,EAAE2S,GAAKxG,CACb,CAII0W,0BACH,OAAQ5qB,KAAK+H,EAAEk7B,EAChB,CACIrY,wBAAoB1W,GACvBlU,KAAK+H,EAAEk7B,GAAK/uB,CACb,CAII4uB,+BACH,OAAO9iC,KAAK+H,EAAEwO,EACf,CACIusB,6BAAyB5uB,GAC5BlU,KAAK+H,EAAEwO,IAAK,QAAmC+rB,EAAA,EAA8BpuB,GACtClU,KAAK8qB,GAAG,4BAA4B,QAAqCwX,EAAA,EAA8BtiC,KAAK+H,EAAEwO,IACtJ,CAII+nB,kCACH,OAAQt+B,KAAK+H,EAAE2O,EAChB,CACI4nB,gCAA4BpqB,GAC/BlU,KAAK+H,EAAE2O,IAAK,QAAWxC,GACgBlU,KAAK8qB,GAAG,8BAA+B9qB,KAAK+H,EAAE2O,GACtF,CAII6nB,wCACH,OAAQv+B,KAAK+H,EAAE4O,EAChB,CACI4nB,sCAAkCrqB,GACrClU,KAAK+H,EAAE4O,IAAK,QAAWzC,GACgBlU,KAAK8qB,GAAG,oCAAqC9qB,KAAK+H,EAAE4O,GAC5F,CAII6nB,qBACH,OAAOx+B,KAAK+H,EAAEiR,EACf,CACIwlB,mBAAetqB,GAClBlU,KAAK+H,EAAEiR,IAAK,QAAkCmkB,EAAA,EAA6BjpB,GACpClU,KAAK8qB,GAAG,kBAAkB,QAAoCqS,EAAA,EAA6Bn9B,KAAK+H,EAAEiR,IAC1I,CAIIylB,0BACH,OAAQz+B,KAAK+H,EAAEkC,EAChB,CACIw0B,wBAAoBvqB,GACvBlU,KAAK+H,EAAEkC,IAAMiK,EAC0BlU,KAAK8qB,GAAG,sBAAuB9qB,KAAK+H,EAAEkC,GAC9E,CAQW0yB,4BACX,OAAO38B,KAAKs9B,sBACZ,CACeX,0BAAsBjW,GACe,OAAxC1mB,KAAKu9B,iCACLv9B,KAAK+H,EAAE40B,uBAAwB,QAAe38B,KAAK+H,EAAE40B,sBAAuB38B,KAAKu9B,gCACjFv9B,KAAKu9B,+BAAiC,KACtCv9B,KAAKs9B,uBAAyB,MAGlCt9B,KAAKs9B,uBAAyB5W,EAC9B1mB,KAAKu9B,+BAAiC,CAAClqB,EAAGnS,KAE9B,IAAIylB,EAAY,IAAI,IAClCA,EAAWC,uBAAuB1lB,GACflB,KAAa0+B,6BACb1+B,KAAa0+B,4BAA4B1+B,KAAM2mB,GAEhD3mB,KAAKs9B,wBACzBt9B,KAAKs9B,uBAAuBt9B,KAAM2mB,E,EAI9B3mB,KAAK+H,EAAE40B,uBAAwB,QAAgB38B,KAAK+H,EAAE40B,sBAAuB38B,KAAKu9B,+BACtF,CAQOX,kCACX,OAAO58B,KAAKw9B,4BACZ,CACeZ,gCAA4BlW,GACe,OAA9C1mB,KAAKy9B,uCACLz9B,KAAK+H,EAAE60B,6BAA8B,QAAe58B,KAAK+H,EAAE60B,4BAA6B58B,KAAKy9B,sCAC7Fz9B,KAAKy9B,qCAAuC,KAC5Cz9B,KAAKw9B,6BAA+B,MAGxCx9B,KAAKw9B,6BAA+B9W,EACpC1mB,KAAKy9B,qCAAuC,CAACpqB,EAAGnS,KAEpC,IAAIylB,EAAY,IAAI,IAClCA,EAAWC,uBAAuB1lB,GACflB,KAAa2+B,mCACb3+B,KAAa2+B,kCAAkC3+B,KAAM2mB,GAEtD3mB,KAAKw9B,8BACzBx9B,KAAKw9B,6BAA6Bx9B,KAAM2mB,E,EAIpC3mB,KAAK+H,EAAE60B,6BAA8B,QAAgB58B,KAAK+H,EAAE60B,4BAA6B58B,KAAKy9B,qCAClG,EAjK2B,EAAA4F,sDAAkE,KAanE,EAAA9a,YAAsB,+BACnB,EAAAF,sBAAuB,ECjElD,MAAM0O,EACFrhB,kBACX,EAAA4tB,uBAAuB9zB,WACf4zB,EAAmC5zB,WACnC,KAAc6W,aAAa,qCAAsC+c,GACjE,KAAc5zB,SAAS,yBAAgC0zB,EAAwB1sB,MACnF,E,oJCAG,MAAM+sB,UAA6Bv4B,EAAA,EAE/B4C,KACT,OAAO,IAAI21B,CACZ,CACU11B,SACT,OAAO,CACR,CACA3N,cACCH,QAcO,KAAA+pB,GAA2B,KAkB3B,KAAA+P,GAAiB,KAiBzB,KAAA7rB,gBAAsE,KAhDrEhO,KAAKmO,GAAWo1B,EAAsBr/B,CACvC,CACIqS,SACH,OAAOvW,KAAK8pB,EACb,CACIvT,OAAGhW,GAEN,GADiBA,GAAKP,KAAKuW,GACpB,CACN,IAAI9V,EAAST,KAAKuW,GAClBvW,KAAK8pB,GAAKvpB,EACVP,KAAKgI,qBAAqB,cAAevH,EAAGF,E,CAE9C,CAEA4V,KACgB,MAAXnW,KAAKuW,IACRvW,KAAKuW,GAAG+C,gBAEV,CACUhV,GAAG/D,EAAQC,EAAWC,EAAQQ,GACvClB,MAAMuE,GAAG/D,EAAGC,EAAGC,EAAGQ,GAEZ,gBADET,GAEQ,MAAXR,KAAKC,KACKD,KAAKC,GAAIsO,GAAKvO,KAAKuW,GAMnC,CAEUlV,KAGT,GAFAtB,MAAMsB,KACOrB,KAAKC,GAAIsO,GAAKvO,KAAKuW,GACjB,MAAXvW,KAAK65B,GAAY,CACpB,IAAIt5B,EAAIP,KAAK65B,GACbt5B,EAAEyN,iBAAkB,QAAezN,EAAEyN,iBAAiB,QAAMhO,KAAMA,KAAKoZ,I,CAGxE,GADApZ,KAAK65B,GAAiB75B,KAAKC,GACZ,MAAXD,KAAK65B,GAAY,CACpB,IAAIr5B,EAAIR,KAAK65B,GACbr5B,EAAEwN,iBAAkB,QAAgBxN,EAAEwN,iBAAiB,QAAMhO,KAAMA,KAAKoZ,I,CAE1E,CACUhZ,KACT,OAAO,IAAIsN,EAAA,CACZ,CAEQ0L,GAAG7Y,EAAQC,GACU,MAAxBR,KAAKgO,iBACRhO,KAAKgO,gBAAgBhO,KAAM,IAAIoN,EAAA,EAEjC,EA9DO,EAAAtF,IAAW,QAASy7B,EAAsB,uBAA8Bv4B,EAAA,EAA2B9G,G,0BCFpG,MAAMs/B,UAAyC,IAG5C7d,uBAET,OAAO,IAAI4d,CACZ,CAIwCx7B,QACtC,OAAO/H,KAAK6B,eACb,CACA3B,cACCH,QA8FW,KAAAuvB,iBAAkG,KAClG,KAAAC,yBAAgC,IA7F5C,CAEIzH,oBACQ/nB,MAAyB,mBACzBA,MAAyB,oBAEnBC,KAAK+H,EAAG+f,mBACR9nB,KAAK+H,EAAG+f,oBAGb9nB,KAAK+nB,YACN/nB,KAAK+nB,WAAY,EACjB/nB,KAAKgoB,yBAEb,CACAC,uBACQloB,MAA4B,sBAC5BA,MAA4B,uBAEtBC,KAAK+H,EAAGkgB,sBACRjoB,KAAK+H,EAAGkgB,uBAEdjoB,KAAK+nB,YACL/nB,KAAK+nB,WAAY,EAEzB,CAGuBG,gCACP,GAA4F,MAAxFsb,EAAiCC,oDAA6D,CAC9F,IAAIrb,GAAQ,QAAoBob,GACpD,IAAK,IAAIz7B,EAAI,EAAGA,EAAIqgB,EAAMhG,OAAQra,IACVqgB,EAAMrgB,IAAK,QAASqgB,EAAMrgB,IAElDy7B,EAAiCC,oDAAsDrb,C,CAEvE,OAAOob,EAAiCC,mDAC5C,CAMO/tB,kBACE8tB,EAAiCnb,uBAClCmb,EAAiCnb,sBAAuB,EACxD,IAAsBC,gBAClBkb,EAAiCjb,YACjCib,GAEhB,CAIRE,aACH,OAAQ1jC,KAAK+H,EAAE47B,EAChB,CAIIC,kBACoC,MAAM7wB,EAAI/S,KAAK+H,EAAEwO,GACjB,OAAS,MAALxD,EACO,KAG1CA,EAAUtR,cACnB,CACImiC,gBAAY1vB,GACHlU,KAAK+H,EAAEwO,GAAd,MAALrC,EAAwB,KAAmBA,EAAEnM,CAC9C,CAEWkhB,WAAW9L,GAGlB,OADiBpd,MAAMkpB,WAAW9L,KAMlCnd,KAAK4jC,aAAgB5jC,KAAK4jC,YAAoBzmB,MAASnd,KAAK4jC,YAAoBzmB,MAAQA,EAAend,KAAK4jC,YAEjG,KACX,CAKGtqB,iBACNtZ,KAAK+H,EAAEoO,IACR,CAQWnI,sBACX,OAAOhO,KAAKsvB,gBACZ,CACethB,oBAAgB0Y,GACe,OAAlC1mB,KAAKuvB,2BACLvvB,KAAK+H,EAAEiG,iBAAkB,QAAehO,KAAK+H,EAAEiG,gBAAiBhO,KAAKuvB,0BACrEvvB,KAAKuvB,yBAA2B,KAChCvvB,KAAKsvB,iBAAmB,MAG5BtvB,KAAKsvB,iBAAmB5I,EACxB1mB,KAAKuvB,yBAA2B,CAAClc,EAAGnS,KAExB,IAAIylB,EAAY,IAAI,IAClCA,EAAWC,uBAAuB1lB,GACflB,KAAag1B,uBACbh1B,KAAag1B,sBAAsBh1B,KAAM2mB,GAE1C3mB,KAAKsvB,kBACzBtvB,KAAKsvB,iBAAiBtvB,KAAM2mB,E,EAIxB3mB,KAAK+H,EAAEiG,iBAAkB,QAAgBhO,KAAK+H,EAAEiG,gBAAiBhO,KAAKuvB,yBAC1E,EA/F2B,EAAAkU,oDAAgE,KAajE,EAAAlb,YAAsB,6BACnB,EAAAF,sBAAuB,EC9DlD,MAAMqO,EACFhhB,kBACX,EAAAmuB,oBAAoBr0B,WACZg0B,EAAiCh0B,WACjC,KAAc6W,aAAa,mCAAoCmd,GAC/D,KAAch0B,SAAS,uBAA8B+zB,EAAsB/sB,MAC/E,E,wECJG,MAAestB,UAAoD,IAG3D/7B,QACP,OAAO/H,KAAK6B,eAChB,CACA3B,cACIH,OACJ,CAGWmoB,gCACP,GAAkH,MAA9G4b,EAA4CC,+DAAwE,CACpH,IAAI3b,GAAQ,QAAoB0b,GAChC,IAAK,IAAI/7B,EAAI,EAAGA,EAAIqgB,EAAMhG,OAAQra,IAC9BqgB,EAAMrgB,IAAK,QAASqgB,EAAMrgB,IAE9B+7B,EAA4CC,+DAAiE3b,C,CAEjH,OAAO0b,EAA4CC,8DACvD,CAMIC,4BAAwBxW,GACxBxtB,KAAKikC,yBAA2BzW,EAChCxtB,KAAKkkC,+BACT,CACIF,8BACA,OAAOhkC,KAAKikC,wBAChB,CAGQC,gCACuC,MAAvClkC,KAAKmkC,iCACLnkC,KAAKmkC,+BAAiC,IAAI,IAC1CnkC,KAAKokC,yCAA2CpkC,KAAKokC,yCAAyCrgB,KAAK/jB,MACnGA,KAAKmkC,+BAA+B93B,gBAAkBrM,KAAKokC,0CAG/DpkC,KAAKmkC,+BAA+BE,OAASrkC,KAAKikC,wBACtD,CAEQG,yCAAyC7vB,EAAQrT,GACrDlB,KAAKixB,WAAajxB,KAAKmkC,+BAA+Bx3B,eACtD3M,KAAKof,gBAA8Bpf,KAAKmkC,+BAA+BG,iBAC3E,CAKC1Z,0BACH,OAAQ5qB,KAAK+H,EAAE8C,EAChB,CACI+f,wBAAoB1W,GACvBlU,KAAK+H,EAAE8C,GAAKqJ,CACb,CAIIyW,yBACH,OAAQ3qB,KAAK+H,EAAE0C,EAChB,CACIkgB,uBAAmBzW,GACtBlU,KAAK+H,EAAE0C,GAAKyJ,CACb,CAKIkL,sBACH,OAAQpf,KAAK+H,EAAEwC,EAChB,CACI6U,oBAAgBlL,GACoBlU,KAAK+H,EAAEwC,GAAM2J,CACrD,CAIIqwB,gCACH,OAAQvkC,KAAK+H,EAAEmD,EAChB,CACIq5B,8BAA0BrwB,GAC7BlU,KAAK+H,EAAEmD,GAAKgJ,CACb,CAIIswB,gCACH,OAAQxkC,KAAK+H,EAAEiE,EAChB,CACIw4B,8BAA0BtwB,GAC7BlU,KAAK+H,EAAEiE,GAAKkI,CACb,CAIIuwB,gCACH,OAAQzkC,KAAK+H,EAAE4C,EAChB,CACI85B,8BAA0BvwB,GAC7BlU,KAAK+H,EAAE4C,GAAKuJ,CACb,EA9FkB,EAAA6vB,+DAA2E,I,iDClBvF,MAAMW,EAGH/e,uBAET,OAAO,IAAI,GACZ,CAKY5d,QACV,OAAO/H,KAAK6B,eACb,CACQuzB,0BAER,CACAl1B,cACAF,KAAK6B,gBAAkB7B,KAAK2lB,uBACtB3lB,KAAK6B,gBAAiBJ,eAAiBzB,KAC7CA,KAAKo1B,0BACgCp1B,KAAaq1B,qBACbr1B,KAAaq1B,qBAGlD,CACUzO,uBAAuB7e,GAC7B/H,KAAK6B,gBAAkBkG,EACjB/H,KAAK6B,gBAAiBJ,eAAiBzB,KACjDA,KAAKo1B,0BACgCp1B,KAAaq1B,qBACbr1B,KAAaq1B,qBAGlD,E,gGC9BM,MAAMsP,UAAgC,IAGnChf,uBAET,OAAO,IAAI,IACZ,CAIwC5d,QACtC,OAAO/H,KAAK6B,eACb,CACA3B,cACCH,OACD,CAIImhB,eACH,OAAQlhB,KAAK+H,EAAEmZ,QAChB,CACIA,aAAShN,GACZlU,KAAK+H,EAAEmZ,SAAWhN,CACnB,E,eCvBM,MAAMghB,EACFxf,kBAEH,KAAc2Q,aAAa,0BAA2Bse,GACtD,KAAcn1B,SAAS,uBAA8B,KAAsBgH,MAC/E,E,iKCQG,MAAMouB,UAAgCvrB,EAAA,EAE5CnZ,cACCH,MAAM,IAAI8kC,EAAA,GACV7kC,KAAK+d,kBAAmB,QAAgB/d,KAAK+d,kBAAkB,QAAM/d,KAAMA,KAAKshB,KAChFthB,KAAK8d,iBAAkB,QAAgB9d,KAAK8d,iBAAiB,QAAM9d,KAAMA,KAAKohB,IAC/E,CACQA,GAAG7gB,EAAQC,GAClB,IAAIC,EAAID,EAAEskC,IAAItyB,WAAWuyB,MAAM,KAC3B9jC,EAAI+jC,UAAS,EAAAzgB,EAAA,IAAc9jB,EAAE,GAAI,IAAK,KACtCS,EAAI8jC,UAAS,EAAAzgB,EAAA,IAAc9jB,EAAE,GAAI,IAAK,KACtCyE,EAAI8/B,UAAS,EAAAzgB,EAAA,KAAc,EAAAA,EAAA,IAAc9jB,EAAE,GAAI,IAAK,IAAK,OAAQ,KAC3C,MAAtBT,KAAKilC,eACRjlC,KAAKilC,cAAcC,WAAWjkC,EAAGC,EAAGgE,EAEtC,CACQoc,GAAG/gB,EAAQC,GAClB,IAAIC,EAAID,EAAEskC,IAAItyB,WAAWuyB,MAAM,KAC3B9jC,EAAI+jC,UAAS,EAAAzgB,EAAA,IAAc9jB,EAAE,GAAI,IAAK,KACtCS,EAAI8jC,UAAS,EAAAzgB,EAAA,IAAc9jB,EAAE,GAAI,IAAK,KACtCyE,EAAI8/B,UAAS,EAAAzgB,EAAA,KAAc,EAAAA,EAAA,IAAc9jB,EAAE,GAAI,IAAK,IAAK,OAAQ,KACrED,EAAEskC,IAAM,KACR,IAAIK,EAAO3kC,EAAE4kC,MACa,MAAtBplC,KAAKilC,eACRjlC,KAAKilC,cAAcI,QAAQpkC,EAAGC,EAAGgE,GAAG,CAAC6F,EAAQ1G,IAAiCrE,KAAK6O,gBAAgBc,aAAY,IAAMw1B,EAAKG,IAAMjhC,EAAEkhC,QAAM,CAACx6B,EAAQ1G,KAAT,IACrI,CAAC0G,EAAQ1G,KAAT,GACA8gC,EAEL,EA3BO,EAAAr9B,IAAW,QAAS88B,EAAyB,0BAAiCvrB,EAAA,EAAsBnV,GA6BpG,EAAAgG,KAAgB,QAAQwT,EAAA,EAAoBC,EAAA,EAAkBinB,EAAyB,KAAM,CAAE,gBAAiB,CAAEY,EAAA,EAAsB,QC3CzI,MAAMC,UAAmC,IAGtC9f,uBAET,OAAO,IAAIif,CACZ,CAIwC78B,QACtC,OAAO/H,KAAK6B,eACb,CACA3B,cACCH,OACD,CAIIklC,oBACH,OAAOjlC,KAAK+H,EAAEk9B,aACf,CACIA,kBAAc/wB,GACsBlU,KAAK+H,EAAEk9B,cAAgB/wB,CAC/D,ECxBM,MAAMsiB,EACF9gB,kBAEH,KAAc2Q,aAAa,6BAA8Bof,GACzD,KAAcj2B,SAAS,0BAAiCo1B,EAAyBpuB,MACrF,E,4GCDG,MAAMkvB,UAA+B,IAGlC/f,uBAET,OAAO,IAAIjY,EAAA,CACZ,CAIwC3F,QACtC,OAAO/H,KAAK6B,eACb,CACA3B,cACCH,OAED,CAEI+nB,oBACQ/nB,MAAyB,mBACzBA,MAAyB,oBAEnBC,KAAK+H,EAAG+f,mBACR9nB,KAAK+H,EAAG+f,oBAGb9nB,KAAK+nB,YACN/nB,KAAK+nB,WAAY,EACjB/nB,KAAKgoB,yBAEb,CACAC,uBACQloB,MAA4B,sBAC5BA,MAA4B,uBAEtBC,KAAK+H,EAAGkgB,sBACRjoB,KAAK+H,EAAGkgB,uBAEdjoB,KAAK+nB,YACL/nB,KAAK+nB,WAAY,EAEzB,CAGuBG,gCACP,GAAwE,MAApEwd,EAAuBC,0CAAmD,CAC1E,IAAIvd,GAAQ,QAAoBsd,GACpD,IAAK,IAAI39B,EAAI,EAAGA,EAAIqgB,EAAMhG,OAAQra,IACVqgB,EAAMrgB,IAAK,QAASqgB,EAAMrgB,IAElD29B,EAAuBC,0CAA4Cvd,C,CAEnD,OAAOsd,EAAuBC,yCAClC,CAMOjwB,kBACEgwB,EAAuBrd,uBACxBqd,EAAuBrd,sBAAuB,EAC9C,IAAsBC,gBAClBod,EAAuBnd,YACvBmd,GAEhB,CAIRhC,aACH,OAAQ1jC,KAAK+H,EAAE47B,EAChB,CAIIC,kBACoC,MAAM7wB,EAAI/S,KAAK+H,EAAEwG,GACjB,OAAS,MAALwE,EACO,KAG1CA,EAAUtR,cACnB,CACImiC,gBAAY1vB,GACHlU,KAAK+H,EAAEwG,GAAd,MAAL2F,EAAwB,KAAmBA,EAAEnM,CAC9C,CAEWkhB,WAAW9L,GAGlB,OADiBpd,MAAMkpB,WAAW9L,KAMlCnd,KAAK4jC,aAAgB5jC,KAAK4jC,YAAoBzmB,MAASnd,KAAK4jC,YAAoBzmB,MAAQA,EAAend,KAAK4jC,YAEjG,KACX,CAKGl0B,kBACN1P,KAAK+H,EAAE2H,iBACR,EA/D+B,EAAAi2B,0CAAsD,KAavD,EAAApd,YAAsB,kBACnB,EAAAF,sBAAuB,E,eC7DlD,MAAMwb,EACFnuB,kBACHgwB,EAAuBl2B,WACvB,KAAc6W,aAAa,yBAA0Bqf,GACrD,KAAcl2B,SAAS,aAAoB9B,EAAA,EAAY8I,MAC3D,E","sources":["webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicMapSeriesHost_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicMarkerSeries.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicShapeSeriesBase_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/ImageTilesReadyEventArgs.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/ImagesChangedEventArgs.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/MapBackgroundTilingMode.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/MapResizeBehavior.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/TileSeries_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/SphericalMercatorVerticalScaler.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/SphericalMercatorHorizontalScaler.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/XamGeographicMap_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/BingMapsImageryStyle.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-sub-domains-collection.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/SubDomainsCollection.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/BingMapsMapImageryView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-bing-maps-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-bing-maps-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-custom-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/CustomMapImagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-custom-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicContourLineSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-contour-line-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-contour-line-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicHighDensityScatterSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-high-density-scatter-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-high-density-scatter-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/ArcGISOnlineMapImagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-arc-gis-online-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-arc-gis-online-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-core-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-images-changed-event-args.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-series-host-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-marker-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicPolylineSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-polyline-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-polyline-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicProportionalSymbolSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-proportional-symbol-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-proportional-symbol-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-scatter-area-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-scatter-area-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-shape-series-base-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicShapeSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-shape-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-shape-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicSymbolSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-symbol-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-symbol-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicTileSeries.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-tile-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-tile-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-xy-triangulating-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-image-tiles-ready-event-args.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-open-street-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-open-street-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/TileGeneratorMapImagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-tile-generator-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-tile-generator-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-tile-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-tile-series-module.ts"],"sourcesContent":["/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { Base, Point, Type, typeCast, Number_$type, runOn, delegateRemove, delegateCombine, markType, TypeRegistrar } from \"igniteui-core/type\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { List$1 } from \"igniteui-core/List$1\";\r\nimport { SeriesPointOfInterest } from \"igniteui-charts/SeriesPointOfInterest\";\r\nimport { Axis } from \"igniteui-charts/Axis\";\r\nimport { HighlightingInfo } from \"igniteui-core/HighlightingInfo\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { SeriesViewer } from \"igniteui-charts/SeriesViewer\";\r\nimport { Visibility } from \"igniteui-core/Visibility\";\r\nimport { RectChangedEventArgs } from \"igniteui-core/RectChangedEventArgs\";\r\nimport { FrameworkElement } from \"igniteui-core/FrameworkElement\";\r\nimport { RenderSurface } from \"igniteui-charts/RenderSurface\";\r\nimport { DataContext } from \"igniteui-core/DataContext\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { PlatformConstants } from \"igniteui-core/PlatformConstants\";\r\nimport { isNaN_ } from \"igniteui-core/number\";\r\nimport { RenderingContext } from \"igniteui-core/RenderingContext\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicMapSeriesHost extends Series {\r\n\tstatic $t: Type = markType(GeographicMapSeriesHost, 'GeographicMapSeriesHost', (<any>Series).$);\r\n\tqc(): void {\r\n\t\tsuper.qc();\r\n\t\tif (this.ws != null) {\r\n\t\t\tthis.ws.qc();\r\n\t\t}\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ws = this.wr();\r\n\t}\r\n\tprivate wq: Series = null;\r\n\tprotected get_fa(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tko(a: any, b: string): any {\r\n\t\tlet c = this.nb(b);\r\n\t\tif (c == \"LatitudeMemberPath\") {\r\n\t\t\tc = \"YMemberPath\";\r\n\t\t}\r\n\t\tif (c == \"LongitudeMemberPath\") {\r\n\t\t\tc = \"XMemberPath\";\r\n\t\t}\r\n\t\treturn this.ws.ko(a, c);\r\n\t}\r\n\tmb(a: string): string {\r\n\t\tlet b = this.nb(a);\r\n\t\tif (b == \"LatitudeMemberPath\") {\r\n\t\t\tb = \"YMemberPath\";\r\n\t\t}\r\n\t\tif (b == \"LongitudeMemberPath\") {\r\n\t\t\tb = \"XMemberPath\";\r\n\t\t}\r\n\t\treturn this.ws.mb(b);\r\n\t}\r\n\tprotected get_kg(): any {\r\n\t\treturn this.ky(this.ws);\r\n\t}\r\n\tprotected set_kg(a: any): void {\r\n\t\tthis.ox(this.ws, a);\r\n\t}\r\n\td9(a: List$1<SeriesPointOfInterest>, b: boolean, c: boolean, d: number, e: boolean): boolean {\r\n\t\treturn this.ws.d9(a, b, c, d, e);\r\n\t}\r\n\tai(): Axis[] {\r\n\t\treturn this.ws.ai();\r\n\t}\r\n\tbm(): Series {\r\n\t\treturn this.ws;\r\n\t}\r\n\tget ws(): Series {\r\n\t\treturn this.wq;\r\n\t}\r\n\tset ws(a: Series) {\r\n\t\tlet b: boolean = this.ws != a;\r\n\t\tif (b) {\r\n\t\t\tthis.wq = a;\r\n\t\t\tthis.wx();\r\n\t\t}\r\n\t}\r\n\tprotected get_hasMarkers(): boolean {\r\n\t\treturn this.ws.hasMarkers;\r\n\t}\r\n\tprotected wx(): void {\r\n\t\tif (this.wq != null) {\r\n\t\t\tlet hostedSeries_ = this.wq;\r\n\t\t\t(<any>hostedSeries_).externalObject = TypeRegistrar.createFromInternal(hostedSeries_, PlatformConstants.Prefix, PlatformConstants.Postfix);\r\n\t\t\t(<any>hostedSeries_).externalObject._implementation = hostedSeries_;\r\n\t\t}\r\n\t\tthis.pd(this.ws);\r\n\t\tthis.wt.b5();\r\n\t}\r\n\tde(a: any, b: Point, c: boolean): HighlightingInfo {\r\n\t\treturn this.dg(this.ws, a, b, c);\r\n\t}\r\n\tdf(a: any, b: Point, c: boolean): HighlightingInfo {\r\n\t\treturn this.dh(this.ws, a, b, c);\r\n\t}\r\n\tkl(a: Point): any {\r\n\t\treturn this.ku(this.ws, a);\r\n\t}\r\n\tj8(a: Point, b: boolean): number {\r\n\t\treturn this.ws.j8(a, b);\r\n\t}\r\n\tj6(a: Point, b: boolean): number {\r\n\t\treturn this.ws.j6(a, b);\r\n\t}\r\n\ti3(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.ws.i3(a, b, c);\r\n\t}\r\n\tv6(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.ws.v6(a, b, c);\r\n\t}\r\n\twh(a: Point): Rect {\r\n\t\treturn this.ws.wh(a);\r\n\t}\r\n\tan(a: Point): Rect[] {\r\n\t\treturn this.ws.an(a);\r\n\t}\r\n\twi(a: Point): Rect {\r\n\t\treturn this.ws.wi(a);\r\n\t}\r\n\tao(a: Point): Rect[] {\r\n\t\treturn this.ws.ao(a);\r\n\t}\r\n\twj(a: Point): Rect {\r\n\t\treturn this.ws.wj(a);\r\n\t}\r\n\twk(a: Point): Rect {\r\n\t\treturn this.ws.wk(a);\r\n\t}\r\n\tiz(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.ws.iz(a, b, c);\r\n\t}\r\n\tv2(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.ws.v2(a, b, c);\r\n\t}\r\n\ti1(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.i3(a, b, c);\r\n\t}\r\n\tv4(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.ws.v4(a, b, c);\r\n\t}\r\n\tv7(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.ws.v7(a, b, c);\r\n\t}\r\n\ti4(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.ws.i4(a, b, c);\r\n\t}\r\n\tv3(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.ws.v3(a, b, c);\r\n\t}\r\n\ti0(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.ws.i0(a, b, c);\r\n\t}\r\n\tv5(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.ws.v5(a, b, c);\r\n\t}\r\n\ti2(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.ws.i2(a, b, c);\r\n\t}\r\n\tj2(a: Point): number {\r\n\t\treturn this.ws.j2(a);\r\n\t}\r\n\tiu(): number {\r\n\t\treturn this.ws.iu();\r\n\t}\r\n\tiq(a: Point): number {\r\n\t\treturn this.ws.iq(a);\r\n\t}\r\n\tkm(a: Point): any {\r\n\t\treturn this.ws.km(a);\r\n\t}\r\n\tprotected abstract wr(): Series;\r\n\tprotected cq(): SeriesView {\r\n\t\treturn new HostSeriesView(this);\r\n\t}\r\n\tqx(a: SeriesView): void {\r\n\t\tsuper.qx(a);\r\n\t\tthis.wt = typeCast<HostSeriesView>((<any>HostSeriesView).$, a);\r\n\t}\r\n\twt: HostSeriesView;\r\n\tstatic readonly wz: DependencyProperty = DependencyProperty.i(\"VisibleFromScale\", Number_$type, (<any>GeographicMapSeriesHost).$, new PropertyMetadata(2, 1, (a: DependencyObject, b: DependencyPropertyChangedEventArgs) => {\r\n\t\tlet c: GeographicMapSeriesHost = <GeographicMapSeriesHost>a;\r\n\t\tc.raisePropertyChanged(\"VisibleFromScale\", b.oldValue, b.newValue);\r\n\t}));\r\n\tget wu(): number {\r\n\t\treturn <number>this.c(GeographicMapSeriesHost.wz);\r\n\t}\r\n\tset wu(a: number) {\r\n\t\tthis.h(GeographicMapSeriesHost.wz, a);\r\n\t}\r\n\tprotected q5(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.q5(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.ws.c9 = this.c9;\r\n\t\t\tif (c != null) {\r\n\t\t\t\t(<SeriesViewer>c).qq(this.ws);\r\n\t\t\t}\r\n\t\t\tif (d != null) {\r\n\t\t\t\tthis.c9.mw(this.ws);\r\n\t\t\t}\r\n\t\t\tthis.ws.q8(this.wl);\r\n\t\t\tthis.ws.index = this.index;\r\n\t\t\tthis.pw(this.ws);\r\n\t\t\tthis.ke = this.ws.ke;\r\n\t\t\tlet e: SeriesViewer = typeCast<SeriesViewer>((<any>SeriesViewer).$, c);\r\n\t\t\tif (e != null) {\r\n\t\t\t\te.actualWindowRectChanged = delegateRemove(e.actualWindowRectChanged, runOn(this, this.wy));\r\n\t\t\t}\r\n\t\t\tif (this.c9 != null) {\r\n\t\t\t\tlet f = this.c9;\r\n\t\t\t\tf.actualWindowRectChanged = delegateCombine(f.actualWindowRectChanged, runOn(this, this.wy));\r\n\t\t\t}\r\n\t\t\tthis.ww();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"SyncLink\":\r\n\t\t\tthis.ws.c1 = this.c1;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"VisibleFromScale\":\r\n\t\t\tthis.ww();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Index\":\r\n\t\t\tthis.ws.index = this.index;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ItemsSource\":\r\n\t\t\tthis.wt.b6();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Resolution\":\r\n\t\t\tthis.wt.cd();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"TransitionDuration\":\r\n\t\t\tthis.wt.cg();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Opacity\":\r\n\t\t\tthis.wt.ca();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Visibility\":\r\n\t\t\tlet hs_ = this.ws;\r\n\t\t\tlet v_ = this._visibility;\r\n\t\t\ths_.visibility = v_;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"MouseOverEnabled\":\r\n\t\t\tthis.ws.f6 = this.f6;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ExpectFunctions\":\r\n\t\t\tthis.ws.expectFunctions = this.expectFunctions;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Thickness\":\r\n\t\t\tthis.wt.cf();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Brush\":\r\n\t\t\tthis.wt.b4();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Outline\":\r\n\t\t\tthis.wt.cc();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualBrush\":\r\n\t\t\tthis.wt.b1();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualOutline\":\r\n\t\t\tthis.wt.b2();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"MarkerFillOpacity\":\r\n\t\t\tif (!isNaN_(this.je)) {\r\n\t\t\t\tthis.wt.b9();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"AreaFillOpacity\":\r\n\t\t\tif (!isNaN_(this.ii)) {\r\n\t\t\t\tthis.wt.b3();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"OutlineMode\":\r\n\t\t\tthis.wt.cb();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ShowDefaultTooltip\":\r\n\t\t\tthis.wt.ce();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Title\":\r\n\t\t\tthis.ws.title = this.title;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"LegendItemBadgeMode\":\r\n\t\t\tthis.wt.b7();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"LegendItemBadgeShape\":\r\n\t\t\tthis.wt.b8();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Legend\":\r\n\t\t\tthis.ws.legend = this.legend;\r\n\t\t\tthis.ct.av();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate ww(): void {\r\n\t\tif (this.c9 == null || this.ws == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!isNaN_(this.wu)) {\r\n\t\t\tif (this.c9.vl.width > this.wu) {\r\n\t\t\t\tlet hs_ = this.ws;\r\n\t\t\t\tlet v_ = 1;\r\n\t\t\t\ths_.visibility = v_;\r\n\t\t\t} else {\r\n\t\t\t\tlet hs2_ = this.ws;\r\n\t\t\t\tlet v2_ = 0;\r\n\t\t\t\ths2_.visibility = v2_;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate wy(a: any, b: RectChangedEventArgs): void {\r\n\t\tthis.ww();\r\n\t}\r\n\trn(a: boolean): void {\r\n\t\tsuper.rn(a);\r\n\t\tif (this.ws != null) {\r\n\t\t\tthis.ws.rn(a);\r\n\t\t}\r\n\t}\r\n\trm(a: Rect, b: Rect, c: RenderSurface, d: string, e: number): void {\r\n\t\tif (this.ws != null) {\r\n\t\t\tthis.ws.rm(a, b, c, d, e);\r\n\t\t}\r\n\t}\r\n\ta1(a: Point, b: boolean): DataContext {\r\n\t\treturn this.ws.a1(a, b);\r\n\t}\r\n\tr6(): void {\r\n\t\tsuper.r6();\r\n\t\tthis.ws.r6();\r\n\t}\r\n\tprotected get_coercionMethods(): any {\r\n\t\treturn this._coercionMethods;\r\n\t}\r\n\tprotected set_coercionMethods(a: any): void {\r\n\t\tthis._coercionMethods = a;\r\n\t\tthis.ws.coercionMethods = a;\r\n\t}\r\n\tprotected pv(a: any): void {\r\n\t\tsuper.pv(a);\r\n\t\tif (this.ws != null) {\r\n\t\t\tlet b = this.ws.kk();\r\n\t\t\tthis.o6(a, b);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class HostSeriesView extends SeriesView {\r\n\tstatic $t: Type = markType(HostSeriesView, 'HostSeriesView', (<any>SeriesView).$);\r\n\tconstructor(a: GeographicMapSeriesHost) {\r\n\t\tsuper(a);\r\n\t\tthis.b0 = a;\r\n\t}\r\n\tprivate b0: GeographicMapSeriesHost = null;\r\n\tat(a: RenderingContext, b: RenderingContext): void {\r\n\t\tsuper.at(a, b);\r\n\t}\r\n\tb5(): void {\r\n\t\tthis.b0.legendItemVisibility = 1;\r\n\t\tthis.b0.ws.legendItemVisibility = 0;\r\n\t\tthis.b0.ws.itemsSource = this.b0.itemsSource;\r\n\t\tthis.b0.ws.index = this.b0.index;\r\n\t\tthis.b0.ws.u9 = this.b0.u9;\r\n\t\tthis.b0.ws.vp = this.b0.u9;\r\n\t\tthis.b0.ws.cg = this.b0.cg;\r\n\t\tthis.b0.ws.jh = this.b0.jh;\r\n\t\tthis.b0.ws.kb = this.b0.kb;\r\n\t\tthis.b0.ws._opacity = this.b0._opacity;\r\n\t\tthis.b0.ws.jn = this.b0.jn;\r\n\t\tthis.b0.ws.ii = this.b0.ii;\r\n\t\tthis.b0.ws.je = this.b0.je;\r\n\t\tthis.b0.ws.gn = this.b0.gn;\r\n\t\tthis.b0.ws.legendItemBadgeShape = this.b0.legendItemBadgeShape;\r\n\t\tthis.b0.ws.bc = this.b0.bc;\r\n\t}\r\n\tb6(): void {\r\n\t\tthis.b0.ws.itemsSource = this.b0.itemsSource;\r\n\t}\r\n\tcd(): void {\r\n\t\tthis.b0.ws.jh = this.b0.jh;\r\n\t}\r\n\tcg(): void {\r\n\t\tthis.b0.ws.kb = this.b0.kb;\r\n\t}\r\n\tca(): void {\r\n\t\tthis.b0.ws._opacity = this.b0._opacity;\r\n\t}\r\n\tcf(): void {\r\n\t\tthis.b0.ws.jn = this.b0.jn;\r\n\t}\r\n\tb4(): void {\r\n\t\tthis.b0.ws.u9 = this.b0.u9;\r\n\t}\r\n\tcc(): void {\r\n\t\tthis.b0.ws.vp = this.b0.vp;\r\n\t}\r\n\tb1(): void {\r\n\t\tthis.b0.ws.u9 = this.b0.u3;\r\n\t}\r\n\tb2(): void {\r\n\t\tthis.b0.ws.vp = this.b0.u7;\r\n\t}\r\n\tb7(): void {\r\n\t\tthis.b0.ws.bc = this.b0.bc;\r\n\t}\r\n\tb8(): void {\r\n\t\tthis.b0.ws.legendItemBadgeShape = this.b0.legendItemBadgeShape;\r\n\t}\r\n\tb3(): void {\r\n\t\tthis.b0.ws.ii = this.b0.ii;\r\n\t}\r\n\tb9(): void {\r\n\t\tthis.b0.ws.je = this.b0.je;\r\n\t}\r\n\tcb(): void {\r\n\t\tthis.b0.ws.cg = this.b0.cg;\r\n\t}\r\n\tce(): void {\r\n\t\tthis.b0.ws.gn = this.b0.gn;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { MarkerType, MarkerType_$type } from \"igniteui-charts/MarkerType\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { MarkerOutlineMode, MarkerOutlineMode_$type } from \"igniteui-charts/MarkerOutlineMode\";\r\nimport { MarkerFillMode, MarkerFillMode_$type } from \"igniteui-charts/MarkerFillMode\";\r\nimport { DataTemplate } from \"igniteui-core/DataTemplate\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Base, Type, runOn, delegateCombine, typeCast, enumGetBox, EnumUtil, Number_$type, typeGetValue, markType, markDep, TypeRegistrar } from \"igniteui-core/type\";\r\nimport { PropertyUpdatedEventArgs } from \"igniteui-core/PropertyUpdatedEventArgs\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { MarkerSeries } from \"igniteui-charts/MarkerSeries\";\r\nimport { ScatterBase } from \"igniteui-charts/ScatterBase\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { DeviceUtils } from \"igniteui-core/DeviceUtils\";\r\nimport { PlatformConstants } from \"igniteui-core/PlatformConstants\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicMarkerSeries extends GeographicMapSeriesHost {\r\n\tstatic $t: Type = markType(GeographicMarkerSeries, 'GeographicMarkerSeries', (<any>GeographicMapSeriesHost).$);\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tlet a = this.ws;\r\n\t\ta.propertyUpdated = delegateCombine(a.propertyUpdated, runOn(this, this.xg));\r\n\t}\r\n\tst(): DataTemplate {\r\n\t\treturn this.xh;\r\n\t}\r\n\tvf(): Brush {\r\n\t\treturn this.xu;\r\n\t}\r\n\tvg(): Brush {\r\n\t\treturn this.xv;\r\n\t}\r\n\til(): number {\r\n\t\treturn this.w3;\r\n\t}\r\n\tl8(): string {\r\n\t\tlet a = typeCast<MarkerSeries>((<any>MarkerSeries).$, this.ws);\r\n\t\tif (a == null) {\r\n\t\t\treturn \"Unknown\";\r\n\t\t}\r\n\t\treturn a.l8();\r\n\t}\r\n\tprivate xg(a: any, b: PropertyUpdatedEventArgs): void {\r\n\t\tlet c = typeCast<MarkerSeries>((<any>MarkerSeries).$, this.ws);\r\n\t\tif (c == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (b.propertyName == \"ActualMarkerTemplate\") {\r\n\t\t\tthis.xh = c.xs;\r\n\t\t} else if (b.propertyName == \"ActualMarkerOutline\") {\r\n\t\t\tthis.xv = c.ya;\r\n\t\t} else if (b.propertyName == \"ActualMarkerBrush\") {\r\n\t\t\tthis.xu = c.x9;\r\n\t\t}\r\n\t}\r\n\tw2: MarkerType;\r\n\tw3: number;\r\n\tw1: MarkerOutlineMode;\r\n\tw0: MarkerFillMode;\r\n\txi: DataTemplate;\r\n\txw: Brush;\r\n\txx: Brush;\r\n\tw4: number;\r\n\txh: DataTemplate;\r\n\txu: Brush;\r\n\txv: Brush;\r\n\tprotected q5(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.q5(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicMarkerSeries.$$p[3]:\r\n\t\t\t(<ScatterBase>this.ws).yb = this.xw;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[6]:\r\n\t\t\t(<ScatterBase>this.ws).yc = this.xx;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[5]:\r\n\t\t\t(<ScatterBase>this.ws).ww = this.w1;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[4]:\r\n\t\t\t(<ScatterBase>this.ws).ws = this.w0;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[9]:\r\n\t\t\t(<ScatterBase>this.ws).w2 = this.w2;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[7]:\r\n\t\t\t(<ScatterBase>this.ws).xu = this.xi;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[8]:\r\n\t\t\t(<ScatterBase>this.ws).xb = this.w3;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[10]:\r\n\t\t\t(<ScatterBase>this.ws).z1 = this.w4;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicMarkerSeries, 'raisePropertyChanged', [ 'ActualMarkerBrush:xu:xj', [ (<any>Brush).$ ], 'ActualMarkerOutline:xv:xk', [ (<any>Brush).$ ], 'ActualMarkerTemplate:xh:xl', [ (<any>DataTemplate).$, null ], 'MarkerBrush:xw:xm', [ (<any>Brush).$ ], 'MarkerFillMode:w0:xn', [ MarkerFillMode_$type, enumGetBox<MarkerFillMode>(MarkerFillMode_$type, 0) ], 'MarkerOutlineMode:w1:xo', [ MarkerOutlineMode_$type, enumGetBox<MarkerOutlineMode>(MarkerOutlineMode_$type, 0) ], 'MarkerOutline:xx:xp', [ (<any>Brush).$ ], 'MarkerTemplate:xi:xq', [ (<any>DataTemplate).$, null ], 'MarkerThickness:w3:xr', [ 1, DeviceUtils.g(2) ], 'MarkerType:w2:xs', [ MarkerType_$type, enumGetBox<MarkerType>(MarkerType_$type, Defaults.e) ], 'MaximumMarkers:w4:xt', [ 1, 400 ] ]);\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { ScatterPolygonSeries } from \"igniteui-charts/ScatterPolygonSeries\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { ShapeItemSearchMode, ShapeItemSearchMode_$type } from \"igniteui-charts/ShapeItemSearchMode\";\r\nimport { ShapefileConverter } from \"igniteui-core/ShapefileConverter\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { Base, IEnumerable, IEnumerable_$type, Type, String_$type, typeCast, Boolean_$type, enumGetBox, EnumUtil, typeGetValue, Number_$type, runOn, delegateCombine, delegateRemove, markType, markDep } from \"igniteui-core/type\";\r\nimport { AssigningShapeStyleEventArgs } from \"igniteui-charts/AssigningShapeStyleEventArgs\";\r\nimport { AssigningShapeMarkerStyleEventArgs } from \"igniteui-charts/AssigningShapeMarkerStyleEventArgs\";\r\nimport { ShapeSeriesBase } from \"igniteui-charts/ShapeSeriesBase\";\r\nimport { AsyncCompletedEventArgs } from \"igniteui-core/AsyncCompletedEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicShapeSeriesBase extends GeographicMapSeriesHost {\r\n\tstatic $t: Type = markType(GeographicShapeSeriesBase, 'GeographicShapeSeriesBase', (<any>GeographicMapSeriesHost).$);\r\n\tprotected cq(): SeriesView {\r\n\t\treturn new GeographicShapeSeriesBaseView(this);\r\n\t}\r\n\tw3: GeographicShapeSeriesBaseView;\r\n\tqx(a: SeriesView): void {\r\n\t\tsuper.qx(a);\r\n\t\tthis.w3 = <GeographicShapeSeriesBaseView>a;\r\n\t}\r\n\txl: string;\r\n\tprotected get_fc(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected get_eb(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\txa: boolean;\r\n\tw9: boolean;\r\n\tprotected w8: boolean = false;\r\n\tprotected w7: boolean = false;\r\n\tw2: ShapeItemSearchMode;\r\n\txd: number;\r\n\txc: number;\r\n\tassigningShapeStyle: (sender: any, args: AssigningShapeStyleEventArgs) => void = null;\r\n\tassigningShapeMarkerStyle: (sender: any, args: AssigningShapeMarkerStyleEventArgs) => void = null;\r\n\tprotected q5(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.q5(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.w3.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ShapeMemberPath\":\r\n\t\t\tthis.w3.ck();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[5]:\r\n\t\t\tthis.w3.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[1]:\r\n\t\t\t(<ShapeSeriesBase>this.ws).xr = this.xa;\r\n\t\t\tthis.w8 = this.xa;\r\n\t\t\tif (this.xa) {\r\n\t\t\t\tlet e = (<ShapeSeriesBase>this.ws);\r\n\t\t\t\te.assigningShapeStyle = delegateCombine(e.assigningShapeStyle, runOn(this, this.xo));\r\n\t\t\t} else {\r\n\t\t\t\tlet f = (<ShapeSeriesBase>this.ws);\r\n\t\t\t\tf.assigningShapeStyle = delegateRemove(f.assigningShapeStyle, runOn(this, this.xo));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[0]:\r\n\t\t\t(<ShapeSeriesBase>this.ws).xq = this.w9;\r\n\t\t\tthis.w7 = this.w9;\r\n\t\t\tif (this.xa) {\r\n\t\t\t\tlet g = (<ShapeSeriesBase>this.ws);\r\n\t\t\t\tg.assigningShapeMarkerStyle = delegateCombine(g.assigningShapeMarkerStyle, runOn(this, this.xn));\r\n\t\t\t} else {\r\n\t\t\t\tlet h = (<ShapeSeriesBase>this.ws);\r\n\t\t\t\th.assigningShapeMarkerStyle = delegateRemove(h.assigningShapeMarkerStyle, runOn(this, this.xn));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[2]:\r\n\t\t\t(<ShapeSeriesBase>this.ws).w8 = this.w2;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[3]:\r\n\t\t\t(<ShapeSeriesBase>this.ws).x8 = this.xc;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[4]:\r\n\t\t\t(<ShapeSeriesBase>this.ws).x9 = this.xd;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ShapefileDataSource\":\r\n\t\t\tif (c != null) {\r\n\t\t\t\tlet i = <ShapefileConverter>c;\r\n\t\t\t\tif (this.w6) {\r\n\t\t\t\t\ti.importCompleted = delegateRemove(i.importCompleted, runOn(this, this.xp));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (d != null) {\r\n\t\t\t\tlet j = <ShapefileConverter>d;\r\n\t\t\t\tif (j.count > 0) {\r\n\t\t\t\t\tthis.xq();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tthis.w6 = true;\r\n\t\t\t\tj.importCompleted = delegateCombine(j.importCompleted, runOn(this, this.xp));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate xo(a: any, b: AssigningShapeStyleEventArgs): void {\r\n\t\tif (this.assigningShapeStyle != null) {\r\n\t\t\tthis.assigningShapeStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate xn(a: any, b: AssigningShapeMarkerStyleEventArgs): void {\r\n\t\tif (this.assigningShapeMarkerStyle != null) {\r\n\t\t\tthis.assigningShapeMarkerStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate xp(a: any, b: AsyncCompletedEventArgs): void {\r\n\t\tthis.xq();\r\n\t}\r\n\tprivate xq(): void {\r\n\t\tlet sds_ = this.w5;\r\n\t\tlet ext_ = (sds_ as any).externalObject;\r\n\t\tthis.itemsSource = <IEnumerable><any><any>(ext_.getPointData());\r\n\t}\r\n\tprivate w4: ShapefileConverter = null;\r\n\tprivate w6: boolean = false;\r\n\tget w5(): ShapefileConverter {\r\n\t\treturn this.w4;\r\n\t}\r\n\tset w5(a: ShapefileConverter) {\r\n\t\tlet b = this.w4;\r\n\t\tthis.w4 = a;\r\n\t\tif (b != this.w4) {\r\n\t\t\tthis.raisePropertyChanged(\"ShapefileDataSource\", b, this.w4);\r\n\t\t}\r\n\t}\r\n\txb: number;\r\n\tprotected get_g5(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected set_g5(a: boolean): void {\r\n\t\tsuper.set_g5(a);\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicShapeSeriesBase, 'raisePropertyChanged', [ 'IsCustomShapeMarkerStyleAllowed:w9:xr', [ 0, false ], 'IsCustomShapeStyleAllowed:xa:xs', [ 0, false ], 'ItemSearchMode:w2:xt', [ ShapeItemSearchMode_$type, enumGetBox<ShapeItemSearchMode>(ShapeItemSearchMode_$type, 0) ], 'ItemSearchPointsThreshold:xc:xu', [ 1, 10000 ], 'ItemSearchThreshold:xd:xv', [ 1, 10000 ], 'ShapeFilterResolution:xb:xw', [ 1, 2 ], 'ShapeMemberPath:xl:xx', [ 2, \"points\" ] ]);\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicShapeSeriesBaseView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicShapeSeriesBaseView, 'GeographicShapeSeriesBaseView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicShapeSeriesBase) {\r\n\t\tsuper(a);\r\n\t\tthis.ch = a;\r\n\t}\r\n\tprivate ch: GeographicShapeSeriesBase = null;\r\n\tb5(): void {\r\n\t\tsuper.b5();\r\n\t\t(<ShapeSeriesBase>this.ch.ws).yl = this.ch.xl;\r\n\t}\r\n\tci(): void {\r\n\t\tlet a: ShapeSeriesBase = <ShapeSeriesBase>this.ch.ws;\r\n\t\tif (this.ch.c9 == null) {\r\n\t\t\ta.w2 = null;\r\n\t\t\ta.w4 = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.w2 = (<XamGeographicMap>this.ch.c9).v8;\r\n\t\ta.w4 = (<XamGeographicMap>this.ch.c9).wa;\r\n\t}\r\n\tck(): void {\r\n\t\t(<ShapeSeriesBase>this.ch.ws).yl = this.ch.xl;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<ShapeSeriesBase>this.ch.ws).x5 = this.ch.xb;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { EventArgs, Base, Type, markType } from \"igniteui-core/type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ImageTilesReadyEventArgs extends EventArgs {\r\n\tstatic $t: Type = markType(ImageTilesReadyEventArgs, 'ImageTilesReadyEventArgs', (<any>EventArgs).$);\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { EventArgs, Base, Type, markType } from \"igniteui-core/type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ImagesChangedEventArgs extends EventArgs {\r\n\tstatic $t: Type = markType(ImagesChangedEventArgs, 'ImagesChangedEventArgs', (<any>EventArgs).$);\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\n/**\r\n * Indicates the desired behavior for the map on resizing.\r\n */\r\nexport enum MapBackgroundTilingMode {\r\n\t/**\r\n\t * Indicates that the map should decide the desired tiling mode automatically.\r\n\t */\r\n\tAuto = 0,\r\n\t/**\r\n\t * Map will not wrap tiles around the origin.\r\n\t */\r\n\tNonWrapped = 1,\r\n\t/**\r\n\t * Map will wrap tiles around the origin.\r\n\t */\r\n\tWrapped = 2\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let MapBackgroundTilingMode_$type = markEnum('MapBackgroundTilingMode', 'Auto,0|NonWrapped,1|Wrapped,2');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\n/**\r\n * Indicates the desired behavior for the map on resizing.\r\n */\r\nexport enum MapResizeBehavior {\r\n\t/**\r\n\t * Indicates that the map should decide the desired resize mode automatically.\r\n\t */\r\n\tAuto = 0,\r\n\t/**\r\n\t * Map will attempt to keep the top left position static during resize.\r\n\t */\r\n\tMaintainTopLeftPosition = 1,\r\n\t/**\r\n\t * Map will attempt to keep the center position static during resize.\r\n\t */\r\n\tMaintainCenterPosition = 2\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let MapResizeBehavior_$type = markEnum('MapResizeBehavior', 'Auto,0|MaintainTopLeftPosition,1|MaintainCenterPosition,2');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { ShapeSeriesBase } from \"igniteui-charts/ShapeSeriesBase\";\r\nimport { IMapRenderDeferralHandler, IMapRenderDeferralHandler_$type } from \"igniteui-core/IMapRenderDeferralHandler\";\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { Base, Type, PropertyChangedEventArgs, EventArgs, runOn, delegateRemove, delegateCombine, typeCast, markType } from \"igniteui-core/type\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { SeriesViewer } from \"igniteui-charts/SeriesViewer\";\r\nimport { ImageTilesReadyEventArgs } from \"./ImageTilesReadyEventArgs\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { DomRenderer, DomRenderer_$type, DomWrapper, DomWrapper_$type } from \"igniteui-core/dom\";\r\nimport { RenderSurface } from \"igniteui-charts/RenderSurface\";\r\nimport { Dictionary$2 } from \"igniteui-core/Dictionary$2\";\r\nimport { FrameworkElement } from \"igniteui-core/FrameworkElement\";\r\nimport { ShapeSeriesViewBase } from \"igniteui-charts/ShapeSeriesViewBase\";\r\nimport { RenderingContext } from \"igniteui-core/RenderingContext\";\r\nimport { GeometryGroup } from \"igniteui-core/GeometryGroup\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { PathGeometry } from \"igniteui-core/PathGeometry\";\r\nimport { List$1 } from \"igniteui-core/List$1\";\r\nimport { PathFigure } from \"igniteui-core/PathFigure\";\r\nimport { Geometry } from \"igniteui-core/Geometry\";\r\nimport { PointCollection } from \"igniteui-core/PointCollection\";\r\nimport { CanvasViewRenderer } from \"igniteui-core/CanvasViewRenderer\";\r\nimport { ImagesChangedEventArgs } from \"./ImagesChangedEventArgs\";\r\nimport { truncate } from \"igniteui-core/number\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TileSeries extends ShapeSeriesBase implements IMapRenderDeferralHandler {\r\n\tstatic $t: Type = markType(TileSeries, 'TileSeries', (<any>ShapeSeriesBase).$, [IMapRenderDeferralHandler_$type]);\r\n\tprotected bi(): Series {\r\n\t\treturn new TileSeries();\r\n\t}\r\n\tprotected get_f1(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>TileSeries).$;\r\n\t}\r\n\tprotected cq(): SeriesView {\r\n\t\treturn new TileSeriesView(this);\r\n\t}\r\n\tqx(a: SeriesView): void {\r\n\t\tsuper.qx(a);\r\n\t\tthis.zh = <TileSeriesView>a;\r\n\t}\r\n\tprotected get_xt(): boolean {\r\n\t\treturn false;\r\n\t}\r\n\tprotected zh: TileSeriesView;\r\n\tget zl(): GeographicMapImagery {\r\n\t\treturn this.zj;\r\n\t}\r\n\tset zl(a: GeographicMapImagery) {\r\n\t\tlet b: boolean = a != this.zl;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.zl;\r\n\t\t\tthis.zj = a;\r\n\t\t\tthis.raisePropertyChanged(\"TileImagery\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate zj: GeographicMapImagery = null;\r\n\tprivate zi: GeographicMapImagery = null;\r\n\tprotected get zk(): GeographicMapImagery {\r\n\t\treturn this.zi;\r\n\t}\r\n\tprotected set zk(a: GeographicMapImagery) {\r\n\t\tlet b = this.zi;\r\n\t\tthis.zi = a;\r\n\t\tthis.raisePropertyChanged(\"ActualTileImagery\", b, this.zi);\r\n\t}\r\n\tprotected q5(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.q5(a, b, c, d);\r\n\t\tlet e: GeographicMapImagery;\r\n\t\tlet f: GeographicMapImagery;\r\n\t\tswitch (b) {\r\n\t\t\tcase \"TileImagery\":\r\n\t\t\te = <GeographicMapImagery>c;\r\n\t\t\tf = <GeographicMapImagery>d;\r\n\t\t\tif (e != null) {\r\n\t\t\t\te.propertyChanged = delegateRemove(e.propertyChanged, runOn(this, this.zq));\r\n\t\t\t}\r\n\t\t\tif (f != null) {\r\n\t\t\t\tf.propertyChanged = delegateCombine(f.propertyChanged, runOn(this, this.zq));\r\n\t\t\t}\r\n\t\t\tthis.zh.dh(e, f);\r\n\t\t\tthis.rn(false);\r\n\t\t\tthis.qh();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualTileImagery\":\r\n\t\t\te = <GeographicMapImagery>c;\r\n\t\t\tf = <GeographicMapImagery>d;\r\n\t\t\tif (e != null) {\r\n\t\t\t\te.imageTilesReady = delegateRemove(e.imageTilesReady, runOn(this, this.zr));\r\n\t\t\t\te.deferralHandler = null;\r\n\t\t\t}\r\n\t\t\tif (f != null) {\r\n\t\t\t\tf.imageTilesReady = delegateCombine(f.imageTilesReady, runOn(this, this.zr));\r\n\t\t\t\tf.deferralHandler = this;\r\n\t\t\t}\r\n\t\t\tthis.zh.dg(e, f);\r\n\t\t\tif (f != null && typeCast<XamGeographicMap>((<any>XamGeographicMap).$, this.c9) !== null) {\r\n\t\t\t\tf.geographicMap = <XamGeographicMap>this.c9;\r\n\t\t\t\tthis.zt(this.ct);\r\n\t\t\t\tthis.zh.dd(this.c9.vl);\r\n\t\t\t}\r\n\t\t\tthis.qh();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualWindowRect\":\r\n\t\t\tthis.zh.dd(<Rect>d);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"WorldRect\":\r\n\t\t\tthis.zh.dk(<Rect>d);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tlet g = <SeriesViewer>c;\r\n\t\t\tlet h = <SeriesViewer>d;\r\n\t\t\tif (g != null && this.zk != null) {\r\n\t\t\t\tthis.zk.be(null);\r\n\t\t\t}\r\n\t\t\tif (h != null && this.zk != null) {\r\n\t\t\t\tthis.zk.be(this.ct.w);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualBrush\":\r\n\r\n\t\t\tcase \"ActualOutline\":\r\n\r\n\t\t\tcase \"ActualThickness\":\r\n\t\t\tthis.qj();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate zq(a: any, b: PropertyChangedEventArgs): void {\r\n\t\tif (b.propertyName == \"MultiScaleImage\") {\r\n\t\t\tthis.zt(this.ct);\r\n\t\t}\r\n\t}\r\n\timageTilesReady: (sender: any, e: EventArgs) => void = null;\r\n\tprivate zr(a: any, b: EventArgs): void {\r\n\t\tif (this.imageTilesReady != null) {\r\n\t\t\tthis.imageTilesReady(this, new EventArgs());\r\n\t\t}\r\n\t\tif (!this.zn) {\r\n\t\t\tthis.zh.di();\r\n\t\t}\r\n\t}\r\n\tprivate zm: (arg1: boolean) => void = null;\r\n\tregister(a: DependencyObject, b: (arg1: boolean) => void): void {\r\n\t\tthis.zm = b;\r\n\t}\r\n\tunRegister(a: DependencyObject): void {\r\n\t\tthis.zm = null;\r\n\t}\r\n\tdeferredRefresh(): void {\r\n\t\tthis.rn(false);\r\n\t}\r\n\tdeferAction(a: () => void): void {\r\n\t\tif (this.jx != null) {\r\n\t\t\tthis.jx.setTimeout(<() => void>a, 0);\r\n\t\t} else {\r\n\t\t\twindow.setTimeout(<() => void>a, 0);\r\n\t\t}\r\n\t}\r\n\tprotected sk(a: Rect, b: Rect): void {\r\n\t\tthis.zh.dj();\r\n\t\tsuper.sk(a, b);\r\n\t}\r\n\tprivate zn: boolean = false;\r\n\tro(a: boolean): void {\r\n\t\tsuper.ro(a);\r\n\t\tthis.zs(a, this.ct);\r\n\t}\r\n\tprotected zs(a: boolean, b: SeriesView): void {\r\n\t\tlet c: Rect;\r\n\t\tlet d: Rect;\r\n\t\tlet e = <TileSeriesView>b;\r\n\t\tlet f = b.getViewInfo(c, d);\r\n\t\tc = f.p0;\r\n\t\td = f.p1;\r\n\t\tthis.zt(b);\r\n\t\tif (this.zm != null) {\r\n\t\t\tthis.zn = true;\r\n\t\t\tthis.zm(a);\r\n\t\t\tthis.zn = false;\r\n\t\t}\r\n\t\te.di();\r\n\t}\r\n\trm(a: Rect, b: Rect, c: RenderSurface, d: string, e: number): void {\r\n\t\tsuper.rm(a, b, c, d, e);\r\n\t\tlet f = this.hl.item(d);\r\n\t\tf.a3(c);\r\n\t\tif (this.d3(f)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.y0(f);\r\n\t}\r\n\tprivate zt(a: SeriesView): void {\r\n\t\tlet b: Rect;\r\n\t\tlet c: Rect;\r\n\t\tlet d = a.getViewInfo(b, c);\r\n\t\tb = d.p0;\r\n\t\tc = d.p1;\r\n\t\tif (this.zl != null && this.zl.ao != null) {\r\n\t\t\tif (this.zl != this.zk) {\r\n\t\t\t\tthis.zk = this.zl;\r\n\t\t\t}\r\n\t\t\tif (this.zk != null && !b.isEmpty) {\r\n\t\t\t\tif (this.zk.width != b.width) {\r\n\t\t\t\t\tthis.zk.width = b.width;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.zk.height != b.height) {\r\n\t\t\t\t\tthis.zk.height = b.height;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\to3(a: boolean, b: SeriesView): void {\r\n\t\tsuper.o3(a, b);\r\n\t\t(<TileSeriesView>b).de();\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TileSeriesView extends ShapeSeriesViewBase {\r\n\tstatic $t: Type = markType(TileSeriesView, 'TileSeriesView', (<any>ShapeSeriesViewBase).$);\r\n\tconstructor(a: TileSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.da = a;\r\n\t}\r\n\tprotected da: TileSeries = null;\r\n\tau(): void {\r\n\t\tsuper.au();\r\n\t\tif (!this.q) {\r\n\t\t\tthis.da.vp = Defaults.ao;\r\n\t\t\tthis.da.u9 = Defaults.an;\r\n\t\t}\r\n\t}\r\n\tprotected ck(a: FrameworkElement, b: PathGeometry): void {\r\n\t\tif (b.c.count > 0) {\r\n\t\t\tthis.dl.d.add(b);\r\n\t\t}\r\n\t}\r\n\tprotected c5(a: number, b: List$1<PointCollection>): PathGeometry {\r\n\t\treturn this.c6(a, b, true);\r\n\t}\r\n\tprotected c4(a: number, b: any): FrameworkElement {\r\n\t\treturn null;\r\n\t}\r\n\tprotected co(a: FrameworkElement, b: boolean): void {\r\n\t}\r\n\tcm(a: FrameworkElement, b: any, c: boolean): void {\r\n\t}\r\n\tprivate dl: GeometryGroup = new GeometryGroup();\r\n\tcu(): void {\r\n\t\tsuper.cu();\r\n\t\tthis.dl.d.clear();\r\n\t}\r\n\tct(): void {\r\n\t\tsuper.ct();\r\n\t\tthis.as();\r\n\t}\r\n\tdd(a: Rect): void {\r\n\t\tif (this.da.zl != null) {\r\n\t\t\tthis.da.zl.windowRect = a;\r\n\t\t}\r\n\t}\r\n\tprivate dc: DomWrapper = null;\r\n\tprivate db: RenderingContext = null;\r\n\tdg(a: GeographicMapImagery, b: GeographicMapImagery): void {\r\n\t\tif (this.dc == null) {\r\n\t\t\tthis.dc = this.e.jx.createElement(\"canvas\");\r\n\t\t\tlet c = this.e.jx.get2DCanvasContext(this.dc);\r\n\t\t\tthis.db = new RenderingContext(new CanvasViewRenderer(), c);\r\n\t\t\tthis.dc.setAttribute(\"width\", this.bx.width.toString());\r\n\t\t\tthis.dc.setAttribute(\"height\", this.bx.height.toString());\r\n\t\t}\r\n\t\tif (a != null) {\r\n\t\t\ta.bd(null);\r\n\t\t\ta.be(null);\r\n\t\t\ta.imagesChanged = delegateRemove(a.imagesChanged, runOn(this, this.df));\r\n\t\t}\r\n\t\tif (b != null) {\r\n\t\t\tif (this.w != null) {\r\n\t\t\t\tb.be(this.w);\r\n\t\t\t}\r\n\t\t\tb.bd(this.db);\r\n\t\t\tb.bf(this.bx);\r\n\t\t\tb.imagesChanged = delegateCombine(b.imagesChanged, runOn(this, this.df));\r\n\t\t}\r\n\t}\r\n\tprivate df(a: any, b: EventArgs): void {\r\n\t\tthis.as();\r\n\t}\r\n\tdh(a: GeographicMapImagery, b: GeographicMapImagery): void {\r\n\t}\r\n\tdj(): void {\r\n\t\tif (this.dc != null) {\r\n\t\t\tthis.dc.setAttribute(\"width\", this.bx.width.toString());\r\n\t\t\tthis.dc.setAttribute(\"height\", this.bx.height.toString());\r\n\t\t}\r\n\t\tif (this.da.zl != null) {\r\n\t\t\tthis.da.zl.bf(this.bx);\r\n\t\t}\r\n\t}\r\n\tprotected a8(a: RenderingContext, b: boolean): void {\r\n\t\tsuper.a8(a, b);\r\n\t\tif (b) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this.dc == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet c: boolean = false;\r\n\t\tif (this.dl.d.count > 0) {\r\n\t\t\tc = true;\r\n\t\t\tthis.k.aa();\r\n\t\t\tthis.k.r(this.dl);\r\n\t\t\tlet d = <CanvasRenderingContext2D>this.k.h();\r\n\t\t\td.clip();\r\n\t\t}\r\n\t\tlet e: number = <number>truncate(Math.round(this.bx.left));\r\n\t\tlet f: number = <number>truncate(Math.round(this.bx.top));\r\n\t\tlet g: number = <number>truncate(Math.round(this.bx.width));\r\n\t\tlet h: number = <number>truncate(Math.round(this.bx.height));\r\n\t\tthis.k.o(this.dc.getNativeElement(), 1, e, f, g, h, e, f, g, h);\r\n\t\tif (c) {\r\n\t\t\tthis.k.z();\r\n\t\t}\r\n\t}\r\n\tdi(): void {\r\n\t\tthis.as();\r\n\t}\r\n\tde(): void {\r\n\t}\r\n\tdk(a: Rect): void {\r\n\t\tif (this.da.zl != null) {\r\n\t\t\tthis.da.zl.a6();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { VerticalLinearScaler } from \"igniteui-charts/VerticalLinearScaler\";\r\nimport { ScalerParams } from \"igniteui-charts/ScalerParams\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { IList$1, IList$1_$type, Base, Type, markType } from \"igniteui-core/type\";\r\nimport { NumericScaler } from \"igniteui-charts/NumericScaler\";\r\nimport { NumericAxisBase } from \"igniteui-charts/NumericAxisBase\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class SphericalMercatorVerticalScaler extends VerticalLinearScaler {\r\n\tstatic $t: Type = markType(SphericalMercatorVerticalScaler, 'SphericalMercatorVerticalScaler', (<any>VerticalLinearScaler).$);\r\n\tprivate au: Rect = null;\r\n\tq(a: number, b: ScalerParams): number {\r\n\t\tif (!b.c.isEmpty) {\r\n\t\t\tlet c: number = a * b.e.height + b.e.top * b.d.height;\r\n\t\t\tlet d: number = this.getMercatorUnscaledValue(c, this.au, b.c, b.a);\r\n\t\t\treturn d;\r\n\t\t} else {\r\n\t\t\treturn this.getMercatorUnscaledValue(a, b.e, b.d, b.a);\r\n\t\t}\r\n\t}\r\n\tp(a: number, b: ScalerParams): number {\r\n\t\tif (!b.c.isEmpty) {\r\n\t\t\tlet c: number = this.getMercatorScaledValue1(a, this.au, b.c, b.a);\r\n\t\t\tc = (c - (b.e.top * b.d.height)) / b.e.height;\r\n\t\t\treturn c;\r\n\t\t} else {\r\n\t\t\treturn this.getMercatorScaledValue1(a, b.e, b.d, b.a);\r\n\t\t}\r\n\t}\r\n\tprivate af(values_: IList$1<number>): number[] {\r\n\t\tlet a = <any[]>(Array.isArray(values_) ? values_ : null);\r\n\t\treturn <number[]>a;\r\n\t\treturn null;\r\n\t}\r\n\tv(a: IList$1<number>, b: number, c: number, d: ScalerParams): void {\r\n\t\tlet e: number;\r\n\t\tlet f: Rect = d.e;\r\n\t\tlet g: Rect = d.d;\r\n\t\tlet h: Rect = d.c;\r\n\t\tlet i: boolean = d.a;\r\n\t\tlet j: boolean = !h.isEmpty;\r\n\t\tlet k: number = this.m;\r\n\t\tlet l: number = this.o;\r\n\t\tlet m: number = h.top;\r\n\t\tlet n: number = h.height;\r\n\t\tlet o: number = f.top;\r\n\t\tlet p: number = f.height;\r\n\t\tlet q: number = g.top;\r\n\t\tlet r: number = g.height;\r\n\t\tlet s: number = this.au.top;\r\n\t\tlet t: number = this.au.height;\r\n\t\tlet u: number[] = this.af(a);\r\n\t\tlet v: number = 0.017453292519943295;\r\n\t\tlet w: number;\r\n\t\tlet x: number;\r\n\t\tlet y: number;\r\n\t\tlet z: number;\r\n\t\tlet aa: number;\r\n\t\tlet ab: boolean = false;\r\n\t\tif (u != null) {\r\n\t\t\tab = true;\r\n\t\t}\r\n\t\tfor (let ac: number = b; ac < c; ac++) {\r\n\t\t\tif (ab) {\r\n\t\t\t\te = u[ac];\r\n\t\t\t} else {\r\n\t\t\t\te = a.item(ac);\r\n\t\t\t}\r\n\t\t\tif (j) {\r\n\t\t\t\tif (e < SphericalMercatorVerticalScaler.ah) {\r\n\t\t\t\t\te = SphericalMercatorVerticalScaler.ah;\r\n\t\t\t\t}\r\n\t\t\t\tif (e > SphericalMercatorVerticalScaler.ag) {\r\n\t\t\t\t\te = SphericalMercatorVerticalScaler.ag;\r\n\t\t\t\t}\r\n\t\t\t\tw = e * (v);\r\n\t\t\t\tx = Math.sin(w);\r\n\t\t\t\ty = 0.5 * Math.log((1 + x) / (1 - x));\r\n\t\t\t\tz = (this.ai - y) * n / this.aj;\r\n\t\t\t\tz = m + z;\r\n\t\t\t\taa = (z - s * n) / t;\r\n\t\t\t\tz = (aa - (o * r)) / p;\r\n\t\t\t\tif (ab) {\r\n\t\t\t\t\tu[ac] = z;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ta.item(ac, z);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (e < SphericalMercatorVerticalScaler.ah) {\r\n\t\t\t\t\te = SphericalMercatorVerticalScaler.ah;\r\n\t\t\t\t}\r\n\t\t\t\tif (e > SphericalMercatorVerticalScaler.ag) {\r\n\t\t\t\t\te = SphericalMercatorVerticalScaler.ag;\r\n\t\t\t\t}\r\n\t\t\t\tw = e * (v);\r\n\t\t\t\tx = Math.sin(w);\r\n\t\t\t\ty = 0.5 * Math.log((1 + x) / (1 - x));\r\n\t\t\t\tz = (this.ai - y) * r / this.aj;\r\n\t\t\t\tz = q + z;\r\n\t\t\t\tz = (z - o * r) / p;\r\n\t\t\t\tif (ab) {\r\n\t\t\t\t\tu[ac] = z;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ta.item(ac, z);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tt(a: NumericAxisBase, b: number, c: number, d: number, e: number): { p3: number; p4: number; } {\r\n\t\td = this.ak(a.l6);\r\n\t\te = this.ak(a.l5);\r\n\t\treturn {\r\n\t\t\tp3: d,\r\n\t\t\tp4: e\r\n\r\n\t\t};\r\n\t}\r\n\tprotected w(a: string, b: any, c: any): void {\r\n\t\tsuper.w(a, b, c);\r\n\t\tswitch (a) {\r\n\t\t\tcase \"ActualMinimumValue\":\r\n\r\n\t\t\tcase \"ActualMaximumValue\":\r\n\t\t\tthis.ai = SphericalMercatorVerticalScaler.am(this.n);\r\n\t\t\tthis.aj = SphericalMercatorVerticalScaler.am(this.n) - SphericalMercatorVerticalScaler.am(this.o);\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate static ag: number = 85.05112878;\r\n\tprivate static ah: number = -85.05112878;\r\n\tprivate ai: number = 0;\r\n\tprivate aj: number = 0;\r\n\tstatic get as(): number {\r\n\t\treturn SphericalMercatorVerticalScaler.ag;\r\n\t}\r\n\tstatic get at(): number {\r\n\t\treturn SphericalMercatorVerticalScaler.ah;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.au = new Rect(0, 0, 0, 1, 1);\r\n\t}\r\n\tprivate getMercatorUnscaledValue(a: number, b: Rect, c: Rect, d: boolean): number {\r\n\t\tlet e = (a - c.top) * b.width + b.top * c.height;\r\n\t\te = SphericalMercatorVerticalScaler.am(this.n) - e / (c.height / this.aj);\r\n\t\treturn SphericalMercatorVerticalScaler.aq(e);\r\n\t}\r\n\tprivate getMercatorScaledValue1(a: number, b: Rect, c: Rect, d: boolean): number {\r\n\t\tlet e = c.top + this.getMercatorScaledValue3(a, c.height);\r\n\t\treturn (e - b.top * c.height) / b.width;\r\n\t}\r\n\tprivate getMercatorScaledValue2(a: number, b: Rect, c: Rect, d: Rect, e: boolean): number {\r\n\t\tlet f = this.getMercatorScaledValue3(a, d.height);\r\n\t\treturn (f - b.top * c.height) / b.width;\r\n\t}\r\n\tprivate getMercatorScaledValue3(a: number, b: number): number {\r\n\t\ta = a > SphericalMercatorVerticalScaler.ah ? (a < SphericalMercatorVerticalScaler.ag ? a : SphericalMercatorVerticalScaler.ag) : SphericalMercatorVerticalScaler.ah;\r\n\t\tlet c = SphericalMercatorVerticalScaler.am(a);\r\n\t\tlet d = (this.ai - c) * b / this.aj;\r\n\t\treturn (d);\r\n\t}\r\n\tstatic am(a: number): number {\r\n\t\tlet b: number = a * (0.017453292519943295);\r\n\t\tlet c: number = Math.sin(b);\r\n\t\tlet d: number = 0.5 * Math.log((1 + c) / (1 - c));\r\n\t\treturn d;\r\n\t}\r\n\tstatic aq(a: number): number {\r\n\t\ta = Math.exp(2 * a);\r\n\t\treturn Math.asin((a - 1) / (a + 1)) / 0.017453292519943295;\r\n\t}\r\n\tprivate ak(a: number): number {\r\n\t\tif (a < SphericalMercatorVerticalScaler.ah) {\r\n\t\t\treturn SphericalMercatorVerticalScaler.ah;\r\n\t\t}\r\n\t\tif (a > SphericalMercatorVerticalScaler.ag) {\r\n\t\t\treturn SphericalMercatorVerticalScaler.ag;\r\n\t\t}\r\n\t\treturn a;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { HorizontalLinearScaler } from \"igniteui-charts/HorizontalLinearScaler\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { ScalerParams } from \"igniteui-charts/ScalerParams\";\r\nimport { IList$1, IList$1_$type, Base, Type, markType } from \"igniteui-core/type\";\r\nimport { NumericScaler } from \"igniteui-charts/NumericScaler\";\r\nimport { NumericAxisBase } from \"igniteui-charts/NumericAxisBase\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class SphericalMercatorHorizontalScaler extends HorizontalLinearScaler {\r\n\tstatic $t: Type = markType(SphericalMercatorHorizontalScaler, 'SphericalMercatorHorizontalScaler', (<any>HorizontalLinearScaler).$);\r\n\tprivate aj: Rect = null;\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.aj = new Rect(0, 0, 0, 1, 1);\r\n\t}\r\n\tq(a: number, b: ScalerParams): number {\r\n\t\tif (!b.c.isEmpty) {\r\n\t\t\tlet c: number = a * b.e.width + b.e.left * b.d.width;\r\n\t\t\tlet d: number = this.getMercatorUnscaledValue(c, this.aj, b.c, b.a);\r\n\t\t\treturn d;\r\n\t\t} else {\r\n\t\t\treturn this.getMercatorUnscaledValue(a, b.e, b.d, b.a);\r\n\t\t}\r\n\t}\r\n\tp(a: number, b: ScalerParams): number {\r\n\t\tif (!b.c.isEmpty) {\r\n\t\t\tlet c: number = this.getMercatorScaledValue1(a, this.aj, b.c, b.a);\r\n\t\t\tlet d: number = (c - (b.e.left * b.d.width)) / b.e.width;\r\n\t\t\treturn d;\r\n\t\t} else {\r\n\t\t\treturn this.getMercatorScaledValue1(a, b.e, b.d, b.a);\r\n\t\t}\r\n\t}\r\n\tprivate af(values_: IList$1<number>): number[] {\r\n\t\tlet a = <any[]>(Array.isArray(values_) ? values_ : null);\r\n\t\treturn <number[]>a;\r\n\t\treturn null;\r\n\t}\r\n\tv(a: IList$1<number>, b: number, c: number, d: ScalerParams): void {\r\n\t\tlet e: number;\r\n\t\tlet f: Rect = d.e;\r\n\t\tlet g: Rect = d.d;\r\n\t\tlet h: Rect = d.c;\r\n\t\tlet i: boolean = d.a;\r\n\t\tlet j: boolean = !h.isEmpty;\r\n\t\tlet k: number = this.m;\r\n\t\tlet l: number = this.o;\r\n\t\tlet m: number = h.left;\r\n\t\tlet n: number = h.width;\r\n\t\tlet o: number = f.left;\r\n\t\tlet p: number = f.width;\r\n\t\tlet q: number = g.left;\r\n\t\tlet r: number = g.width;\r\n\t\tlet s: number = this.aj.left;\r\n\t\tlet t: number = this.aj.width;\r\n\t\tlet u: number[] = this.af(a);\r\n\t\tlet v: boolean = false;\r\n\t\tif (u != null) {\r\n\t\t\tv = true;\r\n\t\t}\r\n\t\tfor (let w: number = b; w < c; w++) {\r\n\t\t\tif (v) {\r\n\t\t\t\te = u[w];\r\n\t\t\t} else {\r\n\t\t\t\te = a.item(w);\r\n\t\t\t}\r\n\t\t\tif (j) {\r\n\t\t\t\tlet x: number = (e - l) / (k);\r\n\t\t\t\tif (i) {\r\n\t\t\t\t\tx = 1 - x;\r\n\t\t\t\t}\r\n\t\t\t\tx = m + n * (x - s) / t;\r\n\t\t\t\tlet y: number = (x - (o * r)) / p;\r\n\t\t\t\tif (v) {\r\n\t\t\t\t\tu[w] = y;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ta.item(w, y);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tlet z: number = (e - l) / (k);\r\n\t\t\t\tif (i) {\r\n\t\t\t\t\tz = 1 - z;\r\n\t\t\t\t}\r\n\t\t\t\tz = q + r * (z - o) / p;\r\n\t\t\t\tif (v) {\r\n\t\t\t\t\tu[w] = z;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ta.item(w, z);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tt(a: NumericAxisBase, b: number, c: number, d: number, e: number): { p3: number; p4: number; } {\r\n\t\td = a.l6;\r\n\t\te = a.l5;\r\n\t\treturn {\r\n\t\t\tp3: d,\r\n\t\t\tp4: e\r\n\r\n\t\t};\r\n\t}\r\n\tprivate getMercatorUnscaledValue(a: number, b: Rect, c: Rect, d: boolean): number {\r\n\t\tlet e: number = b.left + b.width * (a - c.left) / c.width;\r\n\t\tif (d) {\r\n\t\t\te = 1 - e;\r\n\t\t}\r\n\t\treturn this.o + e * (this.m);\r\n\t}\r\n\tprivate getMercatorScaledValue1(a: number, b: Rect, c: Rect, d: boolean): number {\r\n\t\tlet e: number = (a - this.o) / (this.m);\r\n\t\tif (d) {\r\n\t\t\te = 1 - e;\r\n\t\t}\r\n\t\treturn c.left + c.width * (e - b.left) / b.width;\r\n\t}\r\n\tprivate getMercatorScaledValue2(a: number, b: Rect, c: Rect, d: Rect, e: boolean): number {\r\n\t\tlet f: number = (a - this.o) / (this.m);\r\n\t\tif (e) {\r\n\t\t\tf = 1 - f;\r\n\t\t}\r\n\t\treturn c.left + c.width * (f - b.left) / b.width;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { SeriesViewer } from \"igniteui-charts/SeriesViewer\";\r\nimport { IMapRenderDeferralHandler, IMapRenderDeferralHandler_$type } from \"igniteui-core/IMapRenderDeferralHandler\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { MapResizeBehavior, MapResizeBehavior_$type } from \"./MapResizeBehavior\";\r\nimport { MapBackgroundTilingMode, MapBackgroundTilingMode_$type } from \"./MapBackgroundTilingMode\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { Base, Point, Type, IEnumerator$1, IEnumerator$1_$type, IEnumerator, IEnumerator_$type, IDisposable, IDisposable_$type, EventArgs, Boolean_$type, typeCast, enumGetBox, EnumUtil, Point_$type, fromEnum, Number_$type, runOn, delegateRemove, delegateCombine, markType, markDep, PointUtil, INotifyPropertyChanged, INotifyPropertyChanged_$type, PropertyChangedEventArgs, String_$type, IEnumerable, IEnumerable_$type } from \"igniteui-core/type\";\r\nimport { NumericXAxis } from \"igniteui-charts/NumericXAxis\";\r\nimport { NumericYAxis } from \"igniteui-charts/NumericYAxis\";\r\nimport { SphericalMercatorVerticalScaler } from \"./SphericalMercatorVerticalScaler\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { Axis } from \"igniteui-charts/Axis\";\r\nimport { SphericalMercatorHorizontalScaler } from \"./SphericalMercatorHorizontalScaler\";\r\nimport { StraightNumericAxisBase } from \"igniteui-charts/StraightNumericAxisBase\";\r\nimport { DomRenderer, DomRenderer_$type } from \"igniteui-core/dom\";\r\nimport { ScalerParams } from \"igniteui-charts/ScalerParams\";\r\nimport { NumericAxisBase } from \"igniteui-charts/NumericAxisBase\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { SeriesViewerView } from \"igniteui-charts/SeriesViewerView\";\r\nimport { List$1 } from \"igniteui-core/List$1\";\r\nimport { Tuple$2 } from \"igniteui-core/Tuple$2\";\r\nimport { MathUtil } from \"igniteui-core/MathUtil\";\r\nimport { ZoomCoercionMode } from \"igniteui-charts/ZoomCoercionMode\";\r\nimport { ImageTilesReadyEventArgs } from \"./ImageTilesReadyEventArgs\";\r\nimport { FontInfo } from \"igniteui-core/FontInfo\";\r\nimport { ItfConverter } from \"igniteui-core/ItfConverter\";\r\nimport { TriangulationSource } from \"igniteui-core/TriangulationSource\";\r\nimport { ChartVisualData } from \"igniteui-charts/ChartVisualData\";\r\nimport { AxisVisualData } from \"igniteui-charts/AxisVisualData\";\r\nimport { SeriesVisualData } from \"igniteui-charts/SeriesVisualData\";\r\nimport { FrameworkElement } from \"igniteui-core/FrameworkElement\";\r\nimport { RectData } from \"igniteui-core/RectData\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { truncate, intDivide, isNaN_, isInfinity } from \"igniteui-core/number\";\r\nimport { XamMultiScaleImage } from \"igniteui-core/XamMultiScaleImage\";\r\nimport { XamMultiScaleTileSource } from \"igniteui-core/XamMultiScaleTileSource\";\r\nimport { DownloadingMultiScaleImageEventArgs } from \"igniteui-core/DownloadingMultiScaleImageEventArgs\";\r\nimport { CancellingMultiScaleImageEventArgs } from \"igniteui-core/CancellingMultiScaleImageEventArgs\";\r\nimport { Size } from \"igniteui-core/Size\";\r\nimport { RenderingContext } from \"igniteui-core/RenderingContext\";\r\nimport { ImagesChangedEventArgs } from \"./ImagesChangedEventArgs\";\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { ScatterTriangulationSeries } from \"igniteui-charts/ScatterTriangulationSeries\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { ScatterAreaSeries } from \"igniteui-charts/ScatterAreaSeries\";\r\nimport { InteractionState } from \"igniteui-core/InteractionState\";\r\nimport { SeriesViewerViewManager } from \"igniteui-charts/SeriesViewerViewManager\";\r\nimport { BrushCollection } from \"igniteui-core/BrushCollection\";\r\nimport { DefaultPaletteInfo } from \"igniteui-charts/DefaultPaletteInfo\";\r\nimport { CanvasRenderScheduler } from \"igniteui-core/CanvasRenderScheduler\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Shape } from \"igniteui-core/Shape\";\r\nimport { ModifierKeys } from \"igniteui-core/ModifierKeys\";\r\nimport { OpenStreetMapTileSource } from \"igniteui-core/OpenStreetMapTileSource\";\r\nimport { ColorScale } from \"igniteui-charts/ColorScale\";\r\nimport { TriangulationStatusEventArgs } from \"igniteui-core/TriangulationStatusEventArgs\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class XamGeographicMap extends SeriesViewer implements IMapRenderDeferralHandler {\r\n\tstatic $t: Type = markType(XamGeographicMap, 'XamGeographicMap', (<any>SeriesViewer).$, [IMapRenderDeferralHandler_$type]);\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.wt = SphericalMercatorVerticalScaler.am(XamGeographicMap.x5.bottom) - SphericalMercatorVerticalScaler.am(XamGeographicMap.x5.top);\r\n\t\tthis.ab = (<any>XamGeographicMap).$;\r\n\t\tthis.backgroundContent = new OpenStreetMapImagery();\r\n\t\tlet a = ((() => {\r\n\t\t\tlet $ret = new NumericXAxis();\r\n\t\t\t$ret.bi = this;\r\n\t\t\treturn $ret;\r\n\t\t})());\r\n\t\ta.cf = true;\r\n\t\tthis.v8 = a;\r\n\t\tthis.v8.nm = new SphericalMercatorHorizontalScaler();\r\n\t\tlet b = ((() => {\r\n\t\t\tlet $ret = new NumericYAxis();\r\n\t\t\t$ret.bi = this;\r\n\t\t\treturn $ret;\r\n\t\t})());\r\n\t\tb.cf = true;\r\n\t\tthis.wa = b;\r\n\t\tthis.wa.nm = new SphericalMercatorVerticalScaler();\r\n\t\tthis.xf();\r\n\t\tthis.xm();\r\n\t\tthis.no();\r\n\t}\r\n\tprivate wx: DomRenderer = null;\r\n\tprovideContainer(a: any): void {\r\n\t\tsuper.provideContainer(a);\r\n\t\tthis.v8.provideRenderer(<DomRenderer><any>a);\r\n\t\tthis.wa.provideRenderer(<DomRenderer><any>a);\r\n\t}\r\n\tno(): void {\r\n\t\tsuper.no();\r\n\t\tthis.wk.fv(this.hb);\r\n\t}\r\n\tfh(): boolean {\r\n\t\treturn this.wq;\r\n\t}\r\n\tfi(): boolean {\r\n\t\treturn this.wq;\r\n\t}\r\n\twq: boolean;\r\n\tstatic wi: MapResizeBehavior = 0;\r\n\twj: MapResizeBehavior;\r\n\twm: boolean = false;\r\n\twn: boolean;\r\n\tprotected wh(): MapBackgroundTilingMode {\r\n\t\tif (this.wf == 0) {\r\n\t\t\tif (this.wm) {\r\n\t\t\t\treturn 2;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn 1;\r\n\t}\r\n\tprivate we: MapBackgroundTilingMode = 1;\r\n\tget wg(): MapBackgroundTilingMode {\r\n\t\treturn this.we;\r\n\t}\r\n\tset wg(a: MapBackgroundTilingMode) {\r\n\t\tthis.we = a;\r\n\t}\r\n\twf: MapBackgroundTilingMode;\r\n\tstatic x5: Rect = new Rect(2, <Point>{ $type: Point_$type, x: -180, y: -85.05112878 }, <Point>{ $type: Point_$type, x: 180, y: 85.05112878 });\r\n\twt: number = 0;\r\n\twp: boolean;\r\n\two: boolean;\r\n\tyl: Rect;\r\n\tprivate x4: Rect = null;\r\n\tget x9(): Rect {\r\n\t\treturn this.x4;\r\n\t}\r\n\tset x9(a: Rect) {\r\n\t\tlet b: boolean = Rect.l_op_Inequality(this.x4, a);\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.x4;\r\n\t\t\tthis.x4 = a;\r\n\t\t\tthis.p8(\"ActualWorldRect\", c, a);\r\n\t\t}\r\n\t}\r\n\tyd(): Rect {\r\n\t\treturn this.x9;\r\n\t}\r\n\tprivate xf(): void {\r\n\t\tif (this.yl.isEmpty) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.x9 = this.yj(this.yl, this.cr == 1);\r\n\t}\r\n\tprivate yj(a: Rect, b: boolean): Rect {\r\n\t\tlet c = a.top;\r\n\t\tlet d = a.left;\r\n\t\tlet e = a.width;\r\n\t\tlet f = a.height;\r\n\t\tlet g = SphericalMercatorVerticalScaler.am(a.bottom);\r\n\t\tlet h = SphericalMercatorVerticalScaler.am(a.top);\r\n\t\tlet i = g - h;\r\n\t\tlet j = a.width / XamGeographicMap.x5.width;\r\n\t\tlet k = SphericalMercatorVerticalScaler.am(XamGeographicMap.x5.top);\r\n\t\tlet l = i / j;\r\n\t\tif (i / j > this.wt) {\r\n\t\t\tlet m = i / this.wt;\r\n\t\t\tlet n = m - j;\r\n\t\t\td = d - (n / 2) * XamGeographicMap.x5.width;\r\n\t\t\te = m * XamGeographicMap.x5.width;\r\n\t\t\tif (b) {\r\n\t\t\t\tif (d < XamGeographicMap.x5.left) {\r\n\t\t\t\t\td += (XamGeographicMap.x5.left - d);\r\n\t\t\t\t} else if ((d + e) > XamGeographicMap.x5.right) {\r\n\t\t\t\t\td -= ((d + e) - XamGeographicMap.x5.right);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (i / j < this.wt) {\r\n\t\t\tlet o = this.wt * j;\r\n\t\t\tlet p = o - i;\r\n\t\t\tlet q = h - (p / 2);\r\n\t\t\tlet r = g + (p / 2);\r\n\t\t\tif (b) {\r\n\t\t\t\tif (q < k) {\r\n\t\t\t\t\tq += (k - q);\r\n\t\t\t\t\tr += (k - q);\r\n\t\t\t\t} else if (r > (k + this.wt)) {\r\n\t\t\t\t\tq -= ((r) - (k + this.wt));\r\n\t\t\t\t\tr -= ((r) - (k + this.wt));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tc = SphericalMercatorVerticalScaler.aq(q);\r\n\t\t\tf = SphericalMercatorVerticalScaler.aq(r) - c;\r\n\t\t}\r\n\t\tlet s = new Rect(0, d, c, e, f);\r\n\t\treturn s;\r\n\t}\r\n\tget backgroundContent(): GeographicMapImagery {\r\n\t\treturn this.wb;\r\n\t}\r\n\tset backgroundContent(a: GeographicMapImagery) {\r\n\t\tlet b: boolean = a != this.backgroundContent;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.backgroundContent;\r\n\t\t\tthis.wb = a;\r\n\t\t\tthis.p8(\"BackgroundContent\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate wb: GeographicMapImagery = null;\r\n\tget v8(): NumericXAxis {\r\n\t\treturn this.v7;\r\n\t}\r\n\tset v8(a: NumericXAxis) {\r\n\t\tlet b: boolean = a != this.v8;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.v8;\r\n\t\t\tthis.v7 = a;\r\n\t\t\tthis.p8(\"XAxis\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate v7: NumericXAxis = null;\r\n\tget wa(): NumericYAxis {\r\n\t\treturn this.v9;\r\n\t}\r\n\tset wa(a: NumericYAxis) {\r\n\t\tlet b: boolean = a != this.wa;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.wa;\r\n\t\t\tthis.v9 = a;\r\n\t\t\tthis.p8(\"YAxis\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate v9: NumericYAxis = null;\r\n\twd: GeographicMapImagery = null;\r\n\tprivate static x8: Rect = new Rect(0, 0, 0, 1, 1);\r\n\tgetZoomRectFromGeoRect(a: Rect): Rect {\r\n\t\treturn this.getZoomFromGeographicRect(a);\r\n\t}\r\n\txp(a: Rect): void {\r\n\t\tthis.v1 = a;\r\n\t}\r\n\txo(a: Rect): void {\r\n\t\tthis.yl = a;\r\n\t}\r\n\tgetZoomFromGeographicRect(a: Rect): Rect {\r\n\t\treturn this.yb(a, true, 0);\r\n\t}\r\n\tya(a: Rect, b: number): Rect {\r\n\t\treturn this.yb(a, false, b);\r\n\t}\r\n\tprivate yb(a: Rect, b: boolean, c: number): Rect {\r\n\t\tlet d = a;\r\n\t\tif (b) {\r\n\t\t\td = this.yj(a, false);\r\n\t\t}\r\n\t\tlet e = this.v8;\r\n\t\tlet f = this.wa;\r\n\t\tlet g: ScalerParams = new ScalerParams(1, XamGeographicMap.x8, this.v0, e.ch);\r\n\t\tg.c = this.vp;\r\n\t\tlet h: ScalerParams = new ScalerParams(1, XamGeographicMap.x8, this.v0, f.ch);\r\n\t\th.c = this.vp;\r\n\t\tlet i = this.v8.ek(d.left, g);\r\n\t\tlet j = this.v8.ek(d.right, g);\r\n\t\tlet k = this.wa.ek(d.top, h);\r\n\t\tlet l = this.wa.ek(d.bottom, h);\r\n\t\tlet m = (i - c) / this.v0.width;\r\n\t\tlet n = (l - c) / this.v0.height;\r\n\t\tlet o = (j - i + (c * 2)) / this.v0.width;\r\n\t\tlet p = (k - l + (c * 2)) / this.v0.height;\r\n\t\tlet q: Rect = new Rect(0, m, n, o, p);\r\n\t\tq.intersect(XamGeographicMap.x8);\r\n\t\tif (q.isEmpty) {\r\n\t\t\tq = XamGeographicMap.x8;\r\n\t\t}\r\n\t\treturn q;\r\n\t}\r\n\tgetZoomFromGeographicPoints(a: Point, b: Point): Rect {\r\n\t\tlet c = a.x;\r\n\t\tlet d = b.y;\r\n\t\tlet e = b.x - a.x;\r\n\t\tlet f = a.y - b.y;\r\n\t\tif (e < 0 || f < 0) {\r\n\t\t\treturn XamGeographicMap.x8;\r\n\t\t} else {\r\n\t\t\tlet g: Rect = new Rect(0, c, d, e, f);\r\n\t\t\treturn this.getZoomFromGeographicRect(g);\r\n\t\t}\r\n\t}\r\n\tyf(a: Rect): Rect {\r\n\t\tlet b = this.v8;\r\n\t\tlet c = this.wa;\r\n\t\tlet d: ScalerParams = new ScalerParams(1, a, this.v0, b.ch);\r\n\t\td.c = this.vp;\r\n\t\tlet e: ScalerParams = new ScalerParams(1, a, this.v0, c.ch);\r\n\t\te.c = this.vp;\r\n\t\tlet f = this.vo;\r\n\t\tlet g = b.en(f.left, d);\r\n\t\tlet h = c.en(f.top, e);\r\n\t\tlet i = b.en(f.right, d);\r\n\t\tlet j = c.en(f.bottom, e);\r\n\t\tlet k = i - g;\r\n\t\tlet l = h - j;\r\n\t\tlet m: Rect = new Rect(0, g, j, k, l);\r\n\t\tif (this.cr == 1) {\r\n\t\t\tm.intersect(XamGeographicMap.x5);\r\n\t\t\tif (m.isEmpty) {\r\n\t\t\t\tm = XamGeographicMap.x5;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn m;\r\n\t}\r\n\tx1(a: Point): Point {\r\n\t\tlet b = this.v8.l9(a.x);\r\n\t\tlet c = this.wa.l9(a.y);\r\n\t\treturn <Point>{ $type: Point_$type, x: b, y: c };\r\n\t}\r\n\tx2(a: Point): Point {\r\n\t\tlet b = this.v8.e5(a.x);\r\n\t\tlet c = this.wa.e5(a.y);\r\n\t\treturn <Point>{ $type: Point_$type, x: b, y: c };\r\n\t}\r\n\tx3(a: Point): Point {\r\n\t\treturn this.x2(a);\r\n\t}\r\n\txc(): void {\r\n\t\tlet a = typeCast<GeographicMapImagery>((<any>GeographicMapImagery).$, this.backgroundContent);\r\n\t\tif (a != null) {\r\n\t\t\ta.clearTileCache();\r\n\t\t}\r\n\t}\r\n\txi(a: Brush): void {\r\n\t}\r\n\tga(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\txk(): void {\r\n\t\tthis.wk.ee();\r\n\t\tfor (let a of fromEnum<Series>(this.series)) {\r\n\t\t\ta.r6();\r\n\t\t}\r\n\t}\r\n\tprotected x0: Point = <Point>{ $type: Point_$type, x: NaN, y: NaN };\r\n\tprotected xn(): void {\r\n\t\tif (this.wj == 2) {\r\n\t\t\tif (!this.v0.isEmpty && this.v0.width > 0 && this.v0.height > 0) {\r\n\t\t\t\tlet a: number = this.v8.l9(this.v0.left + (this.v0.width / 2));\r\n\t\t\t\tlet b: number = this.wa.l9(this.v0.top + (this.v0.height / 2));\r\n\t\t\t\tthis.x0 = <Point>{ $type: Point_$type, x: a, y: b };\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (!this.v0.isEmpty && this.v0.width > 0 && this.v0.height > 0) {\r\n\t\t\t\tlet c: number = this.v8.l9(this.v0.left);\r\n\t\t\t\tlet d: number = this.wa.l9(this.v0.top);\r\n\t\t\t\tthis.x0 = <Point>{ $type: Point_$type, x: c, y: d };\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprotected xj(): void {\r\n\t\tif (isNaN_(this.x0.x) || isNaN_(this.x0.y)) {\r\n\t\t\tthis.xn();\r\n\t\t}\r\n\t\tlet a: number = this.x0.x;\r\n\t\tlet b: number = this.x0.y;\r\n\t\tif (!isNaN_(a) && !isNaN_(b)) {\r\n\t\t\tlet c: number = this.vl.left;\r\n\t\t\tlet d: number = this.vl.top;\r\n\t\t\tlet e: number = this.vl.width;\r\n\t\t\tlet f: number = this.vl.height;\r\n\t\t\tif (e > this.x7.width) {\r\n\t\t\t} else {\r\n\t\t\t\tlet g: ScalerParams = new ScalerParams(1, XamGeographicMap.x8, this.v0, this.v8.ch);\r\n\t\t\t\tg.c = this.vp;\r\n\t\t\t\tlet h: number = this.v8.ek(a, g);\r\n\t\t\t\tif (this.wj == 2) {\r\n\t\t\t\t\tlet i = h / this.v0.width;\r\n\t\t\t\t\tc = i - (e / 2);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tc = h / this.v0.width;\r\n\t\t\t\t}\r\n\t\t\t\tif (c + e > this.x7.right) {\r\n\t\t\t\t\tc = this.x7.right - e;\r\n\t\t\t\t} else if (c < this.x7.left) {\r\n\t\t\t\t\tc = this.x7.left;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (f > this.x7.height) {\r\n\t\t\t} else {\r\n\t\t\t\tlet j: ScalerParams = new ScalerParams(1, XamGeographicMap.x8, this.v0, this.wa.ch);\r\n\t\t\t\tj.c = this.vp;\r\n\t\t\t\tlet k: number = this.wa.ek(b, j);\r\n\t\t\t\tif (this.wj == 2) {\r\n\t\t\t\t\tlet l = k / this.v0.height;\r\n\t\t\t\t\td = l - (f / 2);\r\n\t\t\t\t} else {\r\n\t\t\t\t\td = k / this.v0.height;\r\n\t\t\t\t}\r\n\t\t\t\tif (d + f > this.x7.bottom) {\r\n\t\t\t\t\td = this.x7.bottom - f;\r\n\t\t\t\t} else if (d < this.x7.top) {\r\n\t\t\t\t\td = this.x7.top;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.rj(new Rect(0, c, d, e, f), false);\r\n\t\t}\r\n\t}\r\n\tprotected get_e9(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected x7: Rect = null;\r\n\tprotected vm(): Rect {\r\n\t\tlet a: Rect = super.vm();\r\n\t\tif (this.v8 == null || this.wa == null) {\r\n\t\t\treturn a;\r\n\t\t}\r\n\t\tthis.vw();\r\n\t\tlet b: number = a.left;\r\n\t\tlet c: number = a.top;\r\n\t\tif (this.cr == 1) {\r\n\t\t\tif (this.v1.width > this.x7.width) {\r\n\t\t\t\tb = 0.5 - (this.v1.width / 2);\r\n\t\t\t} else if (b + a.width > this.x7.right) {\r\n\t\t\t\tb = this.x7.right - this.v1.width;\r\n\t\t\t} else if (b < this.x7.left) {\r\n\t\t\t\tb = this.x7.left;\r\n\t\t\t}\r\n\t\t\tif (this.v1.height > this.x7.height) {\r\n\t\t\t\tc = 0.5 - (this.v1.height / 2);\r\n\t\t\t} else if (c + this.v1.height > this.x7.bottom) {\r\n\t\t\t\tc = this.x7.bottom - this.v1.height;\r\n\t\t\t} else if (c < this.x7.top) {\r\n\t\t\t\tc = this.x7.top;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet d: boolean = false;\r\n\t\tif (!this.wp && this.cr == 2 && this.wm) {\r\n\t\t\tif (b > 1) {\r\n\t\t\t\tb = (b - Math.floor(b)) + 1;\r\n\t\t\t}\r\n\t\t\tif (b < 0) {\r\n\t\t\t\tb = 0 - (Math.ceil(b) - b);\r\n\t\t\t}\r\n\t\t\tif ((a.right - this.x7.right) > 0 && ((a.right - this.x7.right) / a.width) > 0.8) {\r\n\t\t\t\tb = this.x7.left - (a.width - (a.right - this.x7.right));\r\n\t\t\t\td = true;\r\n\t\t\t} else if (a.left < this.x7.left && (Math.abs(a.left - this.x7.left) / a.width) > 0.8) {\r\n\t\t\t\tb = this.x7.right - (Math.abs(a.left - this.x7.left));\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet e = new Rect(0, b, c, a.width, a.height);\r\n\t\tif (this.wp) {\r\n\t\t\tlet f = this.ya(this.yl, 1);\r\n\t\t\tf = this.yc(f);\r\n\t\t\tlet g = e.left + e.width / 2;\r\n\t\t\tlet h = e.top + e.height / 2;\r\n\t\t\tif (e.width > f.width) {\r\n\t\t\t\tlet i = e.height / e.width;\r\n\t\t\t\tlet j = f.width;\r\n\t\t\t\tlet k = i * j;\r\n\t\t\t\te = new Rect(0, g - j / 2, h - k / 2, j, k);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.height > f.height) {\r\n\t\t\t\tlet l = e.width / e.height;\r\n\t\t\t\tlet m = f.height;\r\n\t\t\t\tlet n = l * m;\r\n\t\t\t\te = new Rect(0, g - n / 2, h - m / 2, n, m);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.left < f.left) {\r\n\t\t\t\te = new Rect(0, f.left, e.top, e.width, e.height);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.top < f.top) {\r\n\t\t\t\te = new Rect(0, e.left, f.top, e.width, e.height);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.right > f.right) {\r\n\t\t\t\te = new Rect(0, f.right - e.width, e.top, e.width, e.height);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.bottom > f.bottom) {\r\n\t\t\t\te = new Rect(0, e.left, f.bottom - e.height, e.width, e.height);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (d) {\r\n\t\t\tthis.ew = true;\r\n\t\t\tthis.v1 = e;\r\n\t\t\tthis.ew = false;\r\n\t\t}\r\n\t\treturn e;\r\n\t}\r\n\tmt(a: Rect, b: ScalerParams): Tuple$2<boolean, number> {\r\n\t\tlet c: boolean = true;\r\n\t\tlet d: boolean = true;\r\n\t\tlet e: number = 0;\r\n\t\tlet f = this.vw();\r\n\t\tlet g: number = 0;\r\n\t\tlet h: number = 0;\r\n\t\tif ((a.right - f.right) > 0) {\r\n\t\t\tg = ((a.right - f.right) / a.width);\r\n\t\t}\r\n\t\tif (a.left < f.left) {\r\n\t\t\th = (Math.abs(a.left - f.left) / a.width);\r\n\t\t}\r\n\t\tif (h == 0 && g == 0) {\r\n\t\t\tc = false;\r\n\t\t}\r\n\t\tif (h > g) {\r\n\t\t\td = false;\r\n\t\t}\r\n\t\tif (c) {\r\n\t\t\tif (d) {\r\n\t\t\t\tlet i = this.v7.ek(-180, b);\r\n\t\t\t\tlet j = this.v7.ek(180, b);\r\n\t\t\t\te = j - i;\r\n\t\t\t} else {\r\n\t\t\t\tlet k = this.v7.ek(-180, b);\r\n\t\t\t\tlet l = this.v7.ek(180, b);\r\n\t\t\t\te = k - l;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn new Tuple$2<boolean, number>(Boolean_$type, Number_$type, c, e);\r\n\t}\r\n\tvw(): Rect {\r\n\t\tlet a: ScalerParams = new ScalerParams(1, XamGeographicMap.x8, this.v0, this.v8.ch);\r\n\t\ta.c = this.vp;\r\n\t\tlet b: ScalerParams = new ScalerParams(1, XamGeographicMap.x8, this.v0, this.wa.ch);\r\n\t\tb.c = this.vp;\r\n\t\tlet c: number = this.v8.ek(XamGeographicMap.x5.left, a);\r\n\t\tlet d: number = this.v8.ek(XamGeographicMap.x5.right, a);\r\n\t\tlet e: number = this.wa.ek(XamGeographicMap.x5.top, b);\r\n\t\tlet f: number = this.wa.ek(XamGeographicMap.x5.bottom, b);\r\n\t\tthis.x7 = new Rect(0, c / this.v0.width, f / this.v0.height, (d - c) / this.v0.width, (e - f) / this.v0.height);\r\n\t\treturn this.x7;\r\n\t}\r\n\tprivate yc(a: Rect): Rect {\r\n\t\tlet b: number = this.hf;\r\n\t\tlet c: number = 0.5 * (a.left + a.right);\r\n\t\tlet d: number = 0.5 * (a.top + a.bottom);\r\n\t\tlet e: number = a.width;\r\n\t\tlet f: number = a.height;\r\n\t\tlet g: number = MathUtil.d(a.width, b, 1);\r\n\t\tlet h: number = MathUtil.d(a.height, b, 1);\r\n\t\tlet i: Rect = this.v0;\r\n\t\tlet j: number = i.width / i.height;\r\n\t\tlet k: number = g * i.width;\r\n\t\tlet l: number = h * i.height;\r\n\t\tlet m: number = k / l;\r\n\t\tif (m != j) {\r\n\t\t\tif (l * j > k) {\r\n\t\t\t\tk = l * j;\r\n\t\t\t\tg = k / i.width;\r\n\t\t\t} else {\r\n\t\t\t\tl = k / j;\r\n\t\t\t\th = l / i.height;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet n: boolean = g != e;\r\n\t\tlet o: boolean = h != f;\r\n\t\tlet p: number = n ? c - 0.5 * g : a.left;\r\n\t\tlet q: number = o ? d - 0.5 * h : a.top;\r\n\t\tlet r: number = n ? c + 0.5 * g : a.right;\r\n\t\tlet s: number = o ? d + 0.5 * h : a.bottom;\r\n\t\tif (p < 0) {\r\n\t\t\tp = 0;\r\n\t\t\tr = p + g;\r\n\t\t}\r\n\t\tif (r > 1) {\r\n\t\t\tr = 1;\r\n\t\t\tp = r - g;\r\n\t\t}\r\n\t\tif (q < 0) {\r\n\t\t\tq = 0;\r\n\t\t\ts = q + h;\r\n\t\t}\r\n\t\tif (s > 1) {\r\n\t\t\ts = 1;\r\n\t\t\tq = s - h;\r\n\t\t}\r\n\t\treturn new Rect(0, p, q, r - p, s - q);\r\n\t}\r\n\tprotected vn(a: Rect): Rect {\r\n\t\tsuper.vn(this.v0);\r\n\t\tif (a.isEmpty) {\r\n\t\t\treturn Rect.empty;\r\n\t\t}\r\n\t\tlet b: Rect;\r\n\t\tif (a.width > a.height) {\r\n\t\t\tlet c: number = intDivide(<number>truncate((a.width - a.height)), 2);\r\n\t\t\tb = new Rect(0, a.left + c, a.top, a.height, a.height);\r\n\t\t} else {\r\n\t\t\tlet d: number = intDivide(<number>truncate((a.height - a.width)), 2);\r\n\t\t\tb = new Rect(0, a.left, a.top + d, a.width, a.width);\r\n\t\t}\r\n\t\treturn b;\r\n\t}\r\n\tye(a: Rect): Rect {\r\n\t\treturn this.vn(a);\r\n\t}\r\n\tprotected c7(): SeriesViewerView {\r\n\t\treturn new XamGeographicMapView(this);\r\n\t}\r\n\tprivate xe(a: Axis): void {\r\n\t\tif (a != null) {\r\n\t\t\ta.bi = this;\r\n\t\t}\r\n\t}\r\n\tprotected pr(a: SeriesViewerView): void {\r\n\t\tsuper.pr(a);\r\n\t\tthis.wk = <XamGeographicMapView>a;\r\n\t}\r\n\tp2(a: Rect, b: Rect): void {\r\n\t\tsuper.p2(a, b);\r\n\t\tthis.q7(this.v8);\r\n\t\tthis.q7(this.wa);\r\n\t\tif (Rect.l_op_Inequality(a, b)) {\r\n\t\t\tthis.xj();\r\n\t\t}\r\n\t\tif (this.wp) {\r\n\t\t\tthis.vl = this.vm();\r\n\t\t}\r\n\t\tthis.xq();\r\n\t}\r\n\twv: number;\r\n\tprivate ws: number = 1;\r\n\tget wu(): number {\r\n\t\treturn this.ws;\r\n\t}\r\n\tset wu(a: number) {\r\n\t\tlet b = this.ws;\r\n\t\tthis.ws = a;\r\n\t\tthis.p8(\"ActualWindowScale\", b, this.ws);\r\n\t}\r\n\thl(): number {\r\n\t\treturn this.wu;\r\n\t}\r\n\thm(): number {\r\n\t\treturn this.wu;\r\n\t}\r\n\tprotected q6(): void {\r\n\t\tsuper.q6();\r\n\t\tlet a = Math.min(this.vl.width, this.vl.height);\r\n\t\tthis.wu = a;\r\n\t}\r\n\tfz(): boolean {\r\n\t\treturn this.wm;\r\n\t}\r\n\tcs(): ZoomCoercionMode {\r\n\t\tif (this.ct == 0) {\r\n\t\t\tif (this.wn) {\r\n\t\t\t\treturn 2;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.ct;\r\n\t}\r\n\tprotected p3(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.p3(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"ZoomCoercionMode\":\r\n\t\t\tthis.xf();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"WindowRect\":\r\n\t\t\tthis.xn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[0]:\r\n\t\t\tthis.wg = this.wh();\r\n\t\t\tif (this.wd != null) {\r\n\t\t\t\tthis.wd.isHorizontalWrappingEnabled = this.wg == 2;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[1]:\r\n\t\t\tthis.wm = this.wn;\r\n\t\t\tthis.wg = this.wh();\r\n\t\t\tthis.cr = this.cs();\r\n\t\t\tif (this.wd != null) {\r\n\t\t\t\tthis.wd.isHorizontalWrappingEnabled = this.wg == 2;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[4]:\r\n\t\t\tthis.vl = this.vm();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"BackgroundContent\":\r\n\t\t\tif (this.wd != null) {\r\n\t\t\t\tlet e = this.wd;\r\n\t\t\t\te.imageTilesReady = delegateRemove(e.imageTilesReady, runOn(this, this.xg));\r\n\t\t\t\tthis.wd.deferralHandler = null;\r\n\t\t\t}\r\n\t\t\tthis.wd = typeCast<GeographicMapImagery>((<any>GeographicMapImagery).$, this.backgroundContent);\r\n\t\t\tif (this.wd != null) {\r\n\t\t\t\tlet f = this.wd;\r\n\t\t\t\tf.imageTilesReady = delegateCombine(f.imageTilesReady, runOn(this, this.xg));\r\n\t\t\t\tthis.wd.deferralHandler = this;\r\n\t\t\t\tthis.wd.isHorizontalWrappingEnabled = this.wg == 2;\r\n\t\t\t}\r\n\t\t\tthis.wk.fu(typeCast<GeographicMapImagery>((<any>GeographicMapImagery).$, c), typeCast<GeographicMapImagery>((<any>GeographicMapImagery).$, d));\r\n\t\t\tif (this.wd != null) {\r\n\t\t\t\tthis.wd.geographicMap = this;\r\n\t\t\t\tthis.wk.fr(this.vl);\r\n\t\t\t\tthis.wk.fv(this.hb);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"YAxis\":\r\n\r\n\t\t\tcase \"XAxis\":\r\n\t\t\tthis.xl(<Axis>c);\r\n\t\t\tthis.xe(<Axis>d);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[6]:\r\n\t\t\tif (!this.wo) {\r\n\t\t\t\tthis.v1 = XamGeographicMap.x8;\r\n\t\t\t}\r\n\t\t\tthis.xf();\r\n\t\t\tthis.xm();\r\n\t\t\tthis.xn();\r\n\t\t\tthis.vl = this.vm();\r\n\t\t\tthis.wk.fs();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualWindowRect\":\r\n\t\t\tthis.wk.fr(this.vl);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualWorldRect\":\r\n\t\t\tfor (let g of fromEnum<Series>(this.series)) {\r\n\t\t\t\tg.rn(false);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[5]:\r\n\t\t\tthis.wu = this.wv;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualWindowScale\":\r\n\t\t\tif (!this.f6) {\r\n\t\t\t\tthis.rh(this.hl(), this.hm());\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualPixelScalingRatio\":\r\n\t\t\tthis.wk.fv(this.hb);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"WindowRectMinWidth\":\r\n\r\n\t\t\tcase \"WindowRectMinHeight\":\r\n\t\t\tlet h = <number>d;\r\n\t\t\tif (isNaN_(h) || isInfinity(h)) {\r\n\t\t\t\tthis.hf = 5E-06;\r\n\t\t\t\tthis.he = 5E-06;\r\n\t\t\t} else {\r\n\t\t\t\tthis.hf = h;\r\n\t\t\t\tthis.he = h;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[7]:\r\n\t\t\tthis.rd();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"MarkerAutomaticBehavior\":\r\n\t\t\tfor (let i of fromEnum<Series>(this.series)) {\r\n\t\t\t\ti.qc();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\timageTilesReady: (sender: any, e: ImageTilesReadyEventArgs) => void = null;\r\n\tprivate xg(a: any, b: EventArgs): void {\r\n\t\tif (this.imageTilesReady != null) {\r\n\t\t\tthis.imageTilesReady(this, new ImageTilesReadyEventArgs());\r\n\t\t}\r\n\t}\r\n\tprivate xl(a: Axis): void {\r\n\t\tif (a != null) {\r\n\t\t\ta.bi = null;\r\n\t\t}\r\n\t}\r\n\tprivate xm(): void {\r\n\t\tif (this.v8 != null) {\r\n\t\t\tthis.v8.l6 = this.x9.left;\r\n\t\t\tthis.v8.l5 = this.x9.right;\r\n\t\t}\r\n\t\tif (this.wa != null) {\r\n\t\t\tthis.wa.l6 = this.x9.top;\r\n\t\t\tthis.wa.l5 = this.x9.bottom;\r\n\t\t}\r\n\t\tthis.v8.c2(true);\r\n\t\tthis.wa.c2(true);\r\n\t}\r\n\twk: XamGeographicMapView;\r\n\tprivate wl: FontInfo = null;\r\n\tgetFontInfo(): FontInfo {\r\n\t\tthis.wl = this.wk.fo;\r\n\t\treturn this.wl;\r\n\t}\r\n\tup(): Brush {\r\n\t\treturn this.wk.fw;\r\n\t}\r\n\tgetFontBrush(): Brush {\r\n\t\treturn this.wk.fx;\r\n\t}\r\n\tprotected qz(a: Series, b: any): void {\r\n\t\tif (typeCast<ItfConverter>((<any>ItfConverter).$, b) !== null) {\r\n\t\t\tlet c = (<ItfConverter>b);\r\n\t\t\tlet d = (<GeographicScatterAreaSeries>a);\r\n\t\t\td.itemsSource = c.triangulationSource.points;\r\n\t\t\td.w1 = c.triangulationSource.triangles;\r\n\t\t} else {\r\n\t\t\tsuper.qz(a, b);\r\n\t\t}\r\n\t}\r\n\tregister(a: DependencyObject, b: (arg1: boolean) => void): void {\r\n\t\tthis.qn(a, b);\r\n\t}\r\n\tunRegister(a: DependencyObject): void {\r\n\t\tthis.q5(a);\r\n\t}\r\n\tdeferredRefresh(): void {\r\n\t\tthis.m6();\r\n\t}\r\n\tdeferAction(a: () => void): void {\r\n\t\tif (this.wx != null) {\r\n\t\t\tthis.wx.setTimeout(<() => void>a, 0);\r\n\t\t} else {\r\n\t\t\twindow.setTimeout(<() => void>a, 0);\r\n\t\t}\r\n\t}\r\n\txd(a: boolean): void {\r\n\t\tthis.rc(a);\r\n\t}\r\n\twy(): any {\r\n\t\tlet a = new ChartVisualData();\r\n\t\tlet b = this.v8.fx();\r\n\t\tlet c = this.wa.fx();\r\n\t\ta.axes.add1(b);\r\n\t\ta.axes.add1(c);\r\n\t\tfor (let d = 0; d < this.series.count; d++) {\r\n\t\t\tlet e = this.series._inner[d].kk();\r\n\t\t\ta.series.add1(e);\r\n\t\t}\r\n\t\ta.name = this.name;\r\n\t\ta.contentArea = RectData.b(this.v0);\r\n\t\ta.centralArea = RectData.b(this.v0);\r\n\t\ta.plotArea = RectData.b(this.v0);\r\n\t\treturn a;\r\n\t}\r\n\tvs(a: Rect, b: Rect, c: Rect): Rect {\r\n\t\treturn a;\r\n\t}\r\n\txh(): void {\r\n\t}\r\n\tprivate x6: Rect = Rect.empty;\r\n\tprotected get yk(): Rect {\r\n\t\treturn this.x6;\r\n\t}\r\n\tprotected set yk(a: Rect) {\r\n\t\tthis.x6 = a;\r\n\t}\r\n\txr(a: Rect): void {\r\n\t\tthis.yk = a;\r\n\t\tthis.xq();\r\n\t}\r\n\tprivate xq(): void {\r\n\t\tif (this.wr && !this.yk.isEmpty) {\r\n\t\t\tlet a = this.getZoomFromGeographicRect(this.yk);\r\n\t\t\tthis.yk = Rect.empty;\r\n\t\t\tthis.rj(a, false);\r\n\t\t}\r\n\t}\r\n\tget wr(): boolean {\r\n\t\treturn !this.v0.isEmpty && !this.vp.isEmpty;\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, XamGeographicMap, 'p8', [ 'BackgroundTilingMode:wf:xs', [ MapBackgroundTilingMode_$type, enumGetBox<MapBackgroundTilingMode>(MapBackgroundTilingMode_$type, 0) ], 'IsHorizontalWrappingEnabled:wn:xt', [ 0, false ], 'ResizeBehavior:wj:xu', [ MapResizeBehavior_$type, enumGetBox<MapResizeBehavior>(MapResizeBehavior_$type, XamGeographicMap.wi) ], 'SuppressZoomResetOnWorldRectChange:wo:xv', [ 0, false ], 'UseWorldRectForZoomBounds:wp:xw', [ 0, false ], 'WindowScale:wv:xx', [ 1, NaN ], 'WorldRect:yl:xy', [ (<any>Rect).$, XamGeographicMap.x5 ], 'Zoomable:wq:xz', [ 0, true ] ]);\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicMapImagery extends Control implements INotifyPropertyChanged {\r\n\tstatic $t: Type = markType(GeographicMapImagery, 'GeographicMapImagery', (<any>Control).$, [INotifyPropertyChanged_$type]);\r\n\tconstructor(a: XamMultiScaleTileSource) {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicMapImagery).$;\r\n\t\tthis.ap = a;\r\n\t\tthis.aj = this.ai();\r\n\t\tthis.bb(this.aj);\r\n\t}\r\n\tprotected bb(a: GeographicMapImageryView): void {\r\n\t}\r\n\tprotected ai(): GeographicMapImageryView {\r\n\t\treturn new GeographicMapImageryView(this);\r\n\t}\r\n\tprotected aj: GeographicMapImageryView;\r\n\tprivate ak: IMapRenderDeferralHandler = null;\r\n\tget deferralHandler(): IMapRenderDeferralHandler {\r\n\t\treturn this.ak;\r\n\t}\r\n\tset deferralHandler(a: IMapRenderDeferralHandler) {\r\n\t\tthis.ak = a;\r\n\t\tif (this.ao != null) {\r\n\t\t\tthis.ao.al = a;\r\n\t\t}\r\n\t}\r\n\tprivate a5(a: any, b: EventArgs): void {\r\n\t\tif (this.imageTilesReady != null) {\r\n\t\t\tthis.imageTilesReady(this, new ImageTilesReadyEventArgs());\r\n\t\t}\r\n\t}\r\n\ta9(): void {\r\n\t\tlet a = this.ao;\r\n\t\ta.imageTilesReady = delegateCombine(a.imageTilesReady, runOn(this, this.a5));\r\n\t\tthis.ao.al = this.deferralHandler;\r\n\t\tlet b = this.ao;\r\n\t\tb.imagesChanged = delegateCombine(b.imagesChanged, runOn(this, this.a4));\r\n\t\tlet c = this.ao;\r\n\t\tc.downloadingImage = delegateCombine(c.downloadingImage, runOn(this, this.a3));\r\n\t\tlet d = this.ao;\r\n\t\td.cancellingImage = delegateCombine(d.cancellingImage, runOn(this, this.a2));\r\n\t\tthis.ao.bf = this.referer;\r\n\t\tthis.ao.bj = this.userAgent;\r\n\t\tthis.ao.av = this.isHorizontalWrappingEnabled;\r\n\t}\r\n\tprivate a3(a: any, b: DownloadingMultiScaleImageEventArgs): void {\r\n\t\tif (this.downloadingImage != null) {\r\n\t\t\tthis.downloadingImage(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate a2(a: any, b: CancellingMultiScaleImageEventArgs): void {\r\n\t\tif (this.cancellingImage != null) {\r\n\t\t\tthis.cancellingImage(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate bg(): void {\r\n\t\tif (this.ao != null) {\r\n\t\t\tthis.aj.e();\r\n\t\t}\r\n\t}\r\n\tprotected ba(a: string, b: any, c: any): void {\r\n\t\tswitch (a) {\r\n\t\t\tcase GeographicMapImagery.$$p[3]:\r\n\t\t\tthis.bg();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"GeographicMap\":\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMapImagery.$$p[1]:\r\n\t\t\tif (this.ao != null) {\r\n\t\t\t\tthis.ao.bf = this.referer;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMapImagery.$$p[2]:\r\n\t\t\tif (this.ao != null) {\r\n\t\t\t\tthis.ao.bj = this.userAgent;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMapImagery.$$p[0]:\r\n\t\t\tif (this.ao != null) {\r\n\t\t\t\tthis.ao.av = this.isHorizontalWrappingEnabled;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tif (this.propertyChanged != null) {\r\n\t\t\tthis.propertyChanged(this, new PropertyChangedEventArgs(a));\r\n\t\t}\r\n\t}\r\n\twindowRect: Rect;\r\n\tget geographicMap(): XamGeographicMap {\r\n\t\treturn <XamGeographicMap>this.c(GeographicMapImagery.geographicMapProperty);\r\n\t}\r\n\tset geographicMap(a: XamGeographicMap) {\r\n\t\tthis.h(GeographicMapImagery.geographicMapProperty, a);\r\n\t}\r\n\tstatic readonly geographicMapProperty: DependencyProperty = DependencyProperty.i(\"GeographicMap\", (<any>XamGeographicMap).$, (<any>GeographicMapImagery).$, new PropertyMetadata(2, null, GeographicMapImagery.a8));\r\n\tprivate static a8(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<GeographicMapImagery>a).a7(<XamGeographicMap>b.oldValue, <XamGeographicMap>b.newValue);\r\n\t}\r\n\tprivate a7(a: XamGeographicMap, b: XamGeographicMap): void {\r\n\t\tthis.ba(\"GeographicMap\", a, b);\r\n\t}\r\n\tclearTileCache(): void {\r\n\t\tif (this.ao != null) {\r\n\t\t\tthis.ao.bs(0, 0, 0, 0);\r\n\t\t}\r\n\t}\r\n\timageTilesReady: (sender: any, e: ImageTilesReadyEventArgs) => void = null;\r\n\tprivate an: XamMultiScaleImage = null;\r\n\tget ao(): XamMultiScaleImage {\r\n\t\treturn this.an;\r\n\t}\r\n\tset ao(a: XamMultiScaleImage) {\r\n\t\tthis.an = a;\r\n\t\tif (this.propertyChanged != null) {\r\n\t\t\tthis.propertyChanged(this, new PropertyChangedEventArgs(\"MultiScaleImage\"));\r\n\t\t}\r\n\t}\r\n\tap: XamMultiScaleTileSource = null;\r\n\tpropertyChanged: (sender: any, e: PropertyChangedEventArgs) => void = null;\r\n\tbn(a: Size): Size {\r\n\t\tif (this.geographicMap == null || a.width < 1 || a.height < 1) {\r\n\t\t\treturn a;\r\n\t\t}\r\n\t\tlet b = new Rect(0, 0, 0, a.width, a.height);\r\n\t\tlet c = this.geographicMap.ye(b);\r\n\t\tlet d: Rect = XamGeographicMap.x5;\r\n\t\tlet e: Rect = this.geographicMap.x9;\r\n\t\tlet f: number = Math.min(this.windowRect.height, this.windowRect.width);\r\n\t\tlet g: number = e.width / d.width;\r\n\t\tthis.ao.a5 = (b.width / c.width) * f * g;\r\n\t\tlet h: NumericXAxis = this.geographicMap.v8;\r\n\t\tlet i: NumericYAxis = this.geographicMap.wa;\r\n\t\tlet j: ScalerParams = new ScalerParams(1, this.windowRect, b, h.ch);\r\n\t\tj.c = c;\r\n\t\tlet k: ScalerParams = new ScalerParams(1, this.windowRect, b, i.ch);\r\n\t\tk.c = c;\r\n\t\tlet l: number = h.ek(d.left, j);\r\n\t\tlet m: number = i.ek(d.bottom, k);\r\n\t\tlet n: number = (-l / b.width) * this.ao.a5;\r\n\t\tlet o: number = (-m / b.height) * this.ao.a5 * (b.height / b.width);\r\n\t\tthis.ao.cm = <Point>{ $type: Point_$type, x: n, y: o };\r\n\t\treturn a;\r\n\t}\r\n\tbd(a: RenderingContext): void {\r\n\t\tthis.aj.f(a);\r\n\t}\r\n\tbf(a: Rect): void {\r\n\t\tthis.aj.h(a);\r\n\t}\r\n\tbe(a: DomRenderer): void {\r\n\t\tthis.aj.g(a);\r\n\t}\r\n\timagesChanged: (sender: any, e: ImagesChangedEventArgs) => void = null;\r\n\tprivate a4(a: any, b: EventArgs): void {\r\n\t\tif (this.imagesChanged != null) {\r\n\t\t\tthis.imagesChanged(this, new ImagesChangedEventArgs());\r\n\t\t}\r\n\t}\r\n\ta6(): void {\r\n\t\tthis.aj.e();\r\n\t}\r\n\tbc(a: number): void {\r\n\t\tthis.aj.i(a);\r\n\t}\r\n\tprotected v(): void {\r\n\t\tsuper.v();\r\n\t\tthis.ap.o = this._opacity;\r\n\t}\r\n\tcancellingImage: (sender: any, args: CancellingMultiScaleImageEventArgs) => void = null;\r\n\tdownloadingImage: (sender: any, args: DownloadingMultiScaleImageEventArgs) => void = null;\r\n\treferer: string;\r\n\tisHorizontalWrappingEnabled: boolean;\r\n\tuserAgent: string;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicMapImagery, 'ba', [ 'IsHorizontalWrappingEnabled', [ 0, false ], 'Referer', [ 2, null ], 'UserAgent', [ 2, null ], 'WindowRect', [ (<any>Rect).$, Rect.empty ] ]);\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicMapImageryView extends Base {\r\n\tstatic $t: Type = markType(GeographicMapImageryView, 'GeographicMapImageryView');\r\n\tconstructor(a: GeographicMapImagery) {\r\n\t\tsuper();\r\n\t\tthis.j = Rect.empty;\r\n\t\tthis.a = a;\r\n\t\tthis.a.ao = new XamMultiScaleImage();\r\n\t\tthis.a.ao.ao = this.a.ap;\r\n\t\tthis.a.a9();\r\n\t}\r\n\tprotected a: GeographicMapImagery = null;\r\n\te(): void {\r\n\t\tif (this.j.isEmpty) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.a.bn(new Size(1, this.j.width, this.j.height));\r\n\t}\r\n\tprotected j: Rect = null;\r\n\tf(a: RenderingContext): void {\r\n\t\tthis.a.ao.b1(a);\r\n\t}\r\n\tprivate d: DomRenderer = null;\r\n\tg(a: DomRenderer): void {\r\n\t\tthis.d = a;\r\n\t\tthis.a.ao.b2(a);\r\n\t}\r\n\th(a: Rect): void {\r\n\t\tthis.j = a;\r\n\t\tthis.a.ao.b3(a);\r\n\t\tthis.a.a6();\r\n\t}\r\n\tprivate b: number = 1;\r\n\tget c(): number {\r\n\t\treturn this.b;\r\n\t}\r\n\ti(a: number): void {\r\n\t\tthis.b = a;\r\n\t\tthis.a.ao.bz(a);\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicXYTriangulatingSeriesView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicXYTriangulatingSeriesView, 'GeographicXYTriangulatingSeriesView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicXYTriangulatingSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ch = a;\r\n\t}\r\n\tprotected ch: GeographicXYTriangulatingSeries = null;\r\n\tb5(): void {\r\n\t\tsuper.b5();\r\n\t\tlet a = <ScatterTriangulationSeries>this.ch.ws;\r\n\t\ta.xs = this.ch.w4;\r\n\t\ta.x0 = this.ch.w2;\r\n\t\ta.trianglesSource = this.ch.w1;\r\n\t\ta.xg = this.ch.w7;\r\n\t\ta.xi = this.ch.w9;\r\n\t\ta.xk = this.ch.xb;\r\n\t}\r\n\tck(): void {\r\n\t\tlet a = <ScatterTriangulationSeries>this.ch.ws;\r\n\t\tif (this.ch.c9 == null) {\r\n\t\t\ta.wq = null;\r\n\t\t\ta.wr = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.wq = (<XamGeographicMap>this.ch.c9).v8;\r\n\t\ta.wr = (<XamGeographicMap>this.ch.c9).wa;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ch.ws).xs = this.ch.w4;\r\n\t}\r\n\tci(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ch.ws).x0 = this.ch.w2;\r\n\t}\r\n\tcl(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ch.ws).trianglesSource = this.ch.w1;\r\n\t}\r\n\tcm(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ch.ws).xg = this.ch.w7;\r\n\t}\r\n\tcn(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ch.ws).xi = this.ch.w9;\r\n\t}\r\n\tco(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ch.ws).xk = this.ch.xb;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicScatterAreaSeriesView extends GeographicXYTriangulatingSeriesView {\r\n\tstatic $t: Type = markType(GeographicScatterAreaSeriesView, 'GeographicScatterAreaSeriesView', (<any>GeographicXYTriangulatingSeriesView).$);\r\n\tconstructor(a: GeographicScatterAreaSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.cp = a;\r\n\t}\r\n\tprivate cp: GeographicScatterAreaSeries = null;\r\n\tau(): void {\r\n\t\tsuper.au();\r\n\t\tif (!this.q) {\r\n\t\t}\r\n\t}\r\n\tb5(): void {\r\n\t\tsuper.b5();\r\n\t\tif (this.cp.xm != null) {\r\n\t\t\tthis.cp.xm.yz = this.cp.xq;\r\n\t\t\tthis.cp.xm.yn = this.cp.xl;\r\n\t\t}\r\n\t}\r\n\tcq(): void {\r\n\t\tif (this.cp.xm != null) {\r\n\t\t\tthis.cp.xm.yz = this.cp.xq;\r\n\t\t}\r\n\t}\r\n\tcr(): void {\r\n\t\tif (this.cp.xm != null) {\r\n\t\t\tthis.cp.xm.yn = this.cp.xl;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class XamGeographicMapView extends SeriesViewerView {\r\n\tstatic $t: Type = markType(XamGeographicMapView, 'XamGeographicMapView', (<any>SeriesViewerView).$);\r\n\tconstructor(a: XamGeographicMap) {\r\n\t\tsuper(a);\r\n\t\tthis.fz = Rect.empty;\r\n\t\tthis.fn = a;\r\n\t\tthis.fn.uj = 2;\r\n\t\tthis.fn.il = 5E-06;\r\n\t}\r\n\tm(a: boolean): InteractionState {\r\n\t\treturn 2;\r\n\t}\r\n\tbk(a: boolean): void {\r\n\t\tthis.j.bw(a);\r\n\t\tthis.fn.xd(a);\r\n\t\tthis.el();\r\n\t}\r\n\tprotected fn: XamGeographicMap = null;\r\n\tprotected get_ap(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\td4(): void {\r\n\t\tlet a: BrushCollection;\r\n\t\tlet b: BrushCollection;\r\n\t\tlet c: Brush;\r\n\t\tlet d: FontInfo;\r\n\t\tlet e: Brush;\r\n\t\tlet f = this.j.a8(a, b, c, d, e);\r\n\t\ta = f.p0;\r\n\t\tb = f.p1;\r\n\t\tc = f.p2;\r\n\t\td = f.p3;\r\n\t\te = f.p4;\r\n\t\tthis.fx = c;\r\n\t\tthis.fo = d;\r\n\t\tthis.fw = e;\r\n\t\tlet g = this.j.e();\r\n\t\tthis.fn.ag = g.a;\r\n\t\tthis.fn.aj = g.f;\r\n\t\tthis.fn.ah = g.b != null ? g.b : new BrushCollection();\r\n\t\tthis.fn.ai = g.c != null ? g.c : new BrushCollection();\r\n\t\tif (this.fn.ah.count == 0) {\r\n\t\t\tfor (let h = 0; h < g.a.count; h++) {\r\n\t\t\t\tthis.fn.ah.add(g.a.item(h));\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (g.c.count == 0) {\r\n\t\t\tfor (let i = 0; i < g.f.count; i++) {\r\n\t\t\t\tthis.fn.ai.add(g.f.item(i));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tdu(a: RenderingContext): void {\r\n\t\tsuper.du(a);\r\n\t\tif (this.fn.backgroundContent != null) {\r\n\t\t\tlet b: GeographicMapImagery = <GeographicMapImagery>this.fn.backgroundContent;\r\n\t\t\tb.be(this.j.ae);\r\n\t\t\tb.bd(a);\r\n\t\t}\r\n\t}\r\n\tprotected fz: Rect = null;\r\n\tprotected dv(a: Rect): void {\r\n\t\tsuper.dv(a);\r\n\t\tthis.fz = a;\r\n\t\tif (this.fn.backgroundContent != null) {\r\n\t\t\tlet b: GeographicMapImagery = <GeographicMapImagery>this.fn.backgroundContent;\r\n\t\t\tb.bf(this.fz);\r\n\t\t}\r\n\t}\r\n\tfy(): Rect {\r\n\t\treturn new Rect(0, 0, 0, this.fz.width, this.fz.height);\r\n\t}\r\n\tfs(): void {\r\n\t\tif (this.fn.backgroundContent != null) {\r\n\t\t\tlet a: GeographicMapImagery = <GeographicMapImagery>this.fn.backgroundContent;\r\n\t\t\ta.a6();\r\n\t\t}\r\n\t}\r\n\tfx: Brush = null;\r\n\tfw: Brush = null;\r\n\tfo: FontInfo = null;\r\n\tfr(a: Rect): void {\r\n\t\tif (this.fn.wd != null) {\r\n\t\t\tthis.fn.wd.windowRect = a;\r\n\t\t}\r\n\t}\r\n\tfu(a: GeographicMapImagery, b: GeographicMapImagery): void {\r\n\t\tif (this.fn.wd != null) {\r\n\t\t\tthis.fn.wd.windowRect = this.fn.vl;\r\n\t\t}\r\n\t\tif (a != null) {\r\n\t\t\tlet c = a.ao;\r\n\t\t\tif (c != null) {\r\n\t\t\t\tthis.fn.al.h.remove(c.ag);\r\n\t\t\t}\r\n\t\t\ta.bd(null);\r\n\t\t\ta.be(null);\r\n\t\t}\r\n\t\tif (b != null) {\r\n\t\t\tlet d = b.ao;\r\n\t\t\tif (d != null) {\r\n\t\t\t\tthis.fn.al.h.add(d.ag);\r\n\t\t\t}\r\n\t\t\tif (!this.fz.isEmpty) {\r\n\t\t\t\tthis.dv(this.fz);\r\n\t\t\t}\r\n\t\t\tif (this.w != null) {\r\n\t\t\t\tthis.du(this.w);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (b == null) {\r\n\t\t\tthis.ft(this.w);\r\n\t\t}\r\n\t}\r\n\tprivate ft(a: RenderingContext): void {\r\n\t\tlet b = this.fn.hb;\r\n\t\tif (b != 1) {\r\n\t\t\ta.aa();\r\n\t\t\ta.ab(b, b);\r\n\t\t}\r\n\t\ta.l(this.fz.left, this.fz.top, this.fz.width, this.fz.height);\r\n\t\tif (b != 1) {\r\n\t\t\ta.z();\r\n\t\t}\r\n\t}\r\n\tprotected d1(): void {\r\n\t\tthis.fd.ad = Defaults.j;\r\n\t\tthis.fe.ad = Defaults.j;\r\n\t\tthis.fd._stroke = Defaults.ae;\r\n\t\tthis.fe._stroke = Defaults.ae;\r\n\t\tsuper.d1();\r\n\t}\r\n\tfv(a: number): void {\r\n\t\tthis.fp = a;\r\n\t\tif (this.fn.backgroundContent != null) {\r\n\t\t\t(<GeographicMapImagery>this.fn.backgroundContent).bc(a);\r\n\t\t}\r\n\t}\r\n\tprivate fp: number = NaN;\r\n\tget fq(): number {\r\n\t\treturn this.fp;\r\n\t}\r\n\tset fq(a: number) {\r\n\t\tthis.fp = a;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class OpenStreetMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(OpenStreetMapImagery, 'OpenStreetMapImagery', (<any>GeographicMapImagery).$);\r\n\tconstructor() {\r\n\t\tsuper(new OpenStreetMapTileSource());\r\n\t}\r\n\tget tilePath(): string {\r\n\t\treturn <string>this.c(OpenStreetMapImagery.tilePathProperty);\r\n\t}\r\n\tset tilePath(a: string) {\r\n\t\tthis.h(OpenStreetMapImagery.tilePathProperty, a);\r\n\t}\r\n\tstatic readonly tilePathProperty: DependencyProperty = DependencyProperty.i(\"TilePath\", String_$type, (<any>OpenStreetMapImagery).$, new PropertyMetadata(2, null, OpenStreetMapImagery.br));\r\n\tprivate static br(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<OpenStreetMapImagery>a).bq(\"TilePath\", b.oldValue, b.newValue);\r\n\t}\r\n\tprivate bq(a: string, b: any, c: any): void {\r\n\t\tswitch (a) {\r\n\t\t\tcase \"TilePath\":\r\n\t\t\t(<OpenStreetMapTileSource>this.ap).setTilePathUrl(c == null ? null : <string>c);\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tsuper.ba(a, b, c);\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicXYTriangulatingSeries extends GeographicMapSeriesHost {\r\n\tstatic $t: Type = markType(GeographicXYTriangulatingSeries, 'GeographicXYTriangulatingSeries', (<any>GeographicMapSeriesHost).$);\r\n\tprotected cq(): SeriesView {\r\n\t\treturn new GeographicXYTriangulatingSeriesView(this);\r\n\t}\r\n\tqx(a: SeriesView): void {\r\n\t\tsuper.qx(a);\r\n\t\tthis.w0 = <GeographicXYTriangulatingSeriesView>a;\r\n\t}\r\n\tw0: GeographicXYTriangulatingSeriesView;\r\n\tw4: string;\r\n\tw2: string;\r\n\tw1: IEnumerable;\r\n\tw7: string;\r\n\tw9: string;\r\n\txb: string;\r\n\tprotected q5(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.q5(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.w0.ck();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[1]:\r\n\t\t\tthis.w0.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[0]:\r\n\t\t\tthis.w0.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[5]:\r\n\t\t\tthis.w0.cl();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[2]:\r\n\t\t\tthis.w0.cm();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[3]:\r\n\t\t\tthis.w0.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[4]:\r\n\t\t\tthis.w0.co();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicXYTriangulatingSeries, 'raisePropertyChanged', [ 'LatitudeMemberPath:w2:xd', [ 2, \"pointY\" ], 'LongitudeMemberPath:w4:xe', [ 2, \"pointX\" ], 'TriangleVertexMemberPath1:w7:xg', [ 2, \"v1\" ], 'TriangleVertexMemberPath2:w9:xh', [ 2, \"v2\" ], 'TriangleVertexMemberPath3:xb:xi', [ 2, \"v3\" ], 'TrianglesSource:w1:xf', [ IEnumerable_$type, null ] ]);\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicScatterAreaSeries extends GeographicXYTriangulatingSeries {\r\n\tstatic $t: Type = markType(GeographicScatterAreaSeries, 'GeographicScatterAreaSeries', (<any>GeographicXYTriangulatingSeries).$);\r\n\tprotected bi(): Series {\r\n\t\treturn new GeographicScatterAreaSeries();\r\n\t}\r\n\tprotected get_es(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicScatterAreaSeries).$;\r\n\t}\r\n\txq: string;\r\n\tprivate xj: ColorScale = null;\r\n\tget xl(): ColorScale {\r\n\t\treturn this.xj;\r\n\t}\r\n\tset xl(a: ColorScale) {\r\n\t\tlet b: boolean = this.xj != a;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.xj;\r\n\t\t\tif (this.xj != null) {\r\n\t\t\t\tlet d = this.xj;\r\n\t\t\t\td.propertyChanged = delegateRemove(d.propertyChanged, runOn(this, this.xt));\r\n\t\t\t}\r\n\t\t\tthis.xj = a;\r\n\t\t\tif (this.xj != null) {\r\n\t\t\t\tlet e = this.xj;\r\n\t\t\t\te.propertyChanged = delegateCombine(e.propertyChanged, runOn(this, this.xt));\r\n\t\t\t}\r\n\t\t\tthis.raisePropertyChanged(\"ColorScale\", c, this.xj);\r\n\t\t\tif (this.xm != null) {\r\n\t\t\t\tthis.xm.yn = a;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate xt(a: any, b: PropertyChangedEventArgs): void {\r\n\t\tthis.xo.cr();\r\n\t\tthis.xv();\r\n\t\tthis.rn(false);\r\n\t}\r\n\txv(): void {\r\n\t\tif (this.xm != null) {\r\n\t\t\tthis.xk = this.xm.ym;\r\n\t\t}\r\n\t}\r\n\txk: ColorScale;\r\n\tprotected sb(): void {\r\n\t\tsuper.sb();\r\n\t\tthis.xv();\r\n\t}\r\n\txm: ScatterAreaSeries;\r\n\tprotected wr(): Series {\r\n\t\tthis.xm = new ScatterAreaSeries();\r\n\t\tlet a = this.xm;\r\n\t\ta.triangulationStatusChanged = delegateCombine(a.triangulationStatusChanged, runOn(this, this.xu));\r\n\t\treturn this.xm;\r\n\t}\r\n\tprivate xu(a: any, b: TriangulationStatusEventArgs): void {\r\n\t\tif (this.triangulationStatusChanged != null) {\r\n\t\t\tthis.triangulationStatusChanged(this, b);\r\n\t\t}\r\n\t}\r\n\tprotected cq(): SeriesView {\r\n\t\treturn new GeographicScatterAreaSeriesView(this);\r\n\t}\r\n\tqx(a: SeriesView): void {\r\n\t\tsuper.qx(a);\r\n\t\tthis.xo = <GeographicScatterAreaSeriesView>a;\r\n\t}\r\n\txo: GeographicScatterAreaSeriesView;\r\n\tprotected q5(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.q5(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicScatterAreaSeries.$$p[1]:\r\n\t\t\tthis.xo.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ColorScale\":\r\n\t\t\tthis.xo.cr();\r\n\t\t\tthis.xv();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\ttriangulationStatusChanged: (sender: any, args: TriangulationStatusEventArgs) => void = null;\r\n\tprotected get_g5(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected set_g5(a: boolean): void {\r\n\t\tsuper.set_g5(a);\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicScatterAreaSeries, 'raisePropertyChanged', [ 'ActualColorScale:xk:xw', [ (<any>ColorScale).$, null ], 'ColorMemberPath:xq:xx', [ 2, \"value\" ] ]);\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\n/**\r\n * Describes available map styles for the Bing Maps imagery.\r\n */\r\nexport enum BingMapsImageryStyle {\r\n\t/**\r\n\t * Specifies the Aerial map style without road or labels overlay.\r\n\t */\r\n\tAerial = 0,\r\n\t/**\r\n\t * Specifies the Aerial map style with road and labels overlay.\r\n\t */\r\n\tAerialWithLabels = 1,\r\n\t/**\r\n\t * Specifies the Roads map style without aerial overlay.\r\n\t */\r\n\tRoad = 2,\r\n\t/**\r\n\t * Specifies a dark version of the Roads maps.\r\n\t */\r\n\tCanvasDark = 3,\r\n\t/**\r\n\t * Specifies a lighter version of the Roads maps.\r\n\t */\r\n\tCanvasLight = 4,\r\n\t/**\r\n\t * Specifies a grayscale version of the Roads maps.\r\n\t */\r\n\tCanvasGray = 5\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let BingMapsImageryStyle_$type = markEnum('BingMapsImageryStyle', 'Aerial,0|AerialWithLabels,1|Road,2|CanvasDark,3|CanvasLight,4|CanvasGray,5');\r\n\r\n\r\n","import { IgCollection } from 'igniteui-core/IgCollection';\r\nimport { SyncableObservableCollection$2 } from 'igniteui-core/SyncableObservableCollection$2';\r\nimport { SyncableObservableCollection$1 } from 'igniteui-core/SyncableObservableCollection$1';\r\nimport { markType } from 'igniteui-core/type';\r\n\r\n\r\nimport { String_$type } from 'igniteui-core/type';\r\n\r\n\r\nexport class IgcSubDomainsCollection extends IgCollection<string, string> {\r\n    constructor(list?: string[]) {\r\n        super();\r\n        \r\n   \r\n        if (list) {\r\n            for (let i = 0; i < list.length; i++) {\r\n                this.add(list[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    protected _createInnerColl(): SyncableObservableCollection$2<string, string> {\r\n        \r\n \r\n        let coll = new SyncableObservableCollection$2<string, string>(String_$type, String_$type, 0);\r\n        coll.compare = (ext, int) => { \r\n            let comp: any = ext;\r\n            if (comp.equals) {\r\n                return comp.equals(int);\r\n            }\r\n            return comp === int;\r\n        };\r\n        coll.createTo = (ext) => {\r\n            return ext;\r\n        }\r\n        coll.createFrom = (int) => {\r\n            return int;\r\n        }\r\n        return coll;\r\n    } \r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { ObservableCollection$1 } from \"igniteui-core/ObservableCollection$1\";\r\nimport { IEnumerable$1, IEnumerable$1_$type, Base, String_$type, Type, markType } from \"igniteui-core/type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class SubDomainsCollection extends ObservableCollection$1<string> {\r\n\tstatic $t: Type = markType(SubDomainsCollection, 'SubDomainsCollection', (<any>ObservableCollection$1).$.specialize(String_$type));\r\n\tconstructor(a: number);\r\n\tconstructor(a: number, b: IEnumerable$1<string>);\r\n\tconstructor(a: number, ..._rest: any[]);\r\n\tconstructor(a: number, ..._rest: any[]) {\r\n\t\ta = (a == void 0) ? 0 : a;\r\n\t\tswitch (a) {\r\n\t\t\tcase 0:\r\n\t\t\t{\r\n\t\t\t\tsuper(String_$type, 0);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 1:\r\n\t\t\t{\r\n\t\t\t\tlet c: IEnumerable$1<string> = <IEnumerable$1<string>>_rest[0];\r\n\t\t\t\tsuper(String_$type, 1, c);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapImageryView } from \"./GeographicMapImageryView\";\r\nimport { SubDomainsCollection } from \"./SubDomainsCollection\";\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { BingMapsTileSource } from \"igniteui-core/BingMapsTileSource\";\r\nimport { Base, Type, markType, Boolean_$type, typeCast, String_$type, enumGetBox, EnumUtil, runOn, delegateRemove, delegateCombine, markDep } from \"igniteui-core/type\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { BingMapsImageryStyle, BingMapsImageryStyle_$type } from \"./BingMapsImageryStyle\";\r\nimport { List$1 } from \"igniteui-core/List$1\";\r\nimport { NotifyCollectionChangedEventArgs } from \"igniteui-core/NotifyCollectionChangedEventArgs\";\r\nimport { ObservableCollection$1 } from \"igniteui-core/ObservableCollection$1\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { UriKind } from \"igniteui-core/UriKind\";\r\nimport { HttpRequestUtil } from \"igniteui-core/httpRequestUtil\";\r\nimport { Uri } from \"igniteui-core/Uri\";\r\nimport { stringEmpty, stringIsNullOrEmpty } from \"igniteui-core/string\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class BingMapsMapImageryView extends GeographicMapImageryView {\r\n\tstatic $t: Type = markType(BingMapsMapImageryView, 'BingMapsMapImageryView', (<any>GeographicMapImageryView).$);\r\n\tconstructor(a: BingMapsMapImagery) {\r\n\t\tsuper(a);\r\n\t\tthis.k = a;\r\n\t}\r\n\tprotected k: BingMapsMapImagery;\r\n\tm(): void {\r\n\t\tif (this.k.subDomains == null) {\r\n\t\t\tthis.k.subDomains = new SubDomainsCollection(0);\r\n\t\t}\r\n\t\t(<BingMapsTileSource>this.k.ap).tilePath = this.k.actualTilePath;\r\n\t\t(<BingMapsTileSource>this.k.ap).subDomains = this.k.actualSubDomains;\r\n\t\t(<BingMapsTileSource>this.k.ap).cultureName = this.k.cultureName;\r\n\t}\r\n\to(): void {\r\n\t\t(<BingMapsTileSource>this.k.ap).tilePath = this.k.actualTilePath;\r\n\t}\r\n\tl(): void {\r\n\t\t(<BingMapsTileSource>this.k.ap).cultureName = this.k.cultureName;\r\n\t}\r\n\tn(): void {\r\n\t\t(<BingMapsTileSource>this.k.ap).subDomains = this.k.actualSubDomains;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class BingMapsMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(BingMapsMapImagery, 'BingMapsMapImagery', (<any>GeographicMapImagery).$);\r\n\tprivate _pendingBingRequest_: any = null;\r\n\tprivate static readonly cc: string = \"http://dev.virtualearth.net/REST/v1/Imagery/Metadata/\";\r\n\tconstructor() {\r\n\t\tsuper(new BingMapsTileSource(0));\r\n\t\tthis.getResponseCompleted = this.getResponseCompleted.bind(this);\r\n\t\tthis.bp.m();\r\n\t\tthis.actualBingImageryRestUri = BingMapsMapImagery.cc;\r\n\t}\r\n\tprotected ai(): GeographicMapImageryView {\r\n\t\treturn new BingMapsMapImageryView(this);\r\n\t}\r\n\tprotected bb(a: GeographicMapImageryView): void {\r\n\t\tsuper.bb(a);\r\n\t\tthis.bp = <BingMapsMapImageryView>a;\r\n\t}\r\n\tbp: BingMapsMapImageryView;\r\n\tprivate _isInitialized: boolean = false;\r\n\tget isInitialized(): boolean {\r\n\t\treturn this._isInitialized;\r\n\t}\r\n\tset isInitialized(a: boolean) {\r\n\t\tthis._isInitialized = a;\r\n\t}\r\n\tisDeferredLoad: boolean;\r\n\ttilePath: string;\r\n\tprivate bz: string = null;\r\n\tget actualTilePath(): string {\r\n\t\treturn this.bz;\r\n\t}\r\n\tset actualTilePath(a: string) {\r\n\t\tlet b = this.bz;\r\n\t\tthis.bz = a;\r\n\t\tthis.cm(\"ActualTilePath\", b, this.bz);\r\n\t}\r\n\tsubDomains: SubDomainsCollection;\r\n\tprivate bq: SubDomainsCollection = null;\r\n\tget actualSubDomains(): SubDomainsCollection {\r\n\t\treturn this.bq;\r\n\t}\r\n\tset actualSubDomains(a: SubDomainsCollection) {\r\n\t\tlet b = this.bq;\r\n\t\tthis.bq = a;\r\n\t\tthis.cm(\"ActualSubDomains\", b, this.bq);\r\n\t}\r\n\tprivate b0: string = null;\r\n\tget bingImageryRestUri(): string {\r\n\t\treturn this.b0;\r\n\t}\r\n\tset bingImageryRestUri(a: string) {\r\n\t\tlet b = this.b0;\r\n\t\tthis.b0 = a;\r\n\t\tthis.cm(\"BingImageryRestUri\", b, this.b0);\r\n\t}\r\n\tprivate by: string = null;\r\n\tget actualBingImageryRestUri(): string {\r\n\t\treturn this.by;\r\n\t}\r\n\tset actualBingImageryRestUri(a: string) {\r\n\t\tlet b = this.by;\r\n\t\tthis.by = a;\r\n\t\tthis.ba(\"ActualBingImageryRestUri\", b, this.by);\r\n\t}\r\n\tcultureName: string;\r\n\tapiKey: string;\r\n\timageryStyle: BingMapsImageryStyle;\r\n\trequestMapSettings(): void {\r\n\t\tthis.co(true);\r\n\t}\r\n\tprivate co(a: boolean): void {\r\n\t\tthis.cl(a);\r\n\t}\r\n\tprivate bw(): boolean {\r\n\t\tif ((this.tilePath == null) && (this.subDomains == null)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tprivate cq(): void {\r\n\t\tthis.isInitialized = false;\r\n\t\tif (!this.bv()) {\r\n\t\t\tthis.cp(\"\", null);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!this.isDeferredLoad) {\r\n\t\t\tthis.co(false);\r\n\t\t}\r\n\t}\r\n\tprivate bv(): boolean {\r\n\t\tif (stringIsNullOrEmpty(this.apiKey) || this.apiKey.length < 20) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\tprivate cj(): void {\r\n\t}\r\n\tprivate cp(a: string, b: List$1<string>): void {\r\n\t\tif (a != this.actualTilePath) {\r\n\t\t\tthis.actualTilePath = a;\r\n\t\t}\r\n\t\tlet c = b == null ? null : new SubDomainsCollection(1, b);\r\n\t\tif (this.actualSubDomains != c) {\r\n\t\t\tthis.actualSubDomains = c;\r\n\t\t}\r\n\t\tthis.bp.m();\r\n\t}\r\n\tprivate cl(a: boolean): void {\r\n\t\tif ((!a) && (this.isDeferredLoad)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!this.bv()) {\r\n\t\t\tthis.isInitialized = false;\r\n\t\t\tthis.cp(\"\", null);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.isInitialized = true;\r\n\t\tlet b: string = null;\r\n\t\tif (this.bingImageryRestUri != null) {\r\n\t\t\tif (Uri.isWellFormedUriString(this.bingImageryRestUri, 1)) {\r\n\t\t\t\tb = this.bingImageryRestUri;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (Uri.isWellFormedUriString(this.actualBingImageryRestUri, 1)) {\r\n\t\t\t\tb = this.actualBingImageryRestUri;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (b == null) {\r\n\t\t\tthis.cp(\"\", null);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet c = this.imageryStyle;\r\n\t\tb += enumGetBox<BingMapsImageryStyle>(BingMapsImageryStyle_$type, c);\r\n\t\tlet d = \"key=\" + this.apiKey + \"&include=ImageryProviders\";\r\n\t\tlet url_ = b + \"?\" + d;\r\n\t\tthis._pendingBingRequest_ = HttpRequestUtil.submit(url_, this.getResponseCompleted, null );\r\n\t}\r\n\tprivate getResponseCompleted(a: any, b: any): void {\r\n\t\tif (b != this._pendingBingRequest_) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pendingBingRequest_ = null;\r\n\t\tlet data_ = a;\r\n\t\tlet resourceSets_ =  (<any>JSON.parse(data_)).resourceSets;\r\n\t\tif (resourceSets_ == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet resources_ = resourceSets_.length > 0 ? resourceSets_[0].resources : null;\r\n\t\tif (resources_ == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (resources_.length == 0) { return; };\r\n\t\tlet imageUrl_: string = <string>(resources_[0].imageUrl);\r\n\t\tlet subDomains_: List$1<string> = new List$1<string>(String_$type, 0);\r\n\t\tfor (var i = 0; i < resources_[0].imageUrlSubdomains.length; i++) { subDomains_.add(resources_[0].imageUrlSubdomains[i]); };\r\n\t\tthis.cp(imageUrl_, subDomains_);\r\n\t}\r\n\tprivate ci(a: any, b: NotifyCollectionChangedEventArgs): void {\r\n\t\tthis.aj.e();\r\n\t\tthis.cq();\r\n\t\tthis.cm(BingMapsMapImagery.$$p[4], this.actualSubDomains, this.actualSubDomains);\r\n\t}\r\n\tprivate cm(a: string, b: any, c: any): void {\r\n\t\tswitch (a) {\r\n\t\t\tcase BingMapsMapImagery.$$p[0]:\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[3]:\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[5]:\r\n\t\t\tthis.cj();\r\n\t\t\tthis.actualTilePath = <string>c;\r\n\t\t\tthis.bp.o();\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[1]:\r\n\t\t\tthis.bp.l();\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[2]:\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[4]:\r\n\t\t\tthis.cj();\r\n\t\t\tlet d = <SubDomainsCollection>b;\r\n\t\t\tlet e = <SubDomainsCollection>c;\r\n\t\t\tif (this.actualSubDomains != null) {\r\n\t\t\t\tlet f = this.actualSubDomains;\r\n\t\t\t\tf.collectionChanged = delegateRemove(f.collectionChanged, runOn(this, this.ci));\r\n\t\t\t}\r\n\t\t\tthis.actualSubDomains = e;\r\n\t\t\tif (this.actualSubDomains != null) {\r\n\t\t\t\te.collectionChanged = delegateCombine(e.collectionChanged, runOn(this, this.ci));\r\n\t\t\t}\r\n\t\t\tthis.bp.n();\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualTilePath\":\r\n\t\t\tlet g = <string>c;\r\n\t\t\tif (stringIsNullOrEmpty(g)) {\r\n\t\t\t\tthis.cq();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"BingImageryRestUri\":\r\n\t\t\tthis.actualBingImageryRestUri = <string>c;\r\n\t\t\tthis.cj();\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualBingImageryRestUri\":\r\n\t\t\tthis.cj();\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tsuper.ba(a, b, c);\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, BingMapsMapImagery, 'cm', [ 'ApiKey', [ 2, stringEmpty() ], 'CultureName', [ 2, \"en-US\" ], 'ImageryStyle', [ BingMapsImageryStyle_$type, enumGetBox<BingMapsImageryStyle>(BingMapsImageryStyle_$type, 1) ], 'IsDeferredLoad', [ 0, false ], 'SubDomains', [ (<any>SubDomainsCollection).$, null ], 'TilePath', [ 2, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcSubDomainsCollection } from \"./igc-sub-domains-collection\";\r\nimport { BingMapsImageryStyle, BingMapsImageryStyle_$type } from \"./BingMapsImageryStyle\";\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { BingMapsMapImagery as BingMapsMapImagery_internal } from \"./BingMapsMapImagery\";\r\nimport { ensureBool, ensureEnum } from \"igniteui-core/componentUtil\";\r\nimport { SubDomainsCollection as SubDomainsCollection_internal } from \"./SubDomainsCollection\";\r\nimport { String_$type } from \"igniteui-core/type\";\r\nimport { SyncableObservableCollection$1 } from \"igniteui-core/SyncableObservableCollection$1\";\r\n\r\n/**\r\n * UI element class used to display BingMapsMap imagery in the IgxGeographicMap.Component\r\n*/\r\nexport class IgcBingMapsMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : BingMapsMapImagery_internal\r\n{\r\n\treturn new BingMapsMapImagery_internal();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : BingMapsMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t/**\r\n\t * Gets a status whether the Bing Maps service is initialized.\r\n\t*/\r\n\tget isInitialized() : boolean {\r\n\t\treturn (this.i.isInitialized as boolean);\r\n\t}\r\n\tset isInitialized(v: boolean) {\r\n\t\tthis.i.isInitialized = ensureBool(v);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the Bing Maps service should be auto-initialized upon valid property values.\r\n\t*/\r\n\tget isDeferredLoad() : boolean {\r\n\t\treturn (this.i.isDeferredLoad as boolean);\r\n\t}\r\n\tset isDeferredLoad(v: boolean) {\r\n\t\tthis.i.isDeferredLoad = ensureBool(v);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the map tile image uri.\r\n\t*/\r\n\tget tilePath() : string {\r\n\t\treturn (this.i.tilePath as string);\r\n\t}\r\n\tset tilePath(v: string) {\r\n\t\tthis.i.tilePath = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the actual map tile image uri.\r\n\t*/\r\n\tget actualTilePath() : string {\r\n\t\treturn (this.i.actualTilePath as string);\r\n\t}\r\n\tset actualTilePath(v: string) {\r\n\t\tthis.i.actualTilePath = v;\r\n\t}\r\n\tprivate _subDomains: IgcSubDomainsCollection = null;\r\n\t                                \r\n\t/**\r\n\t * Gets or sets the collection of image uri subdomains.\r\n\t*/\r\n\tget subDomains() : IgcSubDomainsCollection {\r\n\t                                        if (this._subDomains === null) {\r\n\t                                            let coll = new IgcSubDomainsCollection();\r\n\t                                            let innerColl = this.i.subDomains;\r\n\t\t\tif (!innerColl) {\r\n\t                                            \tinnerColl = new SubDomainsCollection_internal(0);\r\n\t\t\t}\r\n\t                                            this._subDomains = (coll as any)._fromInner(innerColl);\r\n\t                                            this.i.subDomains = innerColl;\r\n\t\r\n\t                                        }\r\n\t\treturn this._subDomains;\r\n\t}\r\n\tset subDomains(v: IgcSubDomainsCollection) {\r\n\t                                        if (this._subDomains !== null) {\r\n\t                                            (this._subDomains as any)._setSyncTarget(null);\r\n\t                                            this._subDomains = null;\r\n\t                                        }\r\n\t                                        let coll = new IgcSubDomainsCollection();\r\n\t                                        this._subDomains = (coll as any)._fromOuter(v);\r\n\t                                        let syncColl = new SyncableObservableCollection$1<String>(String_$type);\r\n\t                                        let innerColl = this.i.subDomains;\r\n\t\tif (!innerColl) {\r\n\t                                        \tinnerColl = new SubDomainsCollection_internal(0);\r\n\t\t}\r\n\t                                        (syncColl as any)._inner = innerColl;\r\n\t                                        syncColl.clear();\r\n\t                                        (this._subDomains as any)._setSyncTarget(syncColl);\r\n\t                                        this.i.subDomains = innerColl;\r\n\t\r\n\t}\r\n\tprivate _actualSubDomains: IgcSubDomainsCollection = null;\r\n\t                                \r\n\t/**\r\n\t * Gets or sets the actual collection of image uri subdomains.\r\n\t*/\r\n\tget actualSubDomains() : IgcSubDomainsCollection {\r\n\t                                        if (this._actualSubDomains === null) {\r\n\t                                            let coll = new IgcSubDomainsCollection();\r\n\t                                            let innerColl = this.i.actualSubDomains;\r\n\t\t\tif (!innerColl) {\r\n\t                                            \tinnerColl = new SubDomainsCollection_internal(0);\r\n\t\t\t}\r\n\t                                            this._actualSubDomains = (coll as any)._fromInner(innerColl);\r\n\t                                            this.i.actualSubDomains = innerColl;\r\n\t\r\n\t                                        }\r\n\t\treturn this._actualSubDomains;\r\n\t}\r\n\tset actualSubDomains(v: IgcSubDomainsCollection) {\r\n\t                                        if (this._actualSubDomains !== null) {\r\n\t                                            (this._actualSubDomains as any)._setSyncTarget(null);\r\n\t                                            this._actualSubDomains = null;\r\n\t                                        }\r\n\t                                        let coll = new IgcSubDomainsCollection();\r\n\t                                        this._actualSubDomains = (coll as any)._fromOuter(v);\r\n\t                                        let syncColl = new SyncableObservableCollection$1<String>(String_$type);\r\n\t                                        let innerColl = this.i.actualSubDomains;\r\n\t\tif (!innerColl) {\r\n\t                                        \tinnerColl = new SubDomainsCollection_internal(0);\r\n\t\t}\r\n\t                                        (syncColl as any)._inner = innerColl;\r\n\t                                        syncColl.clear();\r\n\t                                        (this._actualSubDomains as any)._setSyncTarget(syncColl);\r\n\t                                        this.i.actualSubDomains = innerColl;\r\n\t\r\n\t}\r\n\t/**\r\n\t * Gets or sets the Bing Imagery Rest Uri.\r\n\t*/\r\n\tget bingImageryRestUri() : string {\r\n\t\treturn (this.i.bingImageryRestUri as string);\r\n\t}\r\n\tset bingImageryRestUri(v: string) {\r\n\t\tthis.i.bingImageryRestUri = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the Actual Bing Imagery Rest Uri.\r\n\t*/\r\n\tget actualBingImageryRestUri() : string {\r\n\t\treturn (this.i.actualBingImageryRestUri as string);\r\n\t}\r\n\tset actualBingImageryRestUri(v: string) {\r\n\t\tthis.i.actualBingImageryRestUri = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the culture name for this tile source.\r\n\t*/\r\n\tget cultureName() : string {\r\n\t\treturn (this.i.cultureName as string);\r\n\t}\r\n\tset cultureName(v: string) {\r\n\t\tthis.i.cultureName = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets an API key required by the Bing Maps imagery service.\r\n\t * This key must be obtained from the http://www.bingmapsportal.com website.\r\n\t*/\r\n\tget apiKey() : string {\r\n\t\treturn (this.i.apiKey as string);\r\n\t}\r\n\tset apiKey(v: string) {\r\n\t\tthis.i.apiKey = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets a map style of the Bing Maps imagery tiles. \r\n\t * For example: Aerial, AerialWithLabels, or Road map style.\r\n\t*/\r\n\tget imageryStyle() : BingMapsImageryStyle {\r\n\t\treturn this.i.imageryStyle;\r\n\t}\r\n\tset imageryStyle(v: BingMapsImageryStyle) {\r\n\t\tthis.i.imageryStyle = ensureEnum<BingMapsImageryStyle>(BingMapsImageryStyle_$type, v);\r\n\t}\r\n\t/**\r\n\t * Will Connect to the Bing Rest API and retrieve the required TilePath and Subdomains from the service.  This requires a valid API key to already be set.\r\n\t\r\n\t*/\r\n\tpublic requestMapSettings() {\r\n\t\tthis.i.requestMapSettings();\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcBingMapsMapImagery } from './igc-bing-maps-map-imagery';\r\nimport { BingMapsMapImagery } from './BingMapsMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcBingMapsMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcBingMapsMapImagery\", IgcBingMapsMapImagery);\r\n        TypeRegistrar.register(\"BingMapsMapImagery\", (<any>BingMapsMapImagery).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcGetTileImageUriArgs } from \"igniteui-core/igc-get-tile-image-uri-args\";\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { CustomMapImagery as CustomMapImagery_internal } from \"./CustomMapImagery\";\r\n\r\n/**\r\n * Represents a CustomMapImagery MapImagery\r\n*/\r\nexport class IgcCustomMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\n\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : CustomMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t\r\n\t    private _getTileImageUri: (s: IgcCustomMapImagery, e: IgcGetTileImageUriArgs) => void = null;\r\n\t    private _getTileImageUri_wrapped: any = null;\r\n\t/**\r\n\t * Raised when URI for tiles should be provided\r\n\t*/\r\n\t\r\n\tpublic get getTileImageUri(): (s: IgcCustomMapImagery, e: IgcGetTileImageUriArgs) => void {\r\n\treturn this._getTileImageUri;\r\n\t}\r\n\t    public set getTileImageUri(ev: (s: IgcCustomMapImagery, e: IgcGetTileImageUriArgs) => void) {\r\n\t        if (this._getTileImageUri_wrapped !== null) {\r\n\t            this.i.getTileImageUri = delegateRemove(this.i.getTileImageUri, this._getTileImageUri_wrapped);\r\n\t            this._getTileImageUri_wrapped = null;\r\n\t            this._getTileImageUri = null;\r\n\t        }\r\n\t\r\n\t        this._getTileImageUri = ev;\r\n\t        this._getTileImageUri_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcGetTileImageUriArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeGetTileImageUri) {\r\n\t                        (this as any).beforeGetTileImageUri(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._getTileImageUri) {\r\n\t    this._getTileImageUri(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.getTileImageUri = delegateCombine(this.i.getTileImageUri, this._getTileImageUri_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { CustomMapTileSource } from \"igniteui-core/CustomMapTileSource\";\r\nimport { Base, runOn, delegateCombine, Type, markType } from \"igniteui-core/type\";\r\nimport { GetTileImageUriArgs } from \"igniteui-core/GetTileImageUriArgs\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class CustomMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(CustomMapImagery, 'CustomMapImagery', (<any>GeographicMapImagery).$);\r\n\tconstructor(a: CustomMapTileSource) {\r\n\t\tsuper(a);\r\n\t\ta.getTileImageUri = delegateCombine(a.getTileImageUri, runOn(this, this.bq));\r\n\t}\r\n\tprivate bq(a: any, b: GetTileImageUriArgs): void {\r\n\t\tthis.bp(b);\r\n\t}\r\n\tprotected bp(a: GetTileImageUriArgs): void {\r\n\t\tif (this.getTileImageUri != null) {\r\n\t\t\tthis.getTileImageUri(this, a);\r\n\t\t}\r\n\t}\r\n\tgetTileImageUri: (sender: any, e: GetTileImageUriArgs) => void = null;\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcCustomMapImagery } from './igc-custom-map-imagery';\r\nimport { CustomMapImagery } from './CustomMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcCustomMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcCustomMapImagery\", IgcCustomMapImagery);\r\n        TypeRegistrar.register(\"CustomMapImagery\", (<any>CustomMapImagery).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicXYTriangulatingSeriesView } from \"./GeographicXYTriangulatingSeriesView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterContourSeries } from \"igniteui-charts/ScatterContourSeries\";\r\nimport { Base, Type, markType, runOn, delegateCombine, typeCast, String_$type, markDep } from \"igniteui-core/type\";\r\nimport { GeographicXYTriangulatingSeries } from \"./GeographicXYTriangulatingSeries\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { ValueBrushScale } from \"igniteui-charts/ValueBrushScale\";\r\nimport { ContourValueResolver } from \"igniteui-charts/ContourValueResolver\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { TriangulationStatusEventArgs } from \"igniteui-core/TriangulationStatusEventArgs\";\r\nimport { ScatterTriangulationSeries } from \"igniteui-charts/ScatterTriangulationSeries\";\r\nimport { PropertyUpdatedEventArgs } from \"igniteui-core/PropertyUpdatedEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicContourLineSeriesView extends GeographicXYTriangulatingSeriesView {\r\n\tstatic $t: Type = markType(GeographicContourLineSeriesView, 'GeographicContourLineSeriesView', (<any>GeographicXYTriangulatingSeriesView).$);\r\n\tconstructor(a: GeographicContourLineSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.cp = a;\r\n\t}\r\n\tprivate cp: GeographicContourLineSeries = null;\r\n\tau(): void {\r\n\t\tsuper.au();\r\n\t\tif (!this.q) {\r\n\t\t\tthis.cp.jn = Defaults.m;\r\n\t\t}\r\n\t}\r\n\tb5(): void {\r\n\t\tsuper.b5();\r\n\t\tif (this.cp.ws != null) {\r\n\t\t\tthis.cp.xk.yn = this.cp.xn;\r\n\t\t\tthis.cp.xk.yx = this.cp.xr;\r\n\t\t}\r\n\t}\r\n\tcq(): void {\r\n\t\tif (this.cp.xk != null) {\r\n\t\t\tthis.cp.xk.yn = this.cp.xn;\r\n\t\t}\r\n\t}\r\n\tcr(): void {\r\n\t\tif (this.cp.xk != null) {\r\n\t\t\tthis.cp.xk.yx = this.cp.xr;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicContourLineSeries extends GeographicXYTriangulatingSeries {\r\n\tstatic $t: Type = markType(GeographicContourLineSeries, 'GeographicContourLineSeries', (<any>GeographicXYTriangulatingSeries).$);\r\n\tprotected bi(): Series {\r\n\t\treturn new GeographicContourLineSeries();\r\n\t}\r\n\tprotected get_fh(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicContourLineSeries).$;\r\n\t}\r\n\tprotected wx(): void {\r\n\t\tsuper.wx();\r\n\t}\r\n\txk: ScatterContourSeries;\r\n\tprotected wr(): Series {\r\n\t\tthis.xk = new ScatterContourSeries();\r\n\t\tlet a = this.xk;\r\n\t\ta.triangulationStatusChanged = delegateCombine(a.triangulationStatusChanged, runOn(this, this.xu));\r\n\t\tlet b = this.xk;\r\n\t\tb.propertyUpdated = delegateCombine(b.propertyUpdated, runOn(this, this.xv));\r\n\t\treturn this.xk;\r\n\t}\r\n\tprivate xu(a: any, b: TriangulationStatusEventArgs): void {\r\n\t\tif (this.triangulationStatusChanged != null) {\r\n\t\t\tthis.triangulationStatusChanged(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate xv(a: any, b: PropertyUpdatedEventArgs): void {\r\n\t\tlet c = typeCast<ScatterContourSeries>((<any>ScatterContourSeries).$, this.ws);\r\n\t\tif (c == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (b.propertyName == \"ActualFillScale\") {\r\n\t\t\tthis.xm = c.ym;\r\n\t\t}\r\n\t}\r\n\txr: string;\r\n\txn: ValueBrushScale;\r\n\txm: ValueBrushScale;\r\n\tprotected sb(): void {\r\n\t\tsuper.sb();\r\n\t}\r\n\tprotected cq(): SeriesView {\r\n\t\treturn new GeographicContourLineSeriesView(this);\r\n\t}\r\n\tqx(a: SeriesView): void {\r\n\t\tsuper.qx(a);\r\n\t\tthis.xo = <GeographicContourLineSeriesView>a;\r\n\t}\r\n\txo: GeographicContourLineSeriesView;\r\n\txj: ContourValueResolver;\r\n\tprotected q5(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.q5(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicContourLineSeries.$$p[1]:\r\n\t\t\tthis.xo.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicContourLineSeries.$$p[2]:\r\n\t\t\tthis.xo.cr();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicContourLineSeries.$$p[3]:\r\n\t\t\tthis.xk.yk = this.xj;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"DashArray\":\r\n\t\t\tthis.xk.vw = this.vw;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"DashCap\":\r\n\t\t\tthis.xk.vx = this.vx;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"MiterLimit\":\r\n\t\t\tthis.xk.jf = this.jf;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"LineJoin\":\r\n\t\t\tthis.xk.vz = this.vz;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\ttriangulationStatusChanged: (sender: any, args: TriangulationStatusEventArgs) => void = null;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicContourLineSeries, 'raisePropertyChanged', [ 'ActualFillScale:xm:xw', [ (<any>ValueBrushScale).$, null ], 'FillScale:xn:xx', [ (<any>ValueBrushScale).$, null ], 'ValueMemberPath:xr:xy', [ 2, \"value\" ], 'ValueResolver:xj:xz', [ (<any>ContourValueResolver).$, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcValueBrushScaleComponent } from \"igniteui-charts/igc-value-brush-scale-component\";\r\nimport { IgcContourValueResolverComponent } from \"igniteui-charts/igc-contour-value-resolver-component\";\r\nimport { IgcTriangulationStatusEventArgs } from \"igniteui-core/igc-triangulation-status-event-args\";\r\nimport { IgcGeographicXYTriangulatingSeriesComponent } from \"./igc-geographic-xy-triangulating-series-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicContourLineSeries } from \"./GeographicContourLineSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Represents a class for Geographic Contour Series displayed on a map.\r\n*/\r\nexport class IgcGeographicContourLineSeriesComponent extends IgcGeographicXYTriangulatingSeriesComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicContourLineSeries\r\n{\r\n\treturn new GeographicContourLineSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicContourLineSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicContourLineSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicContourLineSeriesComponent._observedAttributesIgcGeographicContourLineSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicContourLineSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicContourLineSeriesComponent._observedAttributesIgcGeographicContourLineSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicContourLineSeriesComponent._observedAttributesIgcGeographicContourLineSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-contour-line-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicContourLineSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicContourLineSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicContourLineSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicContourLineSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a line contour shape.\r\n\t*/\r\n\tget isLineContour() : boolean {\r\n\t\treturn (this.i.fh as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property from which to retrieve the numeric values from the ItemsSource items.\r\n\t*/\r\n\tget valueMemberPath() : string {\r\n\t\treturn (this.i.xr as string);\r\n\t}\r\n\tset valueMemberPath(v: string) {\r\n\t\tthis.i.xr = v;\r\n\t}\r\n\t/**\r\n\t * The ValueBrushScale to use when determining Brushes for each contour line, based on the values found in ValueMemberPath.\r\n\t*/\r\n\tget fillScale() : IgcValueBrushScaleComponent {\r\n\t                                        const r = this.i.xn;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcValueBrushScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset fillScale(v: IgcValueBrushScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.xn = null : this.i.xn = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets actual fill scale that is set on the FillScale property or default FillScale\r\n\t*/\r\n\tget actualFillScale() : IgcValueBrushScaleComponent {\r\n\t                                        const r = this.i.xm;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcValueBrushScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset actualFillScale(v: IgcValueBrushScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.xm = null : this.i.xm = v.i;\r\n\t}\r\n\t/**\r\n\t * The ContourValueResolver used to determine the numeric values of contours.\r\n\t*/\r\n\tget valueResolver() : IgcContourValueResolverComponent {\r\n\t                                        const r = this.i.xj;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcContourValueResolverComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset valueResolver(v: IgcContourValueResolverComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.xj = null : this.i.xj = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.fillScale && (this.fillScale as any).name && (this.fillScale as any).name == name) { return this.fillScale; }\r\n\tif (this.actualFillScale && (this.actualFillScale as any).name && (this.actualFillScale as any).name == name) { return this.actualFillScale; }\r\n\tif (this.valueResolver && (this.valueResolver as any).name && (this.valueResolver as any).name == name) { return this.valueResolver; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.fillScale && (this.fillScale as any)._styling) {\r\n\t    (this.fillScale as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.actualFillScale && (this.actualFillScale as any)._styling) {\r\n\t    (this.actualFillScale as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.valueResolver && (this.valueResolver as any)._styling) {\r\n\t    (this.valueResolver as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\t\r\n\t    private _triangulationStatusChanged: (s: IgcGeographicContourLineSeriesComponent, e: IgcTriangulationStatusEventArgs) => void = null;\r\n\t    private _triangulationStatusChanged_wrapped: any = null;\r\n\t/**\r\n\t * Raised when the status of an ongoing Triangulation has changed.\r\n\t*/\r\n\t\r\n\tpublic get triangulationStatusChanged(): (s: IgcGeographicContourLineSeriesComponent, e: IgcTriangulationStatusEventArgs) => void {\r\n\treturn this._triangulationStatusChanged;\r\n\t}\r\n\t    public set triangulationStatusChanged(ev: (s: IgcGeographicContourLineSeriesComponent, e: IgcTriangulationStatusEventArgs) => void) {\r\n\t        if (this._triangulationStatusChanged_wrapped !== null) {\r\n\t            this.i.triangulationStatusChanged = delegateRemove(this.i.triangulationStatusChanged, this._triangulationStatusChanged_wrapped);\r\n\t            this._triangulationStatusChanged_wrapped = null;\r\n\t            this._triangulationStatusChanged = null;\r\n\t        }\r\n\t\r\n\t        this._triangulationStatusChanged = ev;\r\n\t        this._triangulationStatusChanged_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcTriangulationStatusEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeTriangulationStatusChanged) {\r\n\t                        (this as any).beforeTriangulationStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._triangulationStatusChanged) {\r\n\t    this._triangulationStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.triangulationStatusChanged = delegateCombine(this.i.triangulationStatusChanged, this._triangulationStatusChanged_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterContourSeriesModule } from 'igniteui-charts/igc-scatter-contour-series-module';\r\n\r\nimport { IgcGeographicContourLineSeriesComponent } from './igc-geographic-contour-line-series-component';\r\nimport { GeographicContourLineSeries } from './GeographicContourLineSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicContourLineSeriesModule {\r\n    public static register(): void {\r\nIgcScatterContourSeriesModule.register();\r\n        IgcGeographicContourLineSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicContourLineSeriesComponent\", IgcGeographicContourLineSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicContourLineSeries\", (<any>GeographicContourLineSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { HighDensityScatterSeries } from \"igniteui-charts/HighDensityScatterSeries\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { Color } from \"igniteui-core/Color\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Base, typeCast, Type, markType, String_$type, Boolean_$type, Number_$type, typeGetValue, runOn, delegateCombine, markDep } from \"igniteui-core/type\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { ProgressiveLoadStatusEventArgs } from \"igniteui-charts/ProgressiveLoadStatusEventArgs\";\r\nimport { PropertyUpdatedEventArgs } from \"igniteui-core/PropertyUpdatedEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { isNaN_ } from \"igniteui-core/number\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicHighDensityScatterSeriesView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicHighDensityScatterSeriesView, 'GeographicHighDensityScatterSeriesView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicHighDensityScatterSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ch = a;\r\n\t}\r\n\tprivate ch: GeographicHighDensityScatterSeries = null;\r\n\tb5(): void {\r\n\t\tsuper.b5();\r\n\t\tlet a: HighDensityScatterSeries = typeCast<HighDensityScatterSeries>((<any>HighDensityScatterSeries).$, this.ch.ws);\r\n\t\ta.y0 = this.ch.xh;\r\n\t\ta.y8 = this.ch.xf;\r\n\t\ta.xd = this.ch.w4;\r\n\t\ta.xc = this.ch.w3;\r\n\t\ta.f6 = this.ch.w2;\r\n\t\ta.x8 = this.ch.w6;\r\n\t\ta.x7 = this.ch.w5;\r\n\t\ta.z6 = this.ch.x0;\r\n\t\ta.z5 = this.ch.xz;\r\n\t\ta.yk = this.ch.w9;\r\n\t}\r\n\tcn(): void {\r\n\t\t(<HighDensityScatterSeries>this.ch.ws).y0 = this.ch.xh;\r\n\t}\r\n\tcm(): void {\r\n\t\t(<HighDensityScatterSeries>this.ch.ws).y8 = this.ch.xf;\r\n\t}\r\n\tcs(): void {\r\n\t\t(<HighDensityScatterSeries>this.ch.ws).xd = this.ch.w4;\r\n\t}\r\n\tcq(): void {\r\n\t\t(<HighDensityScatterSeries>this.ch.ws).xc = this.ch.w3;\r\n\t}\r\n\tco(): void {\r\n\t\t(<HighDensityScatterSeries>this.ch.ws).f6 = this.ch.w2;\r\n\t}\r\n\tcl(): void {\r\n\t\t(<HighDensityScatterSeries>this.ch.ws).x8 = this.ch.w6;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<HighDensityScatterSeries>this.ch.ws).x7 = this.ch.w5;\r\n\t}\r\n\tcr(): void {\r\n\t\tlet a: HighDensityScatterSeries = typeCast<HighDensityScatterSeries>((<any>HighDensityScatterSeries).$, this.ch.ws);\r\n\t\tif (this.ch.c9 == null) {\r\n\t\t\ta.wx = null;\r\n\t\t\ta.wz = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.wx = (<XamGeographicMap>this.ch.c9).v8;\r\n\t\ta.wz = (<XamGeographicMap>this.ch.c9).wa;\r\n\t}\r\n\tct(): void {\r\n\t\t(<HighDensityScatterSeries>this.ch.ws).wx = (<XamGeographicMap>this.ch.c9).v8;\r\n\t}\r\n\tcu(): void {\r\n\t\t(<HighDensityScatterSeries>this.ch.ws).wz = (<XamGeographicMap>this.ch.c9).wa;\r\n\t}\r\n\tck(): void {\r\n\t\t(<HighDensityScatterSeries>this.ch.ws).z6 = this.ch.x0;\r\n\t}\r\n\tci(): void {\r\n\t\t(<HighDensityScatterSeries>this.ch.ws).z5 = this.ch.xz;\r\n\t}\r\n\tcp(): void {\r\n\t\t(<HighDensityScatterSeries>this.ch.ws).yk = this.ch.w9;\r\n\t}\r\n\tau(): void {\r\n\t\tsuper.au();\r\n\t\tif (!this.q) {\r\n\t\t\tthis.ch.x0 = Defaults.aq;\r\n\t\t\tthis.ch.xz = Defaults.ap;\r\n\t\t\tthis.ch.u9 = Defaults.al;\r\n\t\t\tthis.ch.vp = Defaults.ak;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicHighDensityScatterSeries extends GeographicMapSeriesHost {\r\n\tstatic $t: Type = markType(GeographicHighDensityScatterSeries, 'GeographicHighDensityScatterSeries', (<any>GeographicMapSeriesHost).$);\r\n\tprotected bi(): Series {\r\n\t\treturn new GeographicHighDensityScatterSeries();\r\n\t}\r\n\tprotected ji(): number {\r\n\t\tif (!isNaN_(this.jh)) {\r\n\t\t\treturn super.ji();\r\n\t\t}\r\n\t\treturn Defaults.q;\r\n\t}\r\n\tprotected get_fm(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicHighDensityScatterSeries).$;\r\n\t}\r\n\tprotected cq(): SeriesView {\r\n\t\treturn new GeographicHighDensityScatterSeriesView(this);\r\n\t}\r\n\tqx(a: SeriesView): void {\r\n\t\tsuper.qx(a);\r\n\t\tthis.w1 = <GeographicHighDensityScatterSeriesView>a;\r\n\t}\r\n\tw1: GeographicHighDensityScatterSeriesView;\r\n\tprotected wr(): Series {\r\n\t\tthis.w0 = new HighDensityScatterSeries();\r\n\t\treturn this.w0;\r\n\t}\r\n\tprivate w0: HighDensityScatterSeries = null;\r\n\txf: string;\r\n\txh: string;\r\n\tw4: boolean;\r\n\tw3: boolean;\r\n\tw2: boolean;\r\n\tw6: number;\r\n\tw5: number;\r\n\tx0: Color;\r\n\txz: Color;\r\n\tw9: number;\r\n\tprogressiveLoadStatusChanged: (sender: any, e: ProgressiveLoadStatusEventArgs) => void = null;\r\n\tprivate w8: number = 0;\r\n\tget xa(): number {\r\n\t\treturn this.w8;\r\n\t}\r\n\tset xa(a: number) {\r\n\t\tlet b = this.w8;\r\n\t\tthis.w8 = a;\r\n\t\tthis.raisePropertyChanged(\"ProgressiveStatus\", b, this.w8);\r\n\t}\r\n\tprotected wx(): void {\r\n\t\tsuper.wx();\r\n\t\tlet a = (<HighDensityScatterSeries>this.ws);\r\n\t\ta.progressiveLoadStatusChanged = delegateCombine(a.progressiveLoadStatusChanged, runOn(this, this.xo));\r\n\t\tlet b = (<HighDensityScatterSeries>this.ws);\r\n\t\tb.propertyUpdated = delegateCombine(b.propertyUpdated, runOn(this, this.xn));\r\n\t}\r\n\tprivate xo(a: any, b: ProgressiveLoadStatusEventArgs): void {\r\n\t\tthis.xa = b.currentStatus;\r\n\t\tif (this.progressiveLoadStatusChanged != null) {\r\n\t\t\tthis.progressiveLoadStatusChanged(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate xn(a: any, b: PropertyUpdatedEventArgs): void {\r\n\t\tif (this.w0 == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\tprotected q5(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.q5(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.w1.cr();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[5]:\r\n\t\t\tthis.w1.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[4]:\r\n\t\t\tthis.w1.cm();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[9]:\r\n\t\t\tthis.w1.cs();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[8]:\r\n\t\t\tthis.w1.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[6]:\r\n\t\t\tthis.w1.co();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"XAxis\":\r\n\t\t\tthis.w1.ct();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"YAxis\":\r\n\t\t\tthis.w1.cu();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[3]:\r\n\t\t\tthis.w1.cl();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[1]:\r\n\t\t\tthis.w1.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[2]:\r\n\t\t\tthis.w1.ck();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[0]:\r\n\t\t\tthis.w1.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[7]:\r\n\t\t\tthis.w1.cp();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprotected get_g5(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected set_g5(a: boolean): void {\r\n\t\tsuper.set_g5(a);\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicHighDensityScatterSeries, 'raisePropertyChanged', [ 'HeatMaximumColor:xz:xp', [ (<any>Color).$, Defaults.ap ], 'HeatMaximum:w5:xq', [ 1, 50 ], 'HeatMinimumColor:x0:xr', [ (<any>Color).$, Defaults.aq ], 'HeatMinimum:w6:xs', [ 1, 0 ], 'LatitudeMemberPath:xf:xt', [ 2, null ], 'LongitudeMemberPath:xh:xu', [ 2, null ], 'MouseOverEnabled:w2:xv', [ 0, false ], 'PointExtent:w9:xw', [ 1, 1 ], 'ProgressiveLoad:w3:xx', [ 0, true ], 'UseBruteForce:w4:xy', [ 0, false ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcProgressiveLoadStatusEventArgs } from \"igniteui-charts/igc-progressive-load-status-event-args\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicHighDensityScatterSeries } from \"./GeographicHighDensityScatterSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, colorToString, stringToColor } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class for a geographic map with points marked at given locations.\r\n * This is the geographic equivalent of a HighDensityScatterSeries.\r\n*/\r\nexport class IgcGeographicHighDensityScatterSeriesComponent extends IgcGeographicMapSeriesHostComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicHighDensityScatterSeries\r\n{\r\n\treturn new GeographicHighDensityScatterSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicHighDensityScatterSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicHighDensityScatterSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicHighDensityScatterSeriesComponent._observedAttributesIgcGeographicHighDensityScatterSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicHighDensityScatterSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicHighDensityScatterSeriesComponent._observedAttributesIgcGeographicHighDensityScatterSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicHighDensityScatterSeriesComponent._observedAttributesIgcGeographicHighDensityScatterSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-high-density-scatter-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicHighDensityScatterSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicHighDensityScatterSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicHighDensityScatterSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicHighDensityScatterSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows pixels.\r\n\t*/\r\n\tget isPixel() : boolean {\r\n\t\treturn (this.i.fm as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the latitude coordinate of the symbol.\r\n\t*/\r\n\tget latitudeMemberPath() : string {\r\n\t\treturn (this.i.xf as string);\r\n\t}\r\n\tset latitudeMemberPath(v: string) {\r\n\t\tthis.i.xf = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the longitude coordinate of the symbol.\r\n\t*/\r\n\tget longitudeMemberPath() : string {\r\n\t\treturn (this.i.xh as string);\r\n\t}\r\n\tset longitudeMemberPath(v: string) {\r\n\t\tthis.i.xh = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether to use use brute force mode.\r\n\t*/\r\n\tget useBruteForce() : boolean {\r\n\t\treturn (this.i.w4 as boolean);\r\n\t}\r\n\tset useBruteForce(v: boolean) {\r\n\t\tthis.i.w4 = ensureBool(v);\r\n\t                                        this._a(\"useBruteForce\", this.i.w4);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether to progressively load the data into the chart.\r\n\t*/\r\n\tget progressiveLoad() : boolean {\r\n\t\treturn (this.i.w3 as boolean);\r\n\t}\r\n\tset progressiveLoad(v: boolean) {\r\n\t\tthis.i.w3 = ensureBool(v);\r\n\t                                        this._a(\"progressiveLoad\", this.i.w3);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether the chart reacts to mouse move events.\r\n\t*/\r\n\tget mouseOverEnabled() : boolean {\r\n\t\treturn (this.i.w2 as boolean);\r\n\t}\r\n\tset mouseOverEnabled(v: boolean) {\r\n\t\tthis.i.w2 = ensureBool(v);\r\n\t                                        this._a(\"mouseOverEnabled\", this.i.w2);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the density value that maps to the minimum heat color.\r\n\t*/\r\n\tget heatMinimum() : number {\r\n\t\treturn (this.i.w6 as number);\r\n\t}\r\n\tset heatMinimum(v: number) {\r\n\t\tthis.i.w6 = +v;\r\n\t                                        this._a(\"heatMinimum\", this.i.w6);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the value that maps to the maximum heat color.\r\n\t*/\r\n\tget heatMaximum() : number {\r\n\t\treturn (this.i.w5 as number);\r\n\t}\r\n\tset heatMaximum(v: number) {\r\n\t\tthis.i.w5 = +v;\r\n\t                                        this._a(\"heatMaximum\", this.i.w5);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the color to use for the minimum end of the scale.\r\n\t*/\r\n\tget heatMinimumColor() : string {\r\n\t\treturn colorToString(this.i.x0);\r\n\t}\r\n\tset heatMinimumColor(v: string) {\r\n\t\tthis.i.x0 = stringToColor(v);\r\n\t                                        this._a(\"heatMinimumColor\", colorToString(this.i.x0));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the color to use for the maximum end of the scale.\r\n\t*/\r\n\tget heatMaximumColor() : string {\r\n\t\treturn colorToString(this.i.xz);\r\n\t}\r\n\tset heatMaximumColor(v: string) {\r\n\t\tthis.i.xz = stringToColor(v);\r\n\t                                        this._a(\"heatMaximumColor\", colorToString(this.i.xz));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the the pixel extent of the square data points that are rendered.\r\n\t*/\r\n\tget pointExtent() : number {\r\n\t\treturn (this.i.w9 as number);\r\n\t}\r\n\tset pointExtent(v: number) {\r\n\t\tthis.i.w9 = +v;\r\n\t                                        this._a(\"pointExtent\", this.i.w9);\r\n\t}\r\n\t/**\r\n\t * Represents the current status of the progressive load of the series. It will range from 0 to 100, where 100 is fully loaded.\r\n\t*/\r\n\tget progressiveStatus() : number {\r\n\t\treturn (this.i.xa as number);\r\n\t}\r\n\tset progressiveStatus(v: number) {\r\n\t\tthis.i.xa = +v;\r\n\t                                        this._a(\"progressiveStatus\", this.i.xa);\r\n\t}\r\n\t\r\n\t    private _progressiveLoadStatusChanged: (s: IgcGeographicHighDensityScatterSeriesComponent, e: IgcProgressiveLoadStatusEventArgs) => void = null;\r\n\t    private _progressiveLoadStatusChanged_wrapped: any = null;\r\n\t/**\r\n\t * Raised when the progressive loading state of the series has changed.\r\n\t*/\r\n\t\r\n\tpublic get progressiveLoadStatusChanged(): (s: IgcGeographicHighDensityScatterSeriesComponent, e: IgcProgressiveLoadStatusEventArgs) => void {\r\n\treturn this._progressiveLoadStatusChanged;\r\n\t}\r\n\t    public set progressiveLoadStatusChanged(ev: (s: IgcGeographicHighDensityScatterSeriesComponent, e: IgcProgressiveLoadStatusEventArgs) => void) {\r\n\t        if (this._progressiveLoadStatusChanged_wrapped !== null) {\r\n\t            this.i.progressiveLoadStatusChanged = delegateRemove(this.i.progressiveLoadStatusChanged, this._progressiveLoadStatusChanged_wrapped);\r\n\t            this._progressiveLoadStatusChanged_wrapped = null;\r\n\t            this._progressiveLoadStatusChanged = null;\r\n\t        }\r\n\t\r\n\t        this._progressiveLoadStatusChanged = ev;\r\n\t        this._progressiveLoadStatusChanged_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcProgressiveLoadStatusEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeProgressiveLoadStatusChanged) {\r\n\t                        (this as any).beforeProgressiveLoadStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._progressiveLoadStatusChanged) {\r\n\t    this._progressiveLoadStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.progressiveLoadStatusChanged = delegateCombine(this.i.progressiveLoadStatusChanged, this._progressiveLoadStatusChanged_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcHighDensityScatterSeriesModule } from 'igniteui-charts/igc-high-density-scatter-series-module';\r\n\r\nimport { IgcGeographicHighDensityScatterSeriesComponent } from './igc-geographic-high-density-scatter-series-component';\r\nimport { GeographicHighDensityScatterSeries } from './GeographicHighDensityScatterSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicHighDensityScatterSeriesModule {\r\n    public static register(): void {\r\nIgcHighDensityScatterSeriesModule.register();\r\n        IgcGeographicHighDensityScatterSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicHighDensityScatterSeriesComponent\", IgcGeographicHighDensityScatterSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicHighDensityScatterSeries\", (<any>GeographicHighDensityScatterSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { ArcGISOnlineTileSource } from \"igniteui-core/ArcGISOnlineTileSource\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { Base, Type, String_$type, Boolean_$type, typeCast, markType } from \"igniteui-core/type\";\r\nimport { Uri } from \"igniteui-core/Uri\";\r\nimport { TokenResponseModel } from \"./TokenResponseModel\";\r\nimport { MapServerResponseModel } from \"./MapServerResponseModel\";\r\nimport { TileInfoResponseModel } from \"./TileInfoResponseModel\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { UriKind } from \"igniteui-core/UriKind\";\r\nimport { HttpRequestUtil } from \"igniteui-core/httpRequestUtil\";\r\nimport { stringIsNullOrEmpty, stringRemove } from \"igniteui-core/string\";\r\nimport { stringFormat1, stringFormat } from \"igniteui-core/stringExtended\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ArcGISOnlineMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(ArcGISOnlineMapImagery, 'ArcGISOnlineMapImagery', (<any>GeographicMapImagery).$);\r\n\tprivate static readonly bv: string = \"generateToken?username={0}&password={1}&client=referer&referer={2}&expiration={3}&f=pjson\";\r\n\tconstructor() {\r\n\t\tsuper(new ArcGISOnlineTileSource());\r\n\t\tthis.bt = \"localhost\";\r\n\t\tthis.bu = \"https://www.arcgis.com/sharing/\";\r\n\t\tthis.bp = 60;\r\n\t\tthis.userToken = null;\r\n\t\tthis.getResponseCompleted_MapServerResponse = this.getResponseCompleted_MapServerResponse.bind(this);\r\n\t\tthis.getResponseCompleted_TokenResponse = this.getResponseCompleted_TokenResponse.bind(this);\r\n\t}\r\n\tstatic readonly mapServerUriProperty: DependencyProperty = DependencyProperty.i(\"MapServerUri\", String_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, null, ArcGISOnlineMapImagery.cd));\r\n\tget mapServerUri(): string {\r\n\t\treturn <string>this.c(ArcGISOnlineMapImagery.mapServerUriProperty);\r\n\t}\r\n\tset mapServerUri(a: string) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.mapServerUriProperty, a);\r\n\t}\r\n\tprivate static cd(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"MapServerUri\", b.oldValue, b.newValue);\r\n\t}\r\n\tstatic readonly userNameProperty: DependencyProperty = DependencyProperty.i(\"UserName\", String_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, null, ArcGISOnlineMapImagery.cg));\r\n\tget userName(): string {\r\n\t\treturn <string>this.c(ArcGISOnlineMapImagery.userNameProperty);\r\n\t}\r\n\tset userName(a: string) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.userNameProperty, a);\r\n\t}\r\n\tprivate static cg(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"UserName\", b.oldValue, b.newValue);\r\n\t}\r\n\tstatic readonly passwordProperty: DependencyProperty = DependencyProperty.i(\"Password\", String_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, null, ArcGISOnlineMapImagery.ce));\r\n\tget password(): string {\r\n\t\treturn <string>this.c(ArcGISOnlineMapImagery.passwordProperty);\r\n\t}\r\n\tset password(a: string) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.passwordProperty, a);\r\n\t}\r\n\tprivate static ce(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"Password\", b.oldValue, b.newValue);\r\n\t}\r\n\tstatic readonly userTokenProperty: DependencyProperty = DependencyProperty.i(\"UserToken\", String_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, null, ArcGISOnlineMapImagery.ch));\r\n\tget userToken(): string {\r\n\t\treturn <string>this.c(ArcGISOnlineMapImagery.userTokenProperty);\r\n\t}\r\n\tset userToken(a: string) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.userTokenProperty, a);\r\n\t}\r\n\tprivate static ch(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"UserToken\", b.oldValue, b.newValue);\r\n\t}\r\n\tstatic readonly isMapPublicProperty: DependencyProperty = DependencyProperty.i(\"IsMapPublic\", Boolean_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, true, ArcGISOnlineMapImagery.cc));\r\n\tget isMapPublic(): boolean {\r\n\t\treturn <boolean>this.c(ArcGISOnlineMapImagery.isMapPublicProperty);\r\n\t}\r\n\tset isMapPublic(a: boolean) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.isMapPublicProperty, a);\r\n\t}\r\n\tprivate static cc(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"IsMapPublic\", b.oldValue, b.newValue);\r\n\t}\r\n\tprivate bp: number = 0;\r\n\tget defaultTokenTimeout(): number {\r\n\t\treturn this.bp;\r\n\t}\r\n\tset defaultTokenTimeout(a: number) {\r\n\t\tthis.bp = a;\r\n\t\tthis.b8(true);\r\n\t}\r\n\tprivate bu: string = null;\r\n\tget tokenGenerationEndPoint(): string {\r\n\t\treturn this.bu;\r\n\t}\r\n\tset tokenGenerationEndPoint(a: string) {\r\n\t\tthis.bu = a;\r\n\t\tthis.b8(true);\r\n\t}\r\n\tprivate bt: string = null;\r\n\tget refererUri(): string {\r\n\t\treturn this.bt;\r\n\t}\r\n\tset refererUri(a: string) {\r\n\t\tthis.bt = a;\r\n\t\tthis.b8(true);\r\n\t}\r\n\tacquireNewToken(): void {\r\n\t\tthis.b8(true);\r\n\t}\r\n\tprivate b9(a: () => void): void {\r\n\t\ta();\r\n\t}\r\n\tprivate b8(a: boolean): void {\r\n\t\tif (stringIsNullOrEmpty(this.userToken) && a == false) {\r\n\t\t\tthis.ci();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet b = this.tokenGenerationEndPoint;\r\n\t\tif (stringIsNullOrEmpty(b)) {\r\n\t\t\tthis.userToken = \"\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (b.substr(b.length - 1, 1) != \"/\") {\r\n\t\t\tb += \"/\";\r\n\t\t}\r\n\t\tif (stringIsNullOrEmpty(this.refererUri)) {\r\n\t\t\tthis.userToken = \"\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet c = this.defaultTokenTimeout;\r\n\t\tif (c < 1) {\r\n\t\t\tc = 1;\r\n\t\t}\r\n\t\tb += stringFormat1(ArcGISOnlineMapImagery.bv, this.userName, this.password, this.refererUri, c);\r\n\t\tif (!Uri.isWellFormedUriString(b, 1)) {\r\n\t\t\tthis.userToken = \"\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet url_ = b;\r\n\t\tthis._pendingTokenRequest_ = HttpRequestUtil.submit(url_, this.getResponseCompleted_TokenResponse, null );\r\n\t}\r\n\tprivate ci(): void {\r\n\t\tif (stringIsNullOrEmpty(this.mapServerUri)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet a = this.mapServerUri;\r\n\t\tif (a.substr(a.length - 1, 1) == \"/\") {\r\n\t\t\tstringRemove(a, a.length - 1, 1);\r\n\t\t}\r\n\t\tif (!this.isMapPublic) {\r\n\t\t\tif (stringIsNullOrEmpty(this.userToken)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\ta = stringFormat(\"{0}?f=json&token={1}\", a, this.userToken);\r\n\t\t} else {\r\n\t\t\ta = stringFormat(\"{0}?f=json\", a);\r\n\t\t}\r\n\t\tif (!Uri.isWellFormedUriString(a, 1)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet url_ = a;\r\n\t\tthis._pendingMapServerRequest_ = HttpRequestUtil.submit(url_, this.getResponseCompleted_MapServerResponse, null );\r\n\t}\r\n\tprivate _pendingTokenRequest_: any = null;\r\n\tprivate _pendingMapServerRequest_: any = null;\r\n\tprivate getResponseCompleted_TokenResponse(a: any, b: any): void {\r\n\t\tif (b != this._pendingTokenRequest_) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pendingTokenRequest_ = null;\r\n\t\tlet data_ = a;\r\n\t\tlet c: TokenResponseModel = <TokenResponseModel>( JSON.parse(data_));\r\n\t\tif (c != null) {\r\n\t\t\tlet d: string = \"\";\r\n\t\t\tif (c.token != null) {\r\n\t\t\t\td = c.token;\r\n\t\t\t}\r\n\t\t\tthis.userToken = d;\r\n\t\t}\r\n\t}\r\n\tprivate getResponseCompleted_MapServerResponse(a: any, b: any): void {\r\n\t\tif (b != this._pendingMapServerRequest_) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pendingMapServerRequest_ = null;\r\n\t\tlet data_ = a;\r\n\t\tlet c: MapServerResponseModel = <MapServerResponseModel>( JSON.parse(data_));\r\n\t\tif ((c != null) && (c.tileInfo != null)) {\r\n\t\t\t(<ArcGISOnlineTileSource>this.ap).levelOfDetail = c.tileInfo.lods.length;\r\n\t\t}\r\n\t}\r\n\tprivate cf(a: string, b: any, c: any): void {\r\n\t\tlet d = typeCast<ArcGISOnlineTileSource>((<any>ArcGISOnlineTileSource).$, this.ap);\r\n\t\tswitch (a) {\r\n\t\t\tcase \"MapServerUri\":\r\n\t\t\tif (d != null) {\r\n\t\t\t\td.mapServerUri = typeCast<string>(String_$type, c);\r\n\t\t\t}\r\n\t\t\tthis.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"UserName\":\r\n\r\n\t\t\tcase \"Password\":\r\n\t\t\tif (stringIsNullOrEmpty(this.userName) || stringIsNullOrEmpty(this.password)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.b8(true);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"UserToken\":\r\n\t\t\tthis.b9(() => d.userToken = this.userToken);\r\n\t\t\tthis.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"IsMapPublic\":\r\n\t\t\td.isMapPublic = this.isMapPublic;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tsuper.ba(a, b, c);\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { ArcGISOnlineMapImagery as ArcGISOnlineMapImagery_internal } from \"./ArcGISOnlineMapImagery\";\r\nimport { ensureBool } from \"igniteui-core/componentUtil\";\r\n\r\n/**\r\n * UI element class used to display ArcGIS Online Map imagery in the IgxGeographicMap.Component\r\n*/\r\nexport class IgcArcGISOnlineMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : ArcGISOnlineMapImagery_internal\r\n{\r\n\treturn new ArcGISOnlineMapImagery_internal();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : ArcGISOnlineMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t/**\r\n\t * Gets or sets the map tile server uri.\r\n\t*/\r\n\tget mapServerUri() : string {\r\n\t\treturn (this.i.mapServerUri as string);\r\n\t}\r\n\tset mapServerUri(v: string) {\r\n\t\tthis.i.mapServerUri = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the UserName.\r\n\t*/\r\n\tget userName() : string {\r\n\t\treturn (this.i.userName as string);\r\n\t}\r\n\tset userName(v: string) {\r\n\t\tthis.i.userName = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the Password.\r\n\t*/\r\n\tget password() : string {\r\n\t\treturn (this.i.password as string);\r\n\t}\r\n\tset password(v: string) {\r\n\t\tthis.i.password = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the UserToken.\r\n\t*/\r\n\tget userToken() : string {\r\n\t\treturn (this.i.userToken as string);\r\n\t}\r\n\tset userToken(v: string) {\r\n\t\tthis.i.userToken = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the IsMapPublic variable.  A value of false requires authentication parameters.\r\n\t*/\r\n\tget isMapPublic() : boolean {\r\n\t\treturn (this.i.isMapPublic as boolean);\r\n\t}\r\n\tset isMapPublic(v: boolean) {\r\n\t\tthis.i.isMapPublic = ensureBool(v);\r\n\t}\r\n\t/**\r\n\t * Gets or Sets the Default Token Timeout before the Token Expires, this value is in Minutes\r\n\t*/\r\n\tget defaultTokenTimeout() : number {\r\n\t\treturn (this.i.defaultTokenTimeout as number);\r\n\t}\r\n\tset defaultTokenTimeout(v: number) {\r\n\t\tthis.i.defaultTokenTimeout = +v;\r\n\t}\r\n\t/**\r\n\t * Gets or Sets the current endpoint to retrieve the token.\r\n\t*/\r\n\tget tokenGenerationEndPoint() : string {\r\n\t\treturn (this.i.tokenGenerationEndPoint as string);\r\n\t}\r\n\tset tokenGenerationEndPoint(v: string) {\r\n\t\tthis.i.tokenGenerationEndPoint = v;\r\n\t}\r\n\t/**\r\n\t * Contains the User Supplied Referer Uri to be used in Token Generation.\r\n\t*/\r\n\tget refererUri() : string {\r\n\t\treturn (this.i.refererUri as string);\r\n\t}\r\n\tset refererUri(v: string) {\r\n\t\tthis.i.refererUri = v;\r\n\t}\r\n\t/**\r\n\t * Retreives a new token based on the preconfigured parameters and updates the UserToken field, Normal this is called automatically.\r\n\t * The is provided to the end-user to allow them to reteive tokens on their onw.\r\n\t\r\n\t*/\r\n\tpublic acquireNewToken() {\r\n\t\tthis.i.acquireNewToken();\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcArcGISOnlineMapImagery } from './igc-arc-gis-online-map-imagery';\r\nimport { ArcGISOnlineMapImagery } from './ArcGISOnlineMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcArcGISOnlineMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcArcGISOnlineMapImagery\", IgcArcGISOnlineMapImagery);\r\n        TypeRegistrar.register(\"ArcGISOnlineMapImagery\", (<any>ArcGISOnlineMapImagery).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcSeriesComponent } from 'igniteui-charts/igc-series-component';\r\nimport { GridMode, GridMode_$type } from 'igniteui-charts/GridMode';\r\nimport { IgcSeriesViewerComponent } from 'igniteui-charts/igc-series-viewer-component';\r\nimport { WebComponentRenderer, WebComponentWrapper } from 'igniteui-core/web-component-renderer';\r\nimport { Visibility, Visibility_$type } from 'igniteui-core/Visibility';\r\nimport { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { PointUtil, IEnumerable, TypeRegistrar, delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { Brush } from 'igniteui-core/Brush';\r\nimport { Color } from 'igniteui-core/Color';\r\nimport { Series } from 'igniteui-charts/Series';\r\nimport { Rect } from 'igniteui-core/Rect';\r\nimport { DataTemplate } from 'igniteui-core/DataTemplate';\r\nimport { BrushCollection } from 'igniteui-core/BrushCollection';\r\nimport { XamGeographicMap } from './XamGeographicMap';\r\nimport { CollectionAdapter, brushToString, stringToBrush, toPoint, fromPoint, toRect, fromRect, fromBrushCollection, toBrushCollection, ensureBool, ensureEnum, initializePropertiesFromCss, NamePatcher, enumToString, brushCollectionToString, rectToString, toSpinal } from \"igniteui-core/componentUtil\";\r\nimport { DataChartStylingDefaults } from 'igniteui-charts/DataChartStylingDefaults';\r\nimport { IgcDataContext } from 'igniteui-core/igc-data-context';\r\nimport { IgcSeriesCollection } from 'igniteui-charts/igc-series-collection';\r\nimport { SyncableObservableCollection$2 } from 'igniteui-core/SyncableObservableCollection$2';\r\nimport { NotifyCollectionChangedAction } from 'igniteui-core/NotifyCollectionChangedAction';\r\nimport { getAllPropertyNames, fromSpinal } from \"igniteui-core/componentUtil\";\r\nimport { IgEvent } from 'igniteui-core/IgEvent';\r\n\r\nimport { IgcNumericXAxisComponent } from 'igniteui-charts/igc-numeric-x-axis-component';\r\nimport { IgcNumericYAxisComponent } from 'igniteui-charts/igc-numeric-y-axis-component';\r\nimport { IgcImageTilesReadyEventArgs } from './igc-image-tiles-ready-event-args';\r\nimport { IgcGeographicMapImagery } from './igc-geographic-map-imagery';\r\nimport { RegisterElementHelper } from 'igniteui-core/module-manager';\r\nimport { MapResizeBehavior, MapResizeBehavior_$type } from './MapResizeBehavior';\r\nimport { MapBackgroundTilingMode, MapBackgroundTilingMode_$type } from './MapBackgroundTilingMode';\r\n\r\nexport class IgcGeographicMapComponent extends IgcSeriesViewerComponent {\r\n\r\n    contentSeries: IgcSeriesComponent[] = [];\r\n\r\n\tprivate _height: string;\r\n    private _width: string;\r\n\r\n    set height(value: string) {\r\n        this._height = value;\r\n        this.style.height = value;\r\n        this.notifyContainerResized();\r\n    }\r\n    get height(): string {\r\n        return this._height;\r\n    }\r\n\r\n    set width(value: string) {\r\n        this._width = value;\r\n        this.style.width = value;\r\n        this.notifyContainerResized();\r\n    }\r\n    get width(): string {\r\n        return this._width;\r\n    }\r\n\r\n    public notifyContainerResized() {\r\n        this._chart.notifyContainerResized();\r\n    }\r\n\r\n    /**\r\n\t * Gets or sets the legend used for the current chart.\r\n\t*/\r\n    get legend(): any {\r\n        if (this.i.legend != null)\r\n            return (<any>this.i.legend).externalObject;\r\n    }\r\n    set legend(v: any) {\r\n        if (v != undefined && v != null)\r\n            this.i.legend = v.i;\r\n    }\r\n\r\n\t/**\r\n\t * The series actually present in the chart. Do not directly modify this array.\r\n\t * This array's contents can be modified by causing Angular to reproject the child content.\r\n\t * Or adding and removing series from the manual series collection on the series property.\r\n\t */\r\n\tactualSeries: IgcSeriesComponent[] = [];\r\n\t\r\n\tprivate _container: any;\r\n\r\n\tprivate _series: IgcSeriesCollection = null;\r\n\t/**\r\n\t * A collection or manually added series for the chart.\r\n\t*/\r\n    get series(): IgcSeriesCollection {\r\n        if (this._series === null) {\r\n            let coll = new IgcSeriesCollection();\r\n            let inner: SyncableObservableCollection$2<IgcSeriesComponent, Series> = (<any>coll)._innerColl;\r\n            inner.addListener((sender, e) => {\r\n                if (!this._seriesAdapter) {\r\n                    return;\r\n                }\r\n                switch (e.action) {\r\n                    case NotifyCollectionChangedAction.Add:\r\n                        this._seriesAdapter.addManualItem(e.newItems.item(0));\r\n                        break;\r\n                    case NotifyCollectionChangedAction.Remove:\r\n                        this._seriesAdapter.removeManualItemAt(e.oldStartingIndex);\r\n                        break;\r\n                    case NotifyCollectionChangedAction.Replace:\r\n                        this._seriesAdapter.removeManualItemAt(e.oldStartingIndex);\r\n                        this._seriesAdapter.insertManualItem(e.newStartingIndex, e.newItems.item(0));\r\n                        break;\r\n                    case NotifyCollectionChangedAction.Reset:\r\n                        this._seriesAdapter.clearManualItems();\r\n                        break;\r\n                }\r\n            });\r\n            this._series = coll;\r\n        }\r\n        return this._series;\r\n    }\r\n\r\n    private _renderer: WebComponentRenderer;\r\n\r\n    constructor() {\r\n\r\n        super();\r\n\r\n        if ((this as any)._styling) {\r\n            NamePatcher.ensureStylablePatched(Object.getPrototypeOf(this));\r\n        }\r\n        this._renderer = new WebComponentRenderer(this,\r\n            document,\r\n            true, DataChartStylingDefaults);\r\n\r\n        //this._implementation = this.createImplementation();\r\n        this._container = this._renderer.createElement(\"div\");\r\n        this._renderer.updateRoot(this._container);\r\n        //this._renderer.rootWrapper.append(this._container);\r\n        this._container.setStyleProperty(\"display\", \"block\");\r\n        this._container.setStyleProperty(\"width\", \"100%\");\r\n        this._container.setStyleProperty(\"height\", \"100%\");\r\n\r\n        var root: any;\r\n        root = this._container;\r\n        if (this._container.nativeElement != null) {\r\n            root = this._container.nativeElement;\r\n        }\r\n\r\n        this._wrapper = this._renderer;\r\n        var chart = this.i;\r\n        this._chart = chart;\r\n\r\n        this._seriesAdapter = new CollectionAdapter<IgcSeriesComponent, Series>(\r\n            this.contentSeries,\r\n            this.i.series,\r\n            this.actualSeries,\r\n            (c) => c.i,\r\n            (i) => {\r\n                (<any>i).owner = this;\r\n                (<any>i)._provideRenderer(this._dataSource);\r\n                i.provideData(this._dataSource);\r\n                if (this.parentElement) {\r\n                    (i as any)._styling(this, this, this);\r\n                }\r\n                //i.bindAxes(this.axes);\r\n                this._ensureDefaultTooltip(i);\r\n                this._ensureTooltipCreated(i);\r\n            },\r\n            (i) => { (<any>i)._provideRenderer(null); i.provideData(null); }\r\n        );\r\n\r\n        chart.provideContainer(this._renderer);\r\n\r\n        let mut = new MutationObserver((list) => {\r\n            for (var mutation of list) {\r\n                if (mutation.type == 'childList') {\r\n                    this.updateContentChildren();\r\n                }\r\n            }\r\n        });\r\n        mut.observe(this, {\r\n            childList: true\r\n        });\r\n\r\n        this._renderer.addSizeWatcher(() => {\r\n            this.notifyContainerResized();\r\n        });\r\n    }\r\n\r\n    destroy() {\r\n        this._chart.destroy();\r\n        this._wrapper.destroy();\r\n    }\r\n\r\n\tprivate _wrapper: WebComponentRenderer;\r\n\r\n\tprotected createImplementation() {\r\n\t\treturn new XamGeographicMap();\r\n\t}\r\n\r\n\tprivate _chart: any;\r\n\r\n    private _dataSource: any = null;\r\n    set dataSource(value: any) {\r\n\t\tthis._dataSource = value;\r\n\t\tthis.bindData();\r\n\t}\r\n\tget dataSource(): any {\r\n\t\treturn this._dataSource;\r\n\t}\r\n\r\n\tbindData() {\r\n\t\r\n\t\tif (this.actualSeries && this.actualSeries.length > 0) {\r\n\t\t\tvar currSeries = this.actualSeries;\r\n\t\t\tfor (var i = 0; i < currSeries.length; i++) {\r\n\t\t\t\tcurrSeries[i].provideData(this._dataSource);\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n\r\n    private updateContentChildren() {\r\n        this.contentSeries.length = 0;\r\n        for (var i = 0; i < this.children.length; i++) {\r\n            if (this.children[i] instanceof IgcSeriesComponent) {\r\n                this.contentSeries.push(<IgcSeriesComponent>this.children[i]);\r\n            }\r\n        }\r\n        \r\n        if (this._seriesAdapter != null) {\r\n            this._seriesAdapter.notifyContentChanged();\r\n        }\r\n    }\r\n\r\n    private _seriesAdapter: CollectionAdapter<IgcSeriesComponent, Series> = null;\r\n\r\n    private _disconnected = false;\r\n    disconnectedCallback() {\r\n        this._disconnected = true;\r\n        if (this.i) {\r\n            this.i.onDetachedFromUI();\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        if (this._disconnected) {\r\n            this._disconnected = false;\r\n            if (this.i) {\r\n                this.i.onAttachedToUI();\r\n            }\r\n            return;\r\n        }\r\n        this.classList.add(\"igc-geographic-map\");\r\n        this.classList.add(\"ig-geographic-map\");\r\n\r\n        this.appendChild(this._renderer.rootWrapper.getNativeElement());\r\n        this._attached = true;\r\n        this.style.display = \"block\";\r\n        this.style.height = this._height;\r\n        this.style.width = this._width;\r\n        this._flushQueuedAttributes();\r\n        // supports themes or custom properties set in CSS \r\n        this._styling(this, this);\r\n        for (let i = 0; i < this.actualSeries.length; i++) {\r\n            let s = this.actualSeries[i];\r\n            (s as any)._styling(this, this, this);\r\n        }\r\n\r\n        this.updateContentChildren();\r\n        this.afterContentInit();\r\n    }\r\n\r\n\tafterContentInit() {\r\n\t\tif (TypeRegistrar.isRegistered(\"IgcDataChartDefaultTooltipsComponent\")) {\r\n\t\t\tlet cr = TypeRegistrar.create(\"IgcDataChartDefaultTooltipsComponent\");\r\n\t\t\t//let cr = cf.create(this._injector);\r\n            this._defaultTooltips = cr;\r\n\t\t\t(<any>cr).onContentReady = () => {\r\n\t\t\t\tthis._onDefaultTooltipsReady(cr);\r\n\t\t\t};\r\n\t\t\t//this._container.appendChild(cr.location.nativeElement);\r\n\t\t}\r\n\r\n\t\t\t\r\n\t\t\r\n\t\tthis.i.notifyContainerResized();\r\n\t}\r\n\r\n    private _ensureTooltipCreated(series: any) {\r\n        (<any>series)._ensureTooltipCreated(\r\n\t\t\t() => this.createTooltip(),\r\n\t\t\t(ele) => {\r\n\t\t\t\tlet wrapper = new WebComponentWrapper(\r\n\t\t\t\t\tele,\r\n\t\t\t\t\tthis._renderer\r\n\t\t\t\t);\r\n\t\t\t\t(<any>wrapper).updateToolTip = (<any>ele).updateToolTip;\r\n\t\t\t\t(<any>wrapper).hideToolTip = (<any>ele).hideToolTip;\r\n\t\t\t\treturn wrapper;\r\n\t\t\t});\r\n    }\r\n\r\n    private _defaultTooltips: any = null;\r\n\tprivate _ensureDefaultTooltip(series: IgcSeriesComponent) {\r\n        if (this._defaultTooltips == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n        this._defaultTooltips[\"ensureDefaultTooltip\"](series);\r\n\t}\r\n\r\n\tprivate _onDefaultTooltipsReady(cr: any) {\r\n\t\tif (this.actualSeries && this.actualSeries.length > 0) {\r\n\t\t\tvar currSeries = this.actualSeries;\r\n\t\t\tfor (var i = 0; i < currSeries.length; i++) {\r\n\t\t\t\tif (currSeries[i].showDefaultTooltip) {\r\n\t\t\t\t\tthis._ensureDefaultTooltip(currSeries[i])\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n    private createTooltip(): Element {\r\n\t\tif (!TypeRegistrar.isRegistered(\"IgcTooltipContainerComponent\")) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet cr = TypeRegistrar.create(\"IgcTooltipContainerComponent\");\r\n\t\tlet ele: Element = cr;\r\n\t\tlet self = this;\r\n\r\n\t\t(<any>ele).updateToolTip = function (c, isSubContent?: boolean) {\r\n            if (c.externalObject) {\r\n                c = c.externalObject;\r\n            } else {\r\n                let ext = new IgcDataContext();\r\n                (<any>ext)._implementation = c;\r\n                c = ext;\r\n            }\r\n\r\n            if (!isSubContent) {\r\n                if (ele.parentElement != self._container.getNativeElement()) {\r\n                    if (ele.parentElement != null) {\r\n                        ele.parentElement.removeChild(ele);\r\n                    }\r\n\r\n                    self._container.getNativeElement().appendChild(ele);\r\n                }\r\n            } else {\r\n                c.isSubContent = true;\r\n            }\r\n\t\t\t(<any>cr).context = c;\r\n\t\t\t(<any>ele).style.display = \"block\";\r\n\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\t(<any>ele).hideToolTip = function () {\r\n\t\t\t(<any>ele).style.display = \"none\"\r\n\t\t};\r\n\t\t(<any>ele).style.display = \"none\"\r\n\r\n\t\treturn cr;\r\n    }\r\n\r\n    /**\r\n\t * An imagery to display behind all series, inside the viewport of the IgxGeographicMapComponent control.\r\n\t*/\r\n    get backgroundContent(): IgcGeographicMapImagery {\r\n        if (this.i.backgroundContent != null) {\r\n            return (<any>this.i.backgroundContent).externalObject;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    set backgroundContent(v: IgcGeographicMapImagery) {\r\n        if (typeof (v) == \"string\" && v == \"empty\") {\r\n            this.i.backgroundContent = null;\r\n            this._a(\"backgroundContent\", \"empty\");\r\n            return;\r\n        }\r\n        if (v != undefined && v != null) {\r\n            this.i.backgroundContent = v.i;\r\n        } else {\r\n            this.i.backgroundContent = null;\r\n            this._a(\"backgroundContent\", \"empty\");\r\n        }\r\n    }\r\n\r\n    \t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : XamGeographicMap {\r\n\t\treturn this._implementation;\r\n\t}\r\n\r\n    \r\n\r\n    \t\r\n\t                private static _observedAttributesIgcGeographicMapComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicMapComponent._observedAttributesIgcGeographicMapComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicMapComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicMapComponent._observedAttributesIgcGeographicMapComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicMapComponent._observedAttributesIgcGeographicMapComponent;               \r\n\t                }                 \r\n\t            \r\n\r\n    \t\r\n\t                public static htmlTagName: string = \"igc-geographic-map\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicMapComponent._isElementRegistered) {\r\n\t                        IgcGeographicMapComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicMapComponent.htmlTagName,\r\n\t                            IgcGeographicMapComponent);\r\n\t                    }\r\n\t            }\r\n\r\n\t\t/**\r\n\t * Gets or sets zoomability of the current control\r\n\t*/\r\n\tget zoomable() : boolean {\r\n\t\treturn (this.i.wq as boolean);\r\n\t}\r\n\tset zoomable(v: boolean) {\r\n\t\tthis.i.wq = ensureBool(v);\r\n\t                                        this._a(\"zoomable\", this.i.wq);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the behavior to use during resize.\r\n\t*/\r\n\tget resizeBehavior() : MapResizeBehavior {\r\n\t\treturn this.i.wj;\r\n\t}\r\n\tset resizeBehavior(v: MapResizeBehavior) {\r\n\t\tthis.i.wj = ensureEnum<MapResizeBehavior>(MapResizeBehavior_$type, v);\r\n\t                                        this._a(\"resizeBehavior\", enumToString<MapResizeBehavior>(MapResizeBehavior_$type, this.i.wj));\r\n\t}\r\n\t/**\r\n\t * Gets or sets if the map should horizontally wrap.\r\n\t*/\r\n\tget isHorizontalWrappingEnabled() : boolean {\r\n\t\treturn (this.i.wn as boolean);\r\n\t}\r\n\tset isHorizontalWrappingEnabled(v: boolean) {\r\n\t\tthis.i.wn = ensureBool(v);\r\n\t                                        this._a(\"isHorizontalWrappingEnabled\", this.i.wn);\r\n\t}\r\n\t/**\r\n\t * Gets or sets if the map should horizontally wrap.\r\n\t*/\r\n\tget backgroundTilingMode() : MapBackgroundTilingMode {\r\n\t\treturn this.i.wf;\r\n\t}\r\n\tset backgroundTilingMode(v: MapBackgroundTilingMode) {\r\n\t\tthis.i.wf = ensureEnum<MapBackgroundTilingMode>(MapBackgroundTilingMode_$type, v);\r\n\t                                        this._a(\"backgroundTilingMode\", enumToString<MapBackgroundTilingMode>(MapBackgroundTilingMode_$type, this.i.wf));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether to use the uncoerced world rect to constrain the zoom bounds.\r\n\t*/\r\n\tget useWorldRectForZoomBounds() : boolean {\r\n\t\treturn (this.i.wp as boolean);\r\n\t}\r\n\tset useWorldRectForZoomBounds(v: boolean) {\r\n\t\tthis.i.wp = ensureBool(v);\r\n\t                                        this._a(\"useWorldRectForZoomBounds\", this.i.wp);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether skip resetting the zoom when the world rect changes.\r\n\t*/\r\n\tget suppressZoomResetOnWorldRectChange() : boolean {\r\n\t\treturn (this.i.wo as boolean);\r\n\t}\r\n\tset suppressZoomResetOnWorldRectChange(v: boolean) {\r\n\t\tthis.i.wo = ensureBool(v);\r\n\t                                        this._a(\"suppressZoomResetOnWorldRectChange\", this.i.wo);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the world bounding rectangle.\r\n\t*/\r\n\tget worldRect() : IgRect {\r\n\t\treturn fromRect(this.i.yl);\r\n\t}\r\n\tset worldRect(v: IgRect) {\r\n\t\tthis.i.yl = toRect(v);\r\n\t                                        this._a(\"worldRect\", rectToString(this.i.yl));\r\n\t}\r\n\t/**\r\n\t * Gets the actual value of the WorldRect.\r\n\t*/\r\n\tget actualWorldRect() : IgRect {\r\n\t\treturn fromRect(this.i.x9);\r\n\t}\r\n\tset actualWorldRect(v: IgRect) {\r\n\t\tthis.i.x9 = toRect(v);\r\n\t                                        this._a(\"actualWorldRect\", rectToString(this.i.x9));\r\n\t}\r\n\t/**\r\n\t * The X-axis for this IgxGeographicMap.Component\r\n\t * Under normal circumstances, this property should not be set in application code.  By default, it will be set to a numeric axis with a spherical mercator scaler.\r\n\t*/\r\n\tget xAxis() : IgcNumericXAxisComponent {\r\n\t                                        const r = this.i.v8;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcNumericXAxisComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset xAxis(v: IgcNumericXAxisComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.v8 = null : this.i.v8 = v.i;\r\n\t}\r\n\t/**\r\n\t * The Y-axis for this IgxGeographicMap.Component\r\n\t * Under normal circumstances, this property should not be set in application code.  By default, it will be set to a numeric axis with a spherical mercator scaler.\r\n\t*/\r\n\tget yAxis() : IgcNumericYAxisComponent {\r\n\t                                        const r = this.i.wa;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcNumericYAxisComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset yAxis(v: IgcNumericYAxisComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.wa = null : this.i.wa = v.i;\r\n\t}\r\n\t/**\r\n\t * Indicates if this SeriesViewer is a map.\r\n\t*/\r\n\tget isMap() : boolean {\r\n\t\treturn (this.i.e9 as boolean);\r\n\t}\r\n\t/**\r\n\t * A number between 0 and 1 determining the scale of the horizontal/vertical zoom.\r\n\t * This property is effectively a shortcut to the Width/Height of the WindowRect property.\r\n\t*/\r\n\tget windowScale() : number {\r\n\t\treturn (this.i.wv as number);\r\n\t}\r\n\tset windowScale(v: number) {\r\n\t\tthis.i.wv = +v;\r\n\t                                        this._a(\"windowScale\", this.i.wv);\r\n\t}\r\n\t/**\r\n\t * A number between 0 and 1 determining the scale of the horizontal/vertical zoom.\r\n\t * This property is effectively a shortcut to the Width/Height of the ActualWindowRect property.\r\n\t*/\r\n\tget actualWindowScale() : number {\r\n\t\treturn (this.i.wu as number);\r\n\t}\r\n\tset actualWindowScale(v: number) {\r\n\t\tthis.i.wu = +v;\r\n\t                                        this._a(\"actualWindowScale\", this.i.wu);\r\n\t}\r\n\t/**\r\n\t * Gets whether or not the control is ready for zooming\r\n\t*/\r\n\tget zoomIsReady() : boolean {\r\n\t\treturn (this.i.wr as boolean);\r\n\t}\r\n\r\n    \t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.backgroundContent && (this.backgroundContent as any).name && (this.backgroundContent as any).name == name) { return this.backgroundContent; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\r\n    \t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.xAxis && (this.xAxis as any)._styling) {\r\n\t    (this.xAxis as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.yAxis && (this.yAxis as any)._styling) {\r\n\t    (this.yAxis as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\r\n\t\t/**\r\n\t * Gets current world rect in geographic coordinates\r\n\t\r\n\t*/\r\n\tpublic getCurrentActualWorldRect() : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.yd();\r\n\t                        return fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * Given the current plot area of the control and a geographic region, get the WindowRect that would encompass that geographic region.\r\n\t\r\n\t* @param geographic  * The geographic area.\r\n\t*/\r\n\tpublic getZoomRectFromGeoRect(geographic: IgRect) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.getZoomRectFromGeoRect(toRect(geographic));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * Updates zoom window using window coordinates\r\n\t\r\n\t*/\r\n\tpublic updateZoomWindow(zoomWindow: IgRect) {\r\n\t\tthis.i.xp(toRect(zoomWindow));\r\n\t}\r\n\t/**\r\n\t * Updates world rect in geographic coordinates\r\n\t\r\n\t*/\r\n\tpublic updateWorldRect(worldRect: IgRect) {\r\n\t\tthis.i.xo(toRect(worldRect));\r\n\t}\r\n\t/**\r\n\t * Given the current plot area of the control and a geographic region, get the WindowRect that would encompass that geographic region.\r\n\t\r\n\t* @param geographic  * The geographic area.\r\n\t*/\r\n\tpublic getZoomFromGeographicRect(geographic: IgRect) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.getZoomFromGeographicRect(toRect(geographic));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\tpublic convertGeographicToZoom(geographic: IgRect, extraPixelPadding: number) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.ya(toRect(geographic), extraPixelPadding);\r\n\t                        return fromRect(iv);\r\n\t}\r\n\tpublic getZoomFromGeographicPoints(northWest: IgPoint, southEast: IgPoint) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.getZoomFromGeographicPoints(toPoint(northWest), toPoint(southEast));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * Given a WindowRect and the current plot area, get the geographic region represented by that WindowRect.\r\n\t\r\n\t* @param windowRect  * The zoom area.\r\n\t*/\r\n\tpublic getGeographicFromZoom(windowRect: IgRect) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.yf(toRect(windowRect));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * Convert a pixel-based coordinate to a geographic coordinate.\r\n\t\r\n\t* @param pixelCoordinate  * A pixel-based coordinate\r\n\t*/\r\n\tpublic getGeographicPoint(pixelCoordinate: IgPoint) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.x1(toPoint(pixelCoordinate));\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\t/**\r\n\t * Convert a geographic coordinate to a pixel-based coordinate.\r\n\t\r\n\t* @param geographicCoordinate  * A geographic coordinate\r\n\t*/\r\n\tpublic getPixelPoint(geographicCoordinate: IgPoint) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.x2(toPoint(geographicCoordinate));\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\t/**\r\n\t * Convert a geographic coordinate to a pixel-based coordinate.\r\n\t\r\n\t* @param geographicCoordinate  * A geographic coordinate\r\n\t*/\r\n\tpublic getWindowPoint(geographicCoordinate: IgPoint) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.x3(toPoint(geographicCoordinate));\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\t/**\r\n\t * Removes all cached tile images from the map imagery assigned to the map's background content.\r\n\t\r\n\t*/\r\n\tpublic clearTileCache() {\r\n\t\tthis.i.xc();\r\n\t}\r\n\t/**\r\n\t * Notifies the chart that the CSS styles in effect have been updated.\r\n\t\r\n\t*/\r\n\tpublic styleUpdated() {\r\n\t\tthis.i.xk();\r\n\t}\r\n\t/**\r\n\t * Gets actual window scale for horizontal dimension of the control\r\n\t\r\n\t*/\r\n\tpublic getActualWindowScaleHorizontal() : number {\r\n\t                        \r\n\t\tlet iv = this.i.hl();\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * Gets actual window scale for vertical dimension of the control\r\n\t\r\n\t*/\r\n\tpublic getActualWindowScaleVertical() : number {\r\n\t                        \r\n\t\tlet iv = this.i.hm();\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * Calls for a deferred refresh to the GeographicMap's background.\r\n\t\r\n\t*/\r\n\tpublic deferredRefresh() {\r\n\t\tthis.i.deferredRefresh();\r\n\t}\r\n\t/**\r\n\t * Returns the chart visuals expressed as a ChartVisualData object.\r\n\t\r\n\t*/\r\n\tpublic exportVisualData() : any {\r\n\t                        \r\n\t\tlet iv = this.i.wy();\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * Zoom in to the geographic region specified, when possible (may need to wait for map to be initialized).\r\n\t\r\n\t* @param geographic  * The geographic region to zoom to.\r\n\t*/\r\n\tpublic zoomToGeographic(geographic: IgRect) {\r\n\t\tthis.i.xr(toRect(geographic));\r\n\t}\r\n\r\n    \t\r\n\t    private _imageTilesReady: (s: IgcGeographicMapComponent, e: IgcImageTilesReadyEventArgs) => void = null;\r\n\t    private _imageTilesReady_wrapped: any = null;\r\n\t/**\r\n\t * This event is fired whenever the image tiles transition from a loading state (e.g. some are fading in) to a loaded state.\r\n\t*/\r\n\t\r\n\tpublic get imageTilesReady(): (s: IgcGeographicMapComponent, e: IgcImageTilesReadyEventArgs) => void {\r\n\treturn this._imageTilesReady;\r\n\t}\r\n\t    public set imageTilesReady(ev: (s: IgcGeographicMapComponent, e: IgcImageTilesReadyEventArgs) => void) {\r\n\t        if (this._imageTilesReady_wrapped !== null) {\r\n\t            this.i.imageTilesReady = delegateRemove(this.i.imageTilesReady, this._imageTilesReady_wrapped);\r\n\t            this._imageTilesReady_wrapped = null;\r\n\t            this._imageTilesReady = null;\r\n\t        }\r\n\t\r\n\t        this._imageTilesReady = ev;\r\n\t        this._imageTilesReady_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcImageTilesReadyEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeImageTilesReady) {\r\n\t                        (this as any).beforeImageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._imageTilesReady) {\r\n\t    this._imageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.imageTilesReady = delegateCombine(this.i.imageTilesReady, this._imageTilesReady_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcBingMapsMapImageryModule } from './igc-bing-maps-map-imagery-module';\r\nimport { IgcOpenStreetMapImageryModule } from './igc-open-street-map-imagery-module';\r\nimport { IgcCustomMapImageryModule } from './igc-custom-map-imagery-module';\r\nimport { IgcArcGISOnlineMapImageryModule } from './igc-arc-gis-online-map-imagery-module';\r\nimport { IgcGeographicMapComponent } from './igc-geographic-map-component';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\n\r\nexport class IgcGeographicMapCoreModule {\r\n    public static register() {\r\n                IgcBingMapsMapImageryModule.register();\r\n        IgcOpenStreetMapImageryModule.register();\r\n        IgcCustomMapImageryModule.register();\r\n        IgcArcGISOnlineMapImageryModule.register();\r\n        IgcGeographicMapComponent.register();\r\n        TypeRegistrar.registerCons('IgcGeographicMapComponent', IgcGeographicMapComponent);\r\n    }\r\n}","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { ImagesChangedEventArgs as ImagesChangedEventArgs_internal } from \"./ImagesChangedEventArgs\";\r\n\r\nexport class IgcImagesChangedEventArgs\r\n{\r\n\r\nprotected createImplementation() : ImagesChangedEventArgs_internal\r\n{\r\n\treturn new ImagesChangedEventArgs_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : ImagesChangedEventArgs_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcGeographicMapComponent } from \"./igc-geographic-map-component\";\r\nimport { IgcImageTilesReadyEventArgs } from \"./igc-image-tiles-ready-event-args\";\r\nimport { IgcImagesChangedEventArgs } from \"./igc-images-changed-event-args\";\r\nimport { IgcCancellingMultiScaleImageEventArgs } from \"igniteui-core/igc-cancelling-multi-scale-image-event-args\";\r\nimport { IgcDownloadingMultiScaleImageEventArgs } from \"igniteui-core/igc-downloading-multi-scale-image-event-args\";\r\nimport { GeographicMapImagery as GeographicMapImagery_internal } from \"./GeographicMapImagery\";\r\nimport { TypeRegistrar } from \"igniteui-core/type\";\r\nimport { IMapRenderDeferralHandler } from \"igniteui-core/IMapRenderDeferralHandler\";\r\nimport { fromRect, toRect, ensureBool } from \"igniteui-core/componentUtil\";\r\n\r\n/**\r\n * Control class used for displaying multi-scale TileSource imagery.  Designed to be used for background imagery in the IgxGeographicMap.Component\r\n*/\r\nexport abstract class IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : GeographicMapImagery_internal\r\n{\r\n\treturn null;\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : GeographicMapImagery_internal {\r\n\treturn this._implementation;\r\n\t}/**\r\n\t                             * @hidden \r\n\t                             */\r\n\tstatic _createFromInternal(internal: any) : IgcGeographicMapImagery {\r\n\t    if (!internal) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                if (!internal.$type) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                let name = internal.$type.name;\r\n\t                                let externalName = \"Igc\" + name + \"Component\";\r\n\t                                if (!TypeRegistrar.isRegistered(externalName)) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                return TypeRegistrar.create(externalName);\r\n\t                            }\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\t/**\r\n\t * The deferral handler to use for deferred refreshes.\r\n\t*/\r\n\tget deferralHandler() : IMapRenderDeferralHandler {\r\n\t\treturn this.i.deferralHandler as IMapRenderDeferralHandler;\r\n\t}\r\n\tset deferralHandler(v: IMapRenderDeferralHandler) {\r\n\t                                        this.i.deferralHandler = v;\r\n\t}\r\n\t/**\r\n\t * A rectangle representing the portion of the map imagery currently in view.\r\n\t * A rectangle at X=0, Y=0 with a Height and Width of 1 implies the entire plotting area is in view.  A Height and Width of .5 would imply that the view is halfway zoomed in.\r\n\t*/\r\n\tget windowRect() : IgRect {\r\n\t\treturn fromRect(this.i.windowRect);\r\n\t}\r\n\tset windowRect(v: IgRect) {\r\n\t\tthis.i.windowRect = toRect(v);\r\n\t}\r\n\t/**\r\n\t * The IgxGeographicMapComponent which is hosting this GeographicMapImagery control.\r\n\t*/\r\n\tget geographicMap() : IgcGeographicMapComponent {\r\n\t                                        const r = this.i.geographicMap;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset geographicMap(v: IgcGeographicMapComponent) {\r\n\t\tv == null ? this.i.geographicMap = null : this.i.geographicMap = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the referer sent in the headers of the tile request.\r\n\t*/\r\n\tget referer() : string {\r\n\t\treturn (this.i.referer as string);\r\n\t}\r\n\tset referer(v: string) {\r\n\t\tthis.i.referer = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets if horizontal wrapping is enabled for the imagery.\r\n\t*/\r\n\tget isHorizontalWrappingEnabled() : boolean {\r\n\t\treturn (this.i.isHorizontalWrappingEnabled as boolean);\r\n\t}\r\n\tset isHorizontalWrappingEnabled(v: boolean) {\r\n\t\tthis.i.isHorizontalWrappingEnabled = ensureBool(v);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the UserAgent sent in the headers of the tile request.\r\n\t*/\r\n\tget userAgent() : string {\r\n\t\treturn (this.i.userAgent as string);\r\n\t}\r\n\tset userAgent(v: string) {\r\n\t\tthis.i.userAgent = v;\r\n\t}\r\n\tget opacity() : number {\r\n\t\treturn (this.i.opacity as number);\r\n\t}\r\n\tset opacity(v: number) {\r\n\t\tthis.i.opacity = +v;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\tif (this.geographicMap && (this.geographicMap as any).name && (this.geographicMap as any).name == name) { return this.geographicMap; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t/**\r\n\t * Removes all cached tile Imagery from the\r\n\t\r\n\t*/\r\n\tpublic clearTileCache() {\r\n\t\tthis.i.clearTileCache();\r\n\t}\r\n\t\r\n\t    private _imageTilesReady: (s: IgcGeographicMapImagery, e: IgcImageTilesReadyEventArgs) => void = null;\r\n\t    private _imageTilesReady_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when the image tiles have been downloaded.\r\n\t*/\r\n\t\r\n\tpublic get imageTilesReady(): (s: IgcGeographicMapImagery, e: IgcImageTilesReadyEventArgs) => void {\r\n\treturn this._imageTilesReady;\r\n\t}\r\n\t    public set imageTilesReady(ev: (s: IgcGeographicMapImagery, e: IgcImageTilesReadyEventArgs) => void) {\r\n\t        if (this._imageTilesReady_wrapped !== null) {\r\n\t            this.i.imageTilesReady = delegateRemove(this.i.imageTilesReady, this._imageTilesReady_wrapped);\r\n\t            this._imageTilesReady_wrapped = null;\r\n\t            this._imageTilesReady = null;\r\n\t        }\r\n\t\r\n\t        this._imageTilesReady = ev;\r\n\t        this._imageTilesReady_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcImageTilesReadyEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeImageTilesReady) {\r\n\t                        (this as any).beforeImageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._imageTilesReady) {\r\n\t    this._imageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.imageTilesReady = delegateCombine(this.i.imageTilesReady, this._imageTilesReady_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _imagesChanged: (s: IgcGeographicMapImagery, e: IgcImagesChangedEventArgs) => void = null;\r\n\t    private _imagesChanged_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when tile images have changed.\r\n\t*/\r\n\t\r\n\tpublic get imagesChanged(): (s: IgcGeographicMapImagery, e: IgcImagesChangedEventArgs) => void {\r\n\treturn this._imagesChanged;\r\n\t}\r\n\t    public set imagesChanged(ev: (s: IgcGeographicMapImagery, e: IgcImagesChangedEventArgs) => void) {\r\n\t        if (this._imagesChanged_wrapped !== null) {\r\n\t            this.i.imagesChanged = delegateRemove(this.i.imagesChanged, this._imagesChanged_wrapped);\r\n\t            this._imagesChanged_wrapped = null;\r\n\t            this._imagesChanged = null;\r\n\t        }\r\n\t\r\n\t        this._imagesChanged = ev;\r\n\t        this._imagesChanged_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcImagesChangedEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeImagesChanged) {\r\n\t                        (this as any).beforeImagesChanged(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._imagesChanged) {\r\n\t    this._imagesChanged(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.imagesChanged = delegateCombine(this.i.imagesChanged, this._imagesChanged_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _cancellingImage: (s: IgcGeographicMapImagery, e: IgcCancellingMultiScaleImageEventArgs) => void = null;\r\n\t    private _cancellingImage_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when an image is being downloaded.\r\n\t*/\r\n\t\r\n\tpublic get cancellingImage(): (s: IgcGeographicMapImagery, e: IgcCancellingMultiScaleImageEventArgs) => void {\r\n\treturn this._cancellingImage;\r\n\t}\r\n\t    public set cancellingImage(ev: (s: IgcGeographicMapImagery, e: IgcCancellingMultiScaleImageEventArgs) => void) {\r\n\t        if (this._cancellingImage_wrapped !== null) {\r\n\t            this.i.cancellingImage = delegateRemove(this.i.cancellingImage, this._cancellingImage_wrapped);\r\n\t            this._cancellingImage_wrapped = null;\r\n\t            this._cancellingImage = null;\r\n\t        }\r\n\t\r\n\t        this._cancellingImage = ev;\r\n\t        this._cancellingImage_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcCancellingMultiScaleImageEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeCancellingImage) {\r\n\t                        (this as any).beforeCancellingImage(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._cancellingImage) {\r\n\t    this._cancellingImage(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.cancellingImage = delegateCombine(this.i.cancellingImage, this._cancellingImage_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _downloadingImage: (s: IgcGeographicMapImagery, e: IgcDownloadingMultiScaleImageEventArgs) => void = null;\r\n\t    private _downloadingImage_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when an image is being downloaded.\r\n\t*/\r\n\t\r\n\tpublic get downloadingImage(): (s: IgcGeographicMapImagery, e: IgcDownloadingMultiScaleImageEventArgs) => void {\r\n\treturn this._downloadingImage;\r\n\t}\r\n\t    public set downloadingImage(ev: (s: IgcGeographicMapImagery, e: IgcDownloadingMultiScaleImageEventArgs) => void) {\r\n\t        if (this._downloadingImage_wrapped !== null) {\r\n\t            this.i.downloadingImage = delegateRemove(this.i.downloadingImage, this._downloadingImage_wrapped);\r\n\t            this._downloadingImage_wrapped = null;\r\n\t            this._downloadingImage = null;\r\n\t        }\r\n\t\r\n\t        this._downloadingImage = ev;\r\n\t        this._downloadingImage_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcDownloadingMultiScaleImageEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeDownloadingImage) {\r\n\t                        (this as any).beforeDownloadingImage(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._downloadingImage) {\r\n\t    this._downloadingImage(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.downloadingImage = delegateCombine(this.i.downloadingImage, this._downloadingImage_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcGeographicShapeSeriesModule } from './igc-geographic-shape-series-module';\r\nimport { IgcGeographicPolylineSeriesModule } from './igc-geographic-polyline-series-module';\r\nimport { IgcTileGeneratorMapImageryModule } from './igc-tile-generator-map-imagery-module';\r\nimport { IgcHeatTileGeneratorModule } from 'igniteui-core/igc-heat-tile-generator-module';\r\nimport { IgcGeographicTileSeriesModule } from './igc-geographic-tile-series-module';\r\nimport { IgcSizeScaleModule } from 'igniteui-charts/igc-size-scale-module';\r\nimport { IgcValueBrushScaleModule } from 'igniteui-charts/igc-value-brush-scale-module';\r\nimport { IgcCustomPaletteColorScaleModule } from 'igniteui-charts/igc-custom-palette-color-scale-module';\r\nimport { IgcGeographicProportionalSymbolSeriesModule } from './igc-geographic-proportional-symbol-series-module';\r\nimport { IgcGeographicSymbolSeriesModule } from './igc-geographic-symbol-series-module';\r\nimport { IgcGeographicScatterAreaSeriesModule } from './igc-geographic-scatter-area-series-module';\r\nimport { IgcGeographicHighDensityScatterSeriesModule } from './igc-geographic-high-density-scatter-series-module';\r\nimport { IgcGeographicContourLineSeriesModule } from './igc-geographic-contour-line-series-module';\r\nimport { IgcGeographicMapCoreModule } from './igc-geographic-map-core-module';\r\nimport { IgcShapeDataSourceModule } from 'igniteui-core/igc-shape-data-source-module';\r\n\r\n\r\nexport class IgcGeographicMapModule {\r\n    public static register() {\r\n                IgcGeographicShapeSeriesModule.register();\r\n        IgcGeographicPolylineSeriesModule.register();\r\n        IgcTileGeneratorMapImageryModule.register();\r\n        IgcHeatTileGeneratorModule.register();\r\n        IgcGeographicTileSeriesModule.register();\r\n        IgcSizeScaleModule.register();\r\n        IgcValueBrushScaleModule.register();\r\n        IgcCustomPaletteColorScaleModule.register();\r\n        IgcGeographicProportionalSymbolSeriesModule.register();\r\n        IgcGeographicSymbolSeriesModule.register();\r\n        IgcGeographicScatterAreaSeriesModule.register();\r\n        IgcGeographicHighDensityScatterSeriesModule.register();\r\n        IgcGeographicContourLineSeriesModule.register();\r\n        IgcGeographicMapCoreModule.register();\r\n        IgcShapeDataSourceModule.register();\r\n\r\n    }\r\n}","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, toPoint, fromPoint, fromRect } from \"igniteui-core/componentUtil\";\r\n\r\n/**\r\n * Base class for hosting chart series in a IgxGeographicMap.Component\r\n*/\r\nexport abstract class IgcGeographicMapSeriesHostComponent extends IgcSeriesComponent\r\n{\r\n\r\n\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicMapSeriesHost {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicMapSeriesHostComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicMapSeriesHostComponent._observedAttributesIgcGeographicMapSeriesHostComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicMapSeriesHostComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicMapSeriesHostComponent._observedAttributesIgcGeographicMapSeriesHostComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicMapSeriesHostComponent._observedAttributesIgcGeographicMapSeriesHostComponent;               \r\n\t                }                 \r\n\t            \r\n\t/**\r\n\t * Checks if this control is geographic coordinate system\r\n\t*/\r\n\tget isGeographic() : boolean {\r\n\t\treturn (this.i.fa as boolean);\r\n\t}\r\n\t/**\r\n\t * Gets whether this series supports markers\r\n\t*/\r\n\tget hasMarkers() : boolean {\r\n\t\treturn (this.i.hasMarkers as boolean);\r\n\t}\r\n\t/**\r\n\t * The minimum scale at which this series becomes visible.\r\n\t * The default value for this property is 1.0, which means the series will always be visible.  At a VisibleFromScale setting of 0.0, the series will never be visible.  At a VisibleFromScale setting of 0.5, the series will be visible as long as the map is zoomed in to at least 200%.\r\n\t*/\r\n\tget visibleFromScale() : number {\r\n\t\treturn (this.i.wu as number);\r\n\t}\r\n\tset visibleFromScale(v: number) {\r\n\t\tthis.i.wu = +v;\r\n\t                                        this._a(\"visibleFromScale\", this.i.wu);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the coercion methods to use when loading data from data sources.\r\n\t * Should be specified before setting any member paths, if being used. Setting it later \r\n\t * will not cause data to be reimported into the chart.\r\n\t*/\r\n\tget coercionMethods() : any {\r\n\t\treturn this.i.coercionMethods as any;\r\n\t}\r\n\tset coercionMethods(v: any) {\r\n\t                                        this.i.coercionMethods = v;\r\n\t}\r\n\t/**\r\n\t * Called to notify about changes to indexed-based properties, e.g. Brushes, Outlines, MarkerBrushes, MarkerOutlines and refresh series\r\n\t\r\n\t*/\r\n\tpublic notifyIndexedPropertiesChanged() {\r\n\t\tthis.i.qc();\r\n\t}\r\n\tpublic getItemValue(item: any, memberPathName: string) : any {\r\n\t                        \r\n\t\tlet iv = this.i.ko(item, memberPathName);\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * Gets the value of a requested member path from the series.\r\n\t\r\n\t* @param memberPathName  * The property name of a valid member path for the series\r\n\t*/\r\n\tpublic getMemberPathValue(memberPathName: string) : string {\r\n\t                        \r\n\t\tlet iv = this.i.mb(memberPathName);\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * Gets the item that is the best match for the specified world coordinates.\r\n\t\r\n\t* @param world  * The world coordinates to use.\r\n\t*/\r\n\tpublic getItem(world: IgPoint) : any {\r\n\t                        \r\n\t\tlet iv = this.i.kl(toPoint(world));\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getPreviousOrExactIndex(world: IgPoint, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.j8(toPoint(world), skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getNextOrExactIndex(world: IgPoint, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.j6(toPoint(world), skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getSeriesValue(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.i3(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getSeriesValuePosition(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.v6(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\t/**\r\n\t * If possible, will return the best available value bounding box within the series that has the best value match for the world position provided.\r\n\t\r\n\t* @param world  * The world coordinate for which to get a value bounding box for\r\n\t*/\r\n\tpublic getSeriesValueBoundingBox(world: IgPoint) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.wh(toPoint(world));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * If possible, will return the best available value marker bounding box within the series that has the best value match for the world position provided.\r\n\t\r\n\t* @param world  * The world coordinates for which to get a value marker bounding box for\r\n\t*/\r\n\tpublic getSeriesValueMarkerBoundingBox(world: IgPoint) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.wj(toPoint(world));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\tpublic getSeriesHighValue(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.iz(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getSeriesHighValuePosition(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.v2(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\tpublic getSeriesLowValue(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.i1(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getSeriesLowValuePosition(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.v4(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\tpublic getSeriesValuePositionFromSeriesPixel(mouse: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.v7(toPoint(mouse), useInterpolation, skipUnknowns);\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\tpublic getSeriesValueFromSeriesPixel(mouse: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.i4(toPoint(mouse), useInterpolation, skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.\r\n\t\r\n\t*/\r\n\tpublic getItemSpan() : number {\r\n\t                        \r\n\t\tlet iv = this.i.iu();\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * Renders the series.\r\n\t\r\n\t* @param animate  * True if the change should be animated.\r\n\t*/\r\n\tpublic renderSeries(animate: boolean) {\r\n\t\tthis.i.rn(animate);\r\n\t}\r\n\t/**\r\n\t * Called when this series' Style is updated.\r\n\t\r\n\t*/\r\n\tpublic styleUpdated() {\r\n\t\tthis.i.r6();\r\n\t}\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { MarkerType, MarkerType_$type } from \"igniteui-charts/MarkerType\";\r\nimport { MarkerOutlineMode, MarkerOutlineMode_$type } from \"igniteui-charts/MarkerOutlineMode\";\r\nimport { MarkerFillMode, MarkerFillMode_$type } from \"igniteui-charts/MarkerFillMode\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicMarkerSeries } from \"./GeographicMarkerSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureEnum, enumToString, brushToString, stringToBrush } from \"igniteui-core/componentUtil\";\r\nimport { DataTemplate } from \"igniteui-core/DataTemplate\";\r\n\r\n/**\r\n * Base class for creating marker series in a IgxGeographicMap.Component\r\n*/\r\nexport abstract class IgcGeographicMarkerSeriesComponent extends IgcGeographicMapSeriesHostComponent\r\n{\r\n\r\n\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicMarkerSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicMarkerSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicMarkerSeriesComponent._observedAttributesIgcGeographicMarkerSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicMarkerSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicMarkerSeriesComponent._observedAttributesIgcGeographicMarkerSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicMarkerSeriesComponent._observedAttributesIgcGeographicMarkerSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t/**\r\n\t * Gets or sets the marker type for the current series object.\r\n\t * If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.\r\n\t*/\r\n\tget markerType() : MarkerType {\r\n\t\treturn this.i.w2;\r\n\t}\r\n\tset markerType(v: MarkerType) {\r\n\t\tthis.i.w2 = ensureEnum<MarkerType>(MarkerType_$type, v);\r\n\t                                        this._a(\"markerType\", enumToString<MarkerType>(MarkerType_$type, this.i.w2));\r\n\t}\r\n\t/**\r\n\t * Gets or sets thickness of the marker outline\r\n\t*/\r\n\tget markerThickness() : number {\r\n\t\treturn (this.i.w3 as number);\r\n\t}\r\n\tset markerThickness(v: number) {\r\n\t\tthis.i.w3 = +v;\r\n\t                                        this._a(\"markerThickness\", this.i.w3);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the marker outline is based on the marker brush of the series rather than the marker outlines collection.\r\n\t*/\r\n\tget markerOutlineMode() : MarkerOutlineMode {\r\n\t\treturn this.i.w1;\r\n\t}\r\n\tset markerOutlineMode(v: MarkerOutlineMode) {\r\n\t\tthis.i.w1 = ensureEnum<MarkerOutlineMode>(MarkerOutlineMode_$type, v);\r\n\t                                        this._a(\"markerOutlineMode\", enumToString<MarkerOutlineMode>(MarkerOutlineMode_$type, this.i.w1));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the marker fill is based on the marker outline of the series rather than the marker brushes collection.\r\n\t*/\r\n\tget markerFillMode() : MarkerFillMode {\r\n\t\treturn this.i.w0;\r\n\t}\r\n\tset markerFillMode(v: MarkerFillMode) {\r\n\t\tthis.i.w0 = ensureEnum<MarkerFillMode>(MarkerFillMode_$type, v);\r\n\t                                        this._a(\"markerFillMode\", enumToString<MarkerFillMode>(MarkerFillMode_$type, this.i.w0));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the MarkerTemplate for the current series object.\r\n\t*/\r\n\tget markerTemplate() : IgDataTemplate {\r\n\t\treturn (this.i.xi as IgDataTemplate);\r\n\t}\r\n\tset markerTemplate(v: IgDataTemplate) {\r\n\t\tthis.i.xi = ((v as any) as DataTemplate);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush that specifies how the current series object's marker interiors are painted.\r\n\t*/\r\n\tget markerBrush() : string {\r\n\t\treturn brushToString(this.i.xw);\r\n\t}\r\n\tset markerBrush(v: string) {\r\n\t\tthis.i.xw = stringToBrush(v);\r\n\t                                        this._a(\"markerBrush\", brushToString(this.i.xw));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush that specifies how the current series object's marker outlines are painted.\r\n\t*/\r\n\tget markerOutline() : string {\r\n\t\treturn brushToString(this.i.xx);\r\n\t}\r\n\tset markerOutline(v: string) {\r\n\t\tthis.i.xx = stringToBrush(v);\r\n\t                                        this._a(\"markerOutline\", brushToString(this.i.xx));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the maximum number of markerItems displayed by the current series.\r\n\t * If more than the specified number of markerItems are visible, the series will automatically\r\n\t * choose a representative set.\r\n\t*/\r\n\tget maximumMarkers() : number {\r\n\t\treturn (this.i.w4 as number);\r\n\t}\r\n\tset maximumMarkers(v: number) {\r\n\t\tthis.i.w4 = +v;\r\n\t                                        this._a(\"maximumMarkers\", this.i.w4);\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker template for the current series object.\r\n\t*/\r\n\tget actualMarkerTemplate() : IgDataTemplate {\r\n\t\treturn (this.i.xh as IgDataTemplate);\r\n\t}\r\n\tset actualMarkerTemplate(v: IgDataTemplate) {\r\n\t\tthis.i.xh = ((v as any) as DataTemplate);\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker brush for the current series object.\r\n\t*/\r\n\tget actualMarkerBrush() : string {\r\n\t\treturn brushToString(this.i.xu);\r\n\t}\r\n\tset actualMarkerBrush(v: string) {\r\n\t\tthis.i.xu = stringToBrush(v);\r\n\t                                        this._a(\"actualMarkerBrush\", brushToString(this.i.xu));\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker outline for the current series object.\r\n\t*/\r\n\tget actualMarkerOutline() : string {\r\n\t\treturn brushToString(this.i.xv);\r\n\t}\r\n\tset actualMarkerOutline(v: string) {\r\n\t\tthis.i.xv = stringToBrush(v);\r\n\t                                        this._a(\"actualMarkerOutline\", brushToString(this.i.xv));\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicShapeSeriesBaseView } from \"./GeographicShapeSeriesBaseView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterPolylineSeries } from \"igniteui-charts/ScatterPolylineSeries\";\r\nimport { Base, Type, markType, runOn, delegateCombine, markDep } from \"igniteui-core/type\";\r\nimport { GeographicShapeSeriesBase } from \"./GeographicShapeSeriesBase\";\r\nimport { StyleSelector } from \"igniteui-charts/StyleSelector\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { Style } from \"igniteui-core/Style\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { StyleShapeEventArgs } from \"igniteui-charts/StyleShapeEventArgs\";\r\nimport { ShapeSeriesBase } from \"igniteui-charts/ShapeSeriesBase\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicPolylineSeriesView extends GeographicShapeSeriesBaseView {\r\n\tstatic $t: Type = markType(GeographicPolylineSeriesView, 'GeographicPolylineSeriesView', (<any>GeographicShapeSeriesBaseView).$);\r\n\tconstructor(a: GeographicPolylineSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.cl = a;\r\n\t}\r\n\tprotected cl: GeographicPolylineSeries = null;\r\n\tau(): void {\r\n\t\tsuper.au();\r\n\t\tif (!this.q) {\r\n\t\t\tthis.cl.jn = Defaults.n;\r\n\t\t}\r\n\t}\r\n\tb5(): void {\r\n\t\tsuper.b5();\r\n\t\t(<ScatterPolylineSeries>this.cl.ws).zi = this.cl.xy;\r\n\t\t(<ScatterPolylineSeries>this.cl.ws).zn = this.cl.x6;\r\n\t}\r\n\tcm(): void {\r\n\t\t(<ScatterPolylineSeries>this.cl.ws).zi = this.cl.xy;\r\n\t}\r\n\tcn(): void {\r\n\t\t(<ScatterPolylineSeries>this.cl.ws).zn = this.cl.x6;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicPolylineSeries extends GeographicShapeSeriesBase {\r\n\tstatic $t: Type = markType(GeographicPolylineSeries, 'GeographicPolylineSeries', (<any>GeographicShapeSeriesBase).$);\r\n\tprotected bi(): Series {\r\n\t\treturn new GeographicPolylineSeries();\r\n\t}\r\n\tprotected get_fp(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicPolylineSeries).$;\r\n\t}\r\n\tprotected cq(): SeriesView {\r\n\t\treturn new GeographicPolylineSeriesView(this);\r\n\t}\r\n\tqx(a: SeriesView): void {\r\n\t\tsuper.qx(a);\r\n\t\tthis.xz = <GeographicPolylineSeriesView>a;\r\n\t}\r\n\txz: GeographicPolylineSeriesView;\r\n\txy: StyleSelector;\r\n\tx6: Style;\r\n\tprotected wr(): Series {\r\n\t\tlet a = new ScatterPolylineSeries();\r\n\t\ta.styleShape = delegateCombine(a.styleShape, runOn(this, this.x3));\r\n\t\treturn a;\r\n\t}\r\n\tprivate x3(a: any, b: StyleShapeEventArgs): void {\r\n\t\tif (this.styleShape != null) {\r\n\t\t\tthis.styleShape(this, b);\r\n\t\t}\r\n\t}\r\n\tstyleShape: (sender: any, e: StyleShapeEventArgs) => void = null;\r\n\tprotected q5(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.q5(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicPolylineSeries.$$p[1]:\r\n\t\t\tthis.xz.cm();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicPolylineSeries.$$p[0]:\r\n\t\t\tthis.xz.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicPolylineSeries, 'raisePropertyChanged', [ 'ShapeStyle:x6:x4', [ (<any>Style).$, null ], 'ShapeStyleSelector:xy:x5', [ (<any>StyleSelector).$, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcStyleShapeEventArgs } from \"igniteui-charts/igc-style-shape-event-args\";\r\nimport { IgcGeographicShapeSeriesBaseComponent } from \"./igc-geographic-shape-series-base-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicPolylineSeries } from \"./GeographicPolylineSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\nimport { Style } from \"igniteui-core/Style\";\r\n\r\n/**\r\n * Series class used for displaying multiple polylines, in a geographic context, for datasources which contain multiple lists of points.\r\n*/\r\nexport class IgcGeographicPolylineSeriesComponent extends IgcGeographicShapeSeriesBaseComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicPolylineSeries\r\n{\r\n\treturn new GeographicPolylineSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicPolylineSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicPolylineSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicPolylineSeriesComponent._observedAttributesIgcGeographicPolylineSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicPolylineSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicPolylineSeriesComponent._observedAttributesIgcGeographicPolylineSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicPolylineSeriesComponent._observedAttributesIgcGeographicPolylineSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-polyline-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicPolylineSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicPolylineSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicPolylineSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicPolylineSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a polyline shape.\r\n\t*/\r\n\tget isPolyline() : boolean {\r\n\t\treturn (this.i.fp as boolean);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the fill brush.\r\n\t*/\r\n\tget shapeFill() : string {\r\n\t\treturn this.i.x6 ? (this.i.x6.fill as string) : null;\r\n\t}\r\n\tset shapeFill(v: string) {\r\n\t\tthis.ensureShapeStyle();\r\n\t                                        this.i.x6.fill = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the stroke brush.\r\n\t*/\r\n\tget shapeStroke() : string {\r\n\t\treturn this.i.x6 ? (this.i.x6.stroke as string) : null;\r\n\t}\r\n\tset shapeStroke(v: string) {\r\n\t\tthis.ensureShapeStyle();\r\n\t                                        this.i.x6.stroke = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the stroke thickness.\r\n\t*/\r\n\tget shapeStrokeThickness() : number {\r\n\t\treturn this.i.x6 ? (this.i.x6.strokeThickness as number) : NaN;\r\n\t}\r\n\tset shapeStrokeThickness(v: number) {\r\n\t                                        this.ensureShapeStyle();\r\n\t\tthis.i.x6.strokeThickness = +v;\r\n\t                                        this._a(\"shapeStrokeThickness\", this.i.x6.strokeThickness);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the opacity.\r\n\t*/\r\n\tget shapeOpacity() : number {\r\n\t\treturn this.i.x6 ? (this.i.x6.opacity as number) : NaN;\r\n\t}\r\n\tset shapeOpacity(v: number) {\r\n\t                                        this.ensureShapeStyle();\r\n\t\tthis.i.x6.opacity = +v;\r\n\t                                        this._a(\"shapeOpacity\", this.i.x6.opacity);\r\n\t}\r\n\tensureShapeStyle() {\r\n\tif (this.i.x6) {\r\n\t                                            return;\r\n\t                                        }\r\n\t                                        this.i.x6 = new Style();\r\n\t\r\n\t                                }\r\n\t\r\n\t    private _styleShape: (s: IgcGeographicPolylineSeriesComponent, e: IgcStyleShapeEventArgs) => void = null;\r\n\t    private _styleShape_wrapped: any = null;\r\n\t\r\n\tpublic get styleShape(): (s: IgcGeographicPolylineSeriesComponent, e: IgcStyleShapeEventArgs) => void {\r\n\treturn this._styleShape;\r\n\t}\r\n\t    public set styleShape(ev: (s: IgcGeographicPolylineSeriesComponent, e: IgcStyleShapeEventArgs) => void) {\r\n\t        if (this._styleShape_wrapped !== null) {\r\n\t            this.i.styleShape = delegateRemove(this.i.styleShape, this._styleShape_wrapped);\r\n\t            this._styleShape_wrapped = null;\r\n\t            this._styleShape = null;\r\n\t        }\r\n\t\r\n\t        this._styleShape = ev;\r\n\t        this._styleShape_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcStyleShapeEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeStyleShape) {\r\n\t                        (this as any).beforeStyleShape(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._styleShape) {\r\n\t    this._styleShape(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.styleShape = delegateCombine(this.i.styleShape, this._styleShape_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterPolylineSeriesModule } from 'igniteui-charts/igc-scatter-polyline-series-module';\r\n\r\nimport { IgcGeographicPolylineSeriesComponent } from './igc-geographic-polyline-series-component';\r\nimport { GeographicPolylineSeries } from './GeographicPolylineSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicPolylineSeriesModule {\r\n    public static register(): void {\r\nIgcScatterPolylineSeriesModule.register();\r\n        IgcGeographicPolylineSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicPolylineSeriesComponent\", IgcGeographicPolylineSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicPolylineSeries\", (<any>GeographicPolylineSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { BubbleSeries } from \"igniteui-charts/BubbleSeries\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterBase } from \"igniteui-charts/ScatterBase\";\r\nimport { GeographicMarkerSeries } from \"./GeographicMarkerSeries\";\r\nimport { MarkerSeries } from \"igniteui-charts/MarkerSeries\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\nimport { Base, Type, markType, String_$type, Boolean_$type, Number_$type, enumGetBox, EnumUtil, typeGetValue, runOn, delegateCombine, delegateRemove, markDep } from \"igniteui-core/type\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { SizeScale } from \"igniteui-charts/SizeScale\";\r\nimport { BrushScale } from \"igniteui-charts/BrushScale\";\r\nimport { ScatterItemSearchMode, ScatterItemSearchMode_$type } from \"igniteui-charts/ScatterItemSearchMode\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { AssigningScatterStyleEventArgs } from \"igniteui-charts/AssigningScatterStyleEventArgs\";\r\nimport { AssigningScatterMarkerStyleEventArgs } from \"igniteui-charts/AssigningScatterMarkerStyleEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicProportionalSymbolSeriesView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicProportionalSymbolSeriesView, 'GeographicProportionalSymbolSeriesView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicProportionalSymbolSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ch = a;\r\n\t}\r\n\tprivate ch: GeographicProportionalSymbolSeries = null;\r\n\tau(): void {\r\n\t\tsuper.au();\r\n\t\tif (!this.q) {\r\n\t\t}\r\n\t}\r\n\tb5(): void {\r\n\t\tsuper.b5();\r\n\t\tlet a = <BubbleSeries>this.ch.ws;\r\n\t\ta.aal = this.ch.yr;\r\n\t\ta.aat = this.ch.yp;\r\n\t\ta.w2 = this.ch.w2;\r\n\t\ta.xu = this.ch.xi;\r\n\t\ta.xb = this.ch.w3;\r\n\t\ta.act = this.ch.yb;\r\n\t\ta.adj = this.ch.yw;\r\n\t\ta.acj = this.ch.x3;\r\n\t\ta.ac9 = this.ch.yn;\r\n\t\ta.ac4 = this.ch.yf;\r\n\t\ta.acg = this.ch.x0;\r\n\t\ta.acr = this.ch.x7;\r\n\t\ta.acs = this.ch.ya;\r\n\t\ta.acy = this.ch.yd;\r\n\t\ta.acx = this.ch.yc;\r\n\t}\r\n\tcq(): void {\r\n\t\t(<BubbleSeries>this.ch.ws).aal = this.ch.yr;\r\n\t}\r\n\tcp(): void {\r\n\t\t(<BubbleSeries>this.ch.ws).aat = this.ch.yp;\r\n\t}\r\n\tcv(): void {\r\n\t\t(<BubbleSeries>this.ch.ws).w2 = this.ch.w2;\r\n\t}\r\n\tct(): void {\r\n\t\t(<BubbleSeries>this.ch.ws).xu = this.ch.xi;\r\n\t}\r\n\tcu(): void {\r\n\t\t(<BubbleSeries>this.ch.ws).xb = this.ch.w3;\r\n\t}\r\n\tcw(): void {\r\n\t\t(<BubbleSeries>this.ch.ws).z1 = this.ch.w4;\r\n\t}\r\n\tcy(): void {\r\n\t\t(<BubbleSeries>this.ch.ws).xAxis = (<XamGeographicMap>this.ch.c9).v8;\r\n\t}\r\n\tcz(): void {\r\n\t\t(<BubbleSeries>this.ch.ws).yAxis = (<XamGeographicMap>this.ch.c9).wa;\r\n\t}\r\n\tcx(): void {\r\n\t\tlet a = <BubbleSeries>this.ch.ws;\r\n\t\tif (this.ch.c9 == null) {\r\n\t\t\ta.xAxis = null;\r\n\t\t\ta.yAxis = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.xAxis = (<XamGeographicMap>this.ch.c9).v8;\r\n\t\ta.yAxis = (<XamGeographicMap>this.ch.c9).wa;\r\n\t}\r\n\tcr(): void {\r\n\t\t(<BubbleSeries>this.ch.ws).yb = this.ch.xw;\r\n\t}\r\n\tcs(): void {\r\n\t\t(<BubbleSeries>this.ch.ws).yc = this.ch.xx;\r\n\t}\r\n\tc0(): void {\r\n\t\t(<BubbleSeries>this.ch.ws).adj = this.ch.yw;\r\n\t}\r\n\tc1(): void {\r\n\t\t(<BubbleSeries>this.ch.ws).acj = this.ch.x3;\r\n\t\t(<BubbleSeries>this.ch.ws).act = this.ch.yb;\r\n\t}\r\n\tcl(): void {\r\n\t\t(<BubbleSeries>this.ch.ws).ac9 = this.ch.yn;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<BubbleSeries>this.ch.ws).acg = this.ch.x0;\r\n\t\t(<BubbleSeries>this.ch.ws).acr = this.ch.x7;\r\n\t\t(<BubbleSeries>this.ch.ws).acs = this.ch.ya;\r\n\t\t(<BubbleSeries>this.ch.ws).acy = this.ch.yd;\r\n\t\t(<BubbleSeries>this.ch.ws).acx = this.ch.yc;\r\n\t}\r\n\tci(): void {\r\n\t\t(<BubbleSeries>this.ch.ws).ac4 = this.ch.yf;\r\n\t}\r\n\tc2(): void {\r\n\t\t(<BubbleSeries>this.ch.ws).act = this.ch.yb;\r\n\t}\r\n\tck(): void {\r\n\t\t(<BubbleSeries>this.ch.ws).acr = this.ch.x7;\r\n\t}\r\n\tco(): void {\r\n\t\t(<BubbleSeries>this.ch.ws).acs = this.ch.ya;\r\n\t}\r\n\tcn(): void {\r\n\t\t(<BubbleSeries>this.ch.ws).acy = this.ch.yd;\r\n\t}\r\n\tcm(): void {\r\n\t\t(<BubbleSeries>this.ch.ws).acx = this.ch.yc;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicProportionalSymbolSeries extends GeographicMarkerSeries {\r\n\tstatic $t: Type = markType(GeographicProportionalSymbolSeries, 'GeographicProportionalSymbolSeries', (<any>GeographicMarkerSeries).$);\r\n\tprotected bi(): Series {\r\n\t\treturn new GeographicProportionalSymbolSeries();\r\n\t}\r\n\tprotected get_eg(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicProportionalSymbolSeries).$;\r\n\t}\r\n\tprotected cq(): SeriesView {\r\n\t\treturn new GeographicProportionalSymbolSeriesView(this);\r\n\t}\r\n\tqx(a: SeriesView): void {\r\n\t\tsuper.qx(a);\r\n\t\tthis.x4 = <GeographicProportionalSymbolSeriesView>a;\r\n\t}\r\n\tx4: GeographicProportionalSymbolSeriesView;\r\n\tprotected jj(): number {\r\n\t\treturn 0.7;\r\n\t}\r\n\tprotected wr(): Series {\r\n\t\treturn new BubbleSeries();\r\n\t}\r\n\tprivate x1: BubbleSeries = null;\r\n\typ: string;\r\n\tyr: string;\r\n\tyw: string;\r\n\tx3: SizeScale;\r\n\tyn: string;\r\n\tyf: string;\r\n\tx0: BrushScale;\r\n\tx7: boolean;\r\n\tya: boolean;\r\n\tyd: number;\r\n\tyc: number;\r\n\tyb: boolean;\r\n\tx9: boolean;\r\n\tx8: boolean;\r\n\tprotected x6: boolean = false;\r\n\tprotected x5: boolean = false;\r\n\tprotected get_fc(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tassigningScatterStyle: (sender: any, args: AssigningScatterStyleEventArgs) => void = null;\r\n\tassigningScatterMarkerStyle: (sender: any, args: AssigningScatterMarkerStyleEventArgs) => void = null;\r\n\tx2: ScatterItemSearchMode;\r\n\tye: number;\r\n\tprotected q5(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.q5(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.x4.cx();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[9]:\r\n\t\t\tthis.x4.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[8]:\r\n\t\t\tthis.x4.cp();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"XAxis\":\r\n\t\t\tthis.x4.cy();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"YAxis\":\r\n\t\t\tthis.x4.cz();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[13]:\r\n\t\t\tthis.x4.c0();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[14]:\r\n\t\t\tthis.x4.c1();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[15]:\r\n\t\t\tthis.x4.c2();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[7]:\r\n\t\t\tthis.x4.cl();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[0]:\r\n\t\t\tthis.x4.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[1]:\r\n\t\t\tthis.x4.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[2]:\r\n\t\t\tthis.x4.ck();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[12]:\r\n\t\t\tthis.x4.co();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[11]:\r\n\t\t\tthis.x4.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[10]:\r\n\t\t\tthis.x4.cm();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[4]:\r\n\t\t\t(<ScatterBase>this.ws).zh = this.x9;\r\n\t\t\tthis.x6 = this.x9;\r\n\t\t\tif (this.x9) {\r\n\t\t\t\tlet e = (<ScatterBase>this.ws);\r\n\t\t\t\te.assigningScatterStyle = delegateCombine(e.assigningScatterStyle, runOn(this, this.y1));\r\n\t\t\t} else {\r\n\t\t\t\tlet f = (<ScatterBase>this.ws);\r\n\t\t\t\tf.assigningScatterStyle = delegateRemove(f.assigningScatterStyle, runOn(this, this.y1));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[3]:\r\n\t\t\t(<ScatterBase>this.ws).zg = this.x8;\r\n\t\t\tthis.x5 = this.x8;\r\n\t\t\tif (this.x9) {\r\n\t\t\t\tlet g = (<ScatterBase>this.ws);\r\n\t\t\t\tg.assigningScatterMarkerStyle = delegateCombine(g.assigningScatterMarkerStyle, runOn(this, this.y0));\r\n\t\t\t} else {\r\n\t\t\t\tlet h = (<ScatterBase>this.ws);\r\n\t\t\t\th.assigningScatterMarkerStyle = delegateRemove(h.assigningScatterMarkerStyle, runOn(this, this.y0));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[5]:\r\n\t\t\t(<ScatterBase>this.ws).y0 = this.x2;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[6]:\r\n\t\t\t(<ScatterBase>this.ws).z0 = this.ye;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate y1(a: any, b: AssigningScatterStyleEventArgs): void {\r\n\t\tif (this.assigningScatterStyle != null) {\r\n\t\t\tthis.assigningScatterStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate y0(a: any, b: AssigningScatterMarkerStyleEventArgs): void {\r\n\t\tif (this.assigningScatterMarkerStyle != null) {\r\n\t\t\tthis.assigningScatterMarkerStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicProportionalSymbolSeries, 'raisePropertyChanged', [ 'FillMemberPath:yf:y2', [ 2 ], 'FillScale:x0:y3', [ (<any>BrushScale).$ ], 'FillScaleUseGlobalValues:x7:y4', [ 0, false ], 'IsCustomScatterMarkerStyleAllowed:x8:y5', [ 0, false ], 'IsCustomScatterStyleAllowed:x9:y6', [ 0, false ], 'ItemSearchMode:x2:y7', [ ScatterItemSearchMode_$type, enumGetBox<ScatterItemSearchMode>(ScatterItemSearchMode_$type, 0) ], 'ItemSearchThreshold:ye:y8', [ 1, 10000 ], 'LabelMemberPath:yn:y9', [ 2 ], 'LatitudeMemberPath:yp:za', [ 2, null ], 'LongitudeMemberPath:yr:zb', [ 2, null ], 'MarkerBrushBrightness:yc:zc', [ 1, NaN ], 'MarkerOutlineBrightness:yd:zd', [ 1, NaN ], 'MarkerOutlineUsesFillScale:ya:ze', [ 0, false ], 'RadiusMemberPath:yw:zf', [ 2, null ], 'RadiusScale:x3:zg', [ (<any>SizeScale).$ ], 'RadiusScaleUseGlobalValues:yb:zh', [ 0, false ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcSizeScaleComponent } from \"igniteui-charts/igc-size-scale-component\";\r\nimport { IgcBrushScaleComponent } from \"igniteui-charts/igc-brush-scale-component\";\r\nimport { ScatterItemSearchMode, ScatterItemSearchMode_$type } from \"igniteui-charts/ScatterItemSearchMode\";\r\nimport { IgcAssigningScatterStyleEventArgs } from \"igniteui-charts/igc-assigning-scatter-style-event-args\";\r\nimport { IgcAssigningScatterMarkerStyleEventArgs } from \"igniteui-charts/igc-assigning-scatter-marker-style-event-args\";\r\nimport { IgcGeographicMarkerSeriesComponent } from \"./igc-geographic-marker-series-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicProportionalSymbolSeries } from \"./GeographicProportionalSymbolSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class for a geographic map with points marked at given locations.\r\n * This is the geographic equivalent of a ScatterSeries.\r\n*/\r\nexport class IgcGeographicProportionalSymbolSeriesComponent extends IgcGeographicMarkerSeriesComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicProportionalSymbolSeries\r\n{\r\n\treturn new GeographicProportionalSymbolSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicProportionalSymbolSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicProportionalSymbolSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicProportionalSymbolSeriesComponent._observedAttributesIgcGeographicProportionalSymbolSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicProportionalSymbolSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicProportionalSymbolSeriesComponent._observedAttributesIgcGeographicProportionalSymbolSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicProportionalSymbolSeriesComponent._observedAttributesIgcGeographicProportionalSymbolSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-proportional-symbol-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicProportionalSymbolSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicProportionalSymbolSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicProportionalSymbolSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicProportionalSymbolSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the series has only marker as visuals\r\n\t*/\r\n\tget hasOnlyMarkers() : boolean {\r\n\t\treturn (this.i.eg as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the latitude coordinate of the symbol.\r\n\t*/\r\n\tget latitudeMemberPath() : string {\r\n\t\treturn (this.i.yp as string);\r\n\t}\r\n\tset latitudeMemberPath(v: string) {\r\n\t\tthis.i.yp = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the longitude coordinate of the symbol.\r\n\t*/\r\n\tget longitudeMemberPath() : string {\r\n\t\treturn (this.i.yr as string);\r\n\t}\r\n\tset longitudeMemberPath(v: string) {\r\n\t\tthis.i.yr = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the radius mapping property for the current series object.\r\n\t*/\r\n\tget radiusMemberPath() : string {\r\n\t\treturn (this.i.yw as string);\r\n\t}\r\n\tset radiusMemberPath(v: string) {\r\n\t\tthis.i.yw = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the radius size scale for the bubbles.\r\n\t*/\r\n\tget radiusScale() : IgcSizeScaleComponent {\r\n\t                                        const r = this.i.x3;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcSizeScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset radiusScale(v: IgcSizeScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.x3 = null : this.i.x3 = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the Label mapping property for the current series object.\r\n\t*/\r\n\tget labelMemberPath() : string {\r\n\t\treturn (this.i.yn as string);\r\n\t}\r\n\tset labelMemberPath(v: string) {\r\n\t\tthis.i.yn = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the fill mapping property for the current series object.\r\n\t*/\r\n\tget fillMemberPath() : string {\r\n\t\treturn (this.i.yf as string);\r\n\t}\r\n\tset fillMemberPath(v: string) {\r\n\t\tthis.i.yf = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush scale for the marker brush.\r\n\t*/\r\n\tget fillScale() : IgcBrushScaleComponent {\r\n\t                                        const r = this.i.x0;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcBrushScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset fillScale(v: IgcBrushScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.x0 = null : this.i.x0 = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether or not the FillScale uses global values of FillMemberPath of multiple series.\r\n\t * This setting applies only if multiple series are using the same FillScale.\r\n\t*/\r\n\tget fillScaleUseGlobalValues() : boolean {\r\n\t\treturn (this.i.x7 as boolean);\r\n\t}\r\n\tset fillScaleUseGlobalValues(v: boolean) {\r\n\t\tthis.i.x7 = ensureBool(v);\r\n\t                                        this._a(\"fillScaleUseGlobalValues\", this.i.x7);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether or not the marker outline should use FillScale like the marker fill does.\r\n\t * This setting applies only if the current series has a FillScale set and it overrides MarkerOutline setting.\r\n\t*/\r\n\tget markerOutlineUsesFillScale() : boolean {\r\n\t\treturn (this.i.ya as boolean);\r\n\t}\r\n\tset markerOutlineUsesFillScale(v: boolean) {\r\n\t\tthis.i.ya = ensureBool(v);\r\n\t                                        this._a(\"markerOutlineUsesFillScale\", this.i.ya);\r\n\t}\r\n\t/**\r\n\t * Gets or sets brightness of the marker outline. Using negative value will change marker outline to darker color and positive value will change marker outline to brighter color \r\n\t * Note you can use any values between minimum value of -1 (darkest outline) and maximum value of 1 (brightest outline)\r\n\t*/\r\n\tget markerOutlineBrightness() : number {\r\n\t\treturn (this.i.yd as number);\r\n\t}\r\n\tset markerOutlineBrightness(v: number) {\r\n\t\tthis.i.yd = +v;\r\n\t                                        this._a(\"markerOutlineBrightness\", this.i.yd);\r\n\t}\r\n\t/**\r\n\t * Gets or sets brightness of the marker fill. Using negative value will change marker fill to darker color and positive value will change marker fill to brighter color \r\n\t * Note you can use any values between minimum value of -1 (darkest fill) and maximum value of 1 (brightest fill)\r\n\t*/\r\n\tget markerBrushBrightness() : number {\r\n\t\treturn (this.i.yc as number);\r\n\t}\r\n\tset markerBrushBrightness(v: number) {\r\n\t\tthis.i.yc = +v;\r\n\t                                        this._a(\"markerBrushBrightness\", this.i.yc);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether or not the RadiusScale uses global values of RadiusMemberPath of multiple series.\r\n\t * This setting applies only if multiple series are using the same RadiusScale.\r\n\t*/\r\n\tget radiusScaleUseGlobalValues() : boolean {\r\n\t\treturn (this.i.yb as boolean);\r\n\t}\r\n\tset radiusScaleUseGlobalValues(v: boolean) {\r\n\t\tthis.i.yb = ensureBool(v);\r\n\t                                        this._a(\"radiusScaleUseGlobalValues\", this.i.yb);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Scatter series should allow custom style overrides of its individual visuals.\r\n\t*/\r\n\tget isCustomScatterStyleAllowed() : boolean {\r\n\t\treturn (this.i.x9 as boolean);\r\n\t}\r\n\tset isCustomScatterStyleAllowed(v: boolean) {\r\n\t\tthis.i.x9 = ensureBool(v);\r\n\t                                        this._a(\"isCustomScatterStyleAllowed\", this.i.x9);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Scatter series should allow custom style overrides of its individual marker visuals.\r\n\t*/\r\n\tget isCustomScatterMarkerStyleAllowed() : boolean {\r\n\t\treturn (this.i.x8 as boolean);\r\n\t}\r\n\tset isCustomScatterMarkerStyleAllowed(v: boolean) {\r\n\t\tthis.i.x8 = ensureBool(v);\r\n\t                                        this._a(\"isCustomScatterMarkerStyleAllowed\", this.i.x8);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the mode the series will use to find the closest point to the cursor.\r\n\t*/\r\n\tget itemSearchMode() : ScatterItemSearchMode {\r\n\t\treturn this.i.x2;\r\n\t}\r\n\tset itemSearchMode(v: ScatterItemSearchMode) {\r\n\t\tthis.i.x2 = ensureEnum<ScatterItemSearchMode>(ScatterItemSearchMode_$type, v);\r\n\t                                        this._a(\"itemSearchMode\", enumToString<ScatterItemSearchMode>(ScatterItemSearchMode_$type, this.i.x2));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the threshold to use when searching for items using ItemSearchMode.\r\n\t*/\r\n\tget itemSearchThreshold() : number {\r\n\t\treturn (this.i.ye as number);\r\n\t}\r\n\tset itemSearchThreshold(v: number) {\r\n\t\tthis.i.ye = +v;\r\n\t                                        this._a(\"itemSearchThreshold\", this.i.ye);\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.radiusScale && (this.radiusScale as any).name && (this.radiusScale as any).name == name) { return this.radiusScale; }\r\n\tif (this.fillScale && (this.fillScale as any).name && (this.fillScale as any).name == name) { return this.fillScale; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.radiusScale && (this.radiusScale as any)._styling) {\r\n\t    (this.radiusScale as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.fillScale && (this.fillScale as any)._styling) {\r\n\t    (this.fillScale as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\t\r\n\t    private _assigningScatterStyle: (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void = null;\r\n\t    private _assigningScatterStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Category Style\r\n\t*/\r\n\t\r\n\tpublic get assigningScatterStyle(): (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void {\r\n\treturn this._assigningScatterStyle;\r\n\t}\r\n\t    public set assigningScatterStyle(ev: (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void) {\r\n\t        if (this._assigningScatterStyle_wrapped !== null) {\r\n\t            this.i.assigningScatterStyle = delegateRemove(this.i.assigningScatterStyle, this._assigningScatterStyle_wrapped);\r\n\t            this._assigningScatterStyle_wrapped = null;\r\n\t            this._assigningScatterStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningScatterStyle = ev;\r\n\t        this._assigningScatterStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningScatterStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningScatterStyle) {\r\n\t                        (this as any).beforeAssigningScatterStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningScatterStyle) {\r\n\t    this._assigningScatterStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningScatterStyle = delegateCombine(this.i.assigningScatterStyle, this._assigningScatterStyle_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _assigningScatterMarkerStyle: (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void = null;\r\n\t    private _assigningScatterMarkerStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Scatter Marker Style\r\n\t*/\r\n\t\r\n\tpublic get assigningScatterMarkerStyle(): (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void {\r\n\treturn this._assigningScatterMarkerStyle;\r\n\t}\r\n\t    public set assigningScatterMarkerStyle(ev: (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void) {\r\n\t        if (this._assigningScatterMarkerStyle_wrapped !== null) {\r\n\t            this.i.assigningScatterMarkerStyle = delegateRemove(this.i.assigningScatterMarkerStyle, this._assigningScatterMarkerStyle_wrapped);\r\n\t            this._assigningScatterMarkerStyle_wrapped = null;\r\n\t            this._assigningScatterMarkerStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningScatterMarkerStyle = ev;\r\n\t        this._assigningScatterMarkerStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningScatterMarkerStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningScatterMarkerStyle) {\r\n\t                        (this as any).beforeAssigningScatterMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningScatterMarkerStyle) {\r\n\t    this._assigningScatterMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningScatterMarkerStyle = delegateCombine(this.i.assigningScatterMarkerStyle, this._assigningScatterMarkerStyle_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcBubbleSeriesModule } from 'igniteui-charts/igc-bubble-series-module';\r\n\r\nimport { IgcGeographicProportionalSymbolSeriesComponent } from './igc-geographic-proportional-symbol-series-component';\r\nimport { GeographicProportionalSymbolSeries } from './GeographicProportionalSymbolSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicProportionalSymbolSeriesModule {\r\n    public static register(): void {\r\nIgcBubbleSeriesModule.register();\r\n        IgcGeographicProportionalSymbolSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicProportionalSymbolSeriesComponent\", IgcGeographicProportionalSymbolSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicProportionalSymbolSeries\", (<any>GeographicProportionalSymbolSeries).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcColorScaleComponent } from \"igniteui-charts/igc-color-scale-component\";\r\nimport { IgcTriangulationStatusEventArgs } from \"igniteui-core/igc-triangulation-status-event-args\";\r\nimport { IgcGeographicXYTriangulatingSeriesComponent } from \"./igc-geographic-xy-triangulating-series-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicScatterAreaSeries } from \"./GeographicScatterAreaSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class which draws a colored 2D surface, in a geographic context, based on a triangulation of XY data with numeric values assigned to each point.\r\n*/\r\nexport class IgcGeographicScatterAreaSeriesComponent extends IgcGeographicXYTriangulatingSeriesComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicScatterAreaSeries\r\n{\r\n\treturn new GeographicScatterAreaSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicScatterAreaSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicScatterAreaSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicScatterAreaSeriesComponent._observedAttributesIgcGeographicScatterAreaSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicScatterAreaSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicScatterAreaSeriesComponent._observedAttributesIgcGeographicScatterAreaSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicScatterAreaSeriesComponent._observedAttributesIgcGeographicScatterAreaSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-scatter-area-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicScatterAreaSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicScatterAreaSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicScatterAreaSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicScatterAreaSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows an area shape.\r\n\t*/\r\n\tget isArea() : boolean {\r\n\t\treturn (this.i.es as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property on each data item containing a numeric value which can be converted to a color by the ColorScale.\r\n\t*/\r\n\tget colorMemberPath() : string {\r\n\t\treturn (this.i.xq as string);\r\n\t}\r\n\tset colorMemberPath(v: string) {\r\n\t\tthis.i.xq = v;\r\n\t}\r\n\t/**\r\n\t * The ColorScale used to resolve the color values of points in the series.\r\n\t*/\r\n\tget colorScale() : IgcColorScaleComponent {\r\n\t                                        const r = this.i.xl;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcColorScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset colorScale(v: IgcColorScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.xl = null : this.i.xl = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets actual color scale that is set on ColorScale property or default ColorScale\r\n\t*/\r\n\tget actualColorScale() : IgcColorScaleComponent {\r\n\t                                        const r = this.i.xk;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcColorScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset actualColorScale(v: IgcColorScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.xk = null : this.i.xk = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.colorScale && (this.colorScale as any).name && (this.colorScale as any).name == name) { return this.colorScale; }\r\n\tif (this.actualColorScale && (this.actualColorScale as any).name && (this.actualColorScale as any).name == name) { return this.actualColorScale; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.colorScale && (this.colorScale as any)._styling) {\r\n\t    (this.colorScale as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.actualColorScale && (this.actualColorScale as any)._styling) {\r\n\t    (this.actualColorScale as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\t/**\r\n\t * Updates ActualColorScale properties using HostedSeries's ColorScale properties\r\n\t\r\n\t*/\r\n\tpublic updateActualColorScale() {\r\n\t\tthis.i.xv();\r\n\t}\r\n\t\r\n\t    private _triangulationStatusChanged: (s: IgcGeographicScatterAreaSeriesComponent, e: IgcTriangulationStatusEventArgs) => void = null;\r\n\t    private _triangulationStatusChanged_wrapped: any = null;\r\n\t/**\r\n\t * Raised when the status of an ongoing Triangulation has changed.\r\n\t*/\r\n\t\r\n\tpublic get triangulationStatusChanged(): (s: IgcGeographicScatterAreaSeriesComponent, e: IgcTriangulationStatusEventArgs) => void {\r\n\treturn this._triangulationStatusChanged;\r\n\t}\r\n\t    public set triangulationStatusChanged(ev: (s: IgcGeographicScatterAreaSeriesComponent, e: IgcTriangulationStatusEventArgs) => void) {\r\n\t        if (this._triangulationStatusChanged_wrapped !== null) {\r\n\t            this.i.triangulationStatusChanged = delegateRemove(this.i.triangulationStatusChanged, this._triangulationStatusChanged_wrapped);\r\n\t            this._triangulationStatusChanged_wrapped = null;\r\n\t            this._triangulationStatusChanged = null;\r\n\t        }\r\n\t\r\n\t        this._triangulationStatusChanged = ev;\r\n\t        this._triangulationStatusChanged_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcTriangulationStatusEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeTriangulationStatusChanged) {\r\n\t                        (this as any).beforeTriangulationStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._triangulationStatusChanged) {\r\n\t    this._triangulationStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.triangulationStatusChanged = delegateCombine(this.i.triangulationStatusChanged, this._triangulationStatusChanged_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterAreaSeriesModule } from 'igniteui-charts/igc-scatter-area-series-module';\r\n\r\nimport { IgcGeographicScatterAreaSeriesComponent } from './igc-geographic-scatter-area-series-component';\r\nimport { GeographicScatterAreaSeries } from './GeographicScatterAreaSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicScatterAreaSeriesModule {\r\n    public static register(): void {\r\nIgcScatterAreaSeriesModule.register();\r\n        IgcGeographicScatterAreaSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicScatterAreaSeriesComponent\", IgcGeographicScatterAreaSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicScatterAreaSeries\", (<any>GeographicScatterAreaSeries).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicShapeSeriesBase } from \"./GeographicShapeSeriesBase\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString } from \"igniteui-core/componentUtil\";\r\nimport { IgcShapeDataSource } from \"igniteui-core/igc-shape-data-source\";\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcAssigningShapeStyleEventArgs } from 'igniteui-charts/igc-assigning-shape-style-event-args';\r\nimport { IgcAssigningShapeMarkerStyleEventArgs } from 'igniteui-charts/igc-assigning-shape-marker-style-event-args';\r\nimport { ShapeItemSearchMode, ShapeItemSearchMode_$type } from 'igniteui-charts/ShapeItemSearchMode';\r\n\r\n/**\r\n * Base class for series which render polygons on a map.\r\n*/\r\nexport abstract class IgcGeographicShapeSeriesBaseComponent extends IgcGeographicMapSeriesHostComponent\r\n{\r\n\r\n\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicShapeSeriesBase {\r\n\t\treturn this._implementation;\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicShapeSeriesBaseComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicShapeSeriesBaseComponent._observedAttributesIgcGeographicShapeSeriesBaseComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicShapeSeriesBaseComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicShapeSeriesBaseComponent._observedAttributesIgcGeographicShapeSeriesBaseComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicShapeSeriesBaseComponent._observedAttributesIgcGeographicShapeSeriesBaseComponent;               \r\n\t                }                 \r\n\t            \r\n\r\n    private _shapeDataSource: string;\r\n\t/**\r\n \t * Gets or sets the string path of the .shp portion of the Shapefile.\r\n\t*/\r\n    set shapeDataSource(value: string) {\r\n        this._shapeDataSource = value;\r\n        this.updateShapeDataSource();\r\n    }\r\n    get shapeDataSource(): string {\r\n        return this._shapeDataSource;\r\n    }\r\n\r\n    private _databaseSource: string;\r\n\t/**\r\n\t * Gets or sets the string path of the .dbf portion of the Shapefile.\r\n\t*/\r\n    set databaseSource(value: string) {\r\n        this._databaseSource = value;\r\n        this.updateShapeDataSource();\r\n    }\r\n    get databaseSource(): string {\r\n        return this._databaseSource;\r\n    }\r\n\r\n    private _currData: any = null;\r\n    private _onImportCompleted: any = null;\r\n    protected onUpdateDataSource(dataSource: any): any {\r\n        if (this._onImportCompleted == null) {\r\n            this._onImportCompleted = (s, e) => {\r\n                if (this._currData) {\r\n                    this._currData.i.importCompleted = delegateRemove(this._currData.i.importCompleted, this._onImportCompleted);\r\n                    var data = this._currData;\r\n                    this._currData = null;\r\n                    this.i.itemsSource = data.getPointData();\r\n                }\r\n            };\r\n        }\r\n        \r\n        if (dataSource && dataSource.getPointData) {\r\n            if (dataSource.count > 0) {\r\n                return dataSource.getPointData();\r\n            }\r\n            this._currData = dataSource;\r\n            this._currData.i.importCompleted = delegateCombine(this._currData.i.importCompleted, this._onImportCompleted);\r\n            return null;\r\n        }\r\n        return dataSource;\r\n    }\r\n\r\n    private _cachedShapeDataSource: IgcShapeDataSource;\r\n    private updateShapeDataSource() {\r\n        if (this._cachedShapeDataSource == null) {\r\n            this._cachedShapeDataSource = new IgcShapeDataSource();\r\n            this.onShapeDataSourceImportCompleted = this.onShapeDataSourceImportCompleted.bind(this);\r\n            this._cachedShapeDataSource.importCompleted = this.onShapeDataSourceImportCompleted;\r\n        }\r\n\r\n        this._cachedShapeDataSource.shapefileSource = this._shapeDataSource;\r\n       \tthis._cachedShapeDataSource.databaseSource = this._databaseSource;\r\n\r\n        if (this._shapeDataSource && this._databaseSource) {\r\n            this._cachedShapeDataSource.dataBind();\r\n        }\r\n    }\r\n\r\n    private onShapeDataSourceImportCompleted(s: any, e: any) {\r\n        this.dataSource = this._cachedShapeDataSource.getPointData();\r\n    }\r\n\r\n\t/**\r\n\t * The name of the property on ItemsSource items which, for each shape, contains a list of points to be converted to a polygon.\r\n\t * To be consistent with the Shapefile technical description, it is expected that each list of points is defined as an IEnumerable of IEnumerable of Point, or in other words, a list of lists of points.\r\n\t*/\r\n\tget shapeMemberPath() : string {\r\n\t\treturn (this.i.xl as string);\r\n\t}\r\n\tset shapeMemberPath(v: string) {\r\n\t\tthis.i.xl = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Shape series should allow custom style overrides of its individual visuals.\r\n\t*/\r\n\tget isCustomShapeStyleAllowed() : boolean {\r\n\t\treturn (this.i.xa as boolean);\r\n\t}\r\n\tset isCustomShapeStyleAllowed(v: boolean) {\r\n\t\tthis.i.xa = ensureBool(v);\r\n\t                                        this._a(\"isCustomShapeStyleAllowed\", this.i.xa);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Shape series should allow custom style overrides of its individual marker visuals.\r\n\t*/\r\n\tget isCustomShapeMarkerStyleAllowed() : boolean {\r\n\t\treturn (this.i.w9 as boolean);\r\n\t}\r\n\tset isCustomShapeMarkerStyleAllowed(v: boolean) {\r\n\t\tthis.i.w9 = ensureBool(v);\r\n\t                                        this._a(\"isCustomShapeMarkerStyleAllowed\", this.i.w9);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the mode the series will use to find the closest point to the cursor.\r\n\t*/\r\n\tget itemSearchMode() : ShapeItemSearchMode {\r\n\t\treturn this.i.w2;\r\n\t}\r\n\tset itemSearchMode(v: ShapeItemSearchMode) {\r\n\t\tthis.i.w2 = ensureEnum<ShapeItemSearchMode>(ShapeItemSearchMode_$type, v);\r\n\t                                        this._a(\"itemSearchMode\", enumToString<ShapeItemSearchMode>(ShapeItemSearchMode_$type, this.i.w2));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the threshold to use when searching for items using ItemSearchMode.\r\n\t*/\r\n\tget itemSearchThreshold() : number {\r\n\t\treturn (this.i.xd as number);\r\n\t}\r\n\tset itemSearchThreshold(v: number) {\r\n\t\tthis.i.xd = +v;\r\n\t                                        this._a(\"itemSearchThreshold\", this.i.xd);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the points threshold to use when searching for items using ItemSearchMode.\r\n\t*/\r\n\tget itemSearchPointsThreshold() : number {\r\n\t\treturn (this.i.xc as number);\r\n\t}\r\n\tset itemSearchPointsThreshold(v: number) {\r\n\t\tthis.i.xc = +v;\r\n\t                                        this._a(\"itemSearchPointsThreshold\", this.i.xc);\r\n\t}\r\n\t/**\r\n\t * Set a shapefile datasource to use with the series.\r\n\t*/\r\n\tget shapefileDataSource() : IgcShapeDataSource {\r\n\t                                        const r = this.i.w5;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = new IgcShapeDataSource();\r\n\t                                            if ((r as any).$type) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            } else {\r\n\t                                                if ((e.i as any).setNativeElement) {\r\n\t                                                    (e.i as any).setNativeElement(r);\r\n\t                                                }\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset shapefileDataSource(v: IgcShapeDataSource) {\r\n\t\tv == null ? this.i.w5 = null : this.i.w5 = v.i;\r\n\t}\r\n\t/**\r\n\t * The resolution at which to filter out shapes in the series.  For example, if the ShapeFilterResolution is set to 3, then elements with a bounding rectangle smaller than 3 X 3 pixels will be filtered out.\r\n\t * In the case of GeographicPolylineSeries, the resolution is compared to either dimension, rather than both.  In other words, a polyline will not be filtered if its height or its width exceeds the value of this property.  Whereas with a ShapeSeries, both the height and the width must exceed the value of this property.\r\n\t*/\r\n\tget shapeFilterResolution() : number {\r\n\t\treturn (this.i.xb as number);\r\n\t}\r\n\tset shapeFilterResolution(v: number) {\r\n\t\tthis.i.xb = +v;\r\n\t                                        this._a(\"shapeFilterResolution\", this.i.xb);\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.shapefileDataSource && (this.shapefileDataSource as any).name && (this.shapefileDataSource as any).name == name) { return this.shapefileDataSource; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\r\n\r\n\t\r\n\t    private _assigningShapeStyle: (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeStyleEventArgs) => void = null;\r\n\t    private _assigningShapeStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Shape Style. Note, if using this event, or highlighting, its best to avoid use of ShapeStyle/StyleShape/ShapeStyleSelector.\r\n\t*/\r\n\t\r\n\tpublic get assigningShapeStyle(): (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeStyleEventArgs) => void {\r\n\treturn this._assigningShapeStyle;\r\n\t}\r\n\t    public set assigningShapeStyle(ev: (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeStyleEventArgs) => void) {\r\n\t        if (this._assigningShapeStyle_wrapped !== null) {\r\n\t            this.i.assigningShapeStyle = delegateRemove(this.i.assigningShapeStyle, this._assigningShapeStyle_wrapped);\r\n\t            this._assigningShapeStyle_wrapped = null;\r\n\t            this._assigningShapeStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningShapeStyle = ev;\r\n\t        this._assigningShapeStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningShapeStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningShapeStyle) {\r\n\t                        (this as any).beforeAssigningShapeStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningShapeStyle) {\r\n\t    this._assigningShapeStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningShapeStyle = delegateCombine(this.i.assigningShapeStyle, this._assigningShapeStyle_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _assigningShapeMarkerStyle: (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeMarkerStyleEventArgs) => void = null;\r\n\t    private _assigningShapeMarkerStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Shape Marker Style\r\n\t*/\r\n\t\r\n\tpublic get assigningShapeMarkerStyle(): (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeMarkerStyleEventArgs) => void {\r\n\treturn this._assigningShapeMarkerStyle;\r\n\t}\r\n\t    public set assigningShapeMarkerStyle(ev: (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeMarkerStyleEventArgs) => void) {\r\n\t        if (this._assigningShapeMarkerStyle_wrapped !== null) {\r\n\t            this.i.assigningShapeMarkerStyle = delegateRemove(this.i.assigningShapeMarkerStyle, this._assigningShapeMarkerStyle_wrapped);\r\n\t            this._assigningShapeMarkerStyle_wrapped = null;\r\n\t            this._assigningShapeMarkerStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningShapeMarkerStyle = ev;\r\n\t        this._assigningShapeMarkerStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningShapeMarkerStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningShapeMarkerStyle) {\r\n\t                        (this as any).beforeAssigningShapeMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningShapeMarkerStyle) {\r\n\t    this._assigningShapeMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningShapeMarkerStyle = delegateCombine(this.i.assigningShapeMarkerStyle, this._assigningShapeMarkerStyle_wrapped);;\r\n\t    }\r\n}","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicShapeSeriesBaseView } from \"./GeographicShapeSeriesBaseView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { GeographicShapeSeriesBase } from \"./GeographicShapeSeriesBase\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { MarkerType, MarkerType_$type } from \"igniteui-charts/MarkerType\";\r\nimport { MarkerFillMode, MarkerFillMode_$type } from \"igniteui-charts/MarkerFillMode\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterPolygonSeries } from \"igniteui-charts/ScatterPolygonSeries\";\r\nimport { Base, Type, markType, runOn, delegateCombine, typeCast, enumGetBox, EnumUtil, Number_$type, markDep } from \"igniteui-core/type\";\r\nimport { StyleSelector } from \"igniteui-charts/StyleSelector\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { Style } from \"igniteui-core/Style\";\r\nimport { MarkerOutlineMode, MarkerOutlineMode_$type } from \"igniteui-charts/MarkerOutlineMode\";\r\nimport { DataTemplate } from \"igniteui-core/DataTemplate\";\r\nimport { CollisionAvoidanceType, CollisionAvoidanceType_$type } from \"igniteui-charts/CollisionAvoidanceType\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { StyleShapeEventArgs } from \"igniteui-charts/StyleShapeEventArgs\";\r\nimport { ShapeSeriesBase } from \"igniteui-charts/ShapeSeriesBase\";\r\nimport { PropertyUpdatedEventArgs } from \"igniteui-core/PropertyUpdatedEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { DeviceUtils } from \"igniteui-core/DeviceUtils\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicShapeSeriesView extends GeographicShapeSeriesBaseView {\r\n\tstatic $t: Type = markType(GeographicShapeSeriesView, 'GeographicShapeSeriesView', (<any>GeographicShapeSeriesBaseView).$);\r\n\tconstructor(a: GeographicShapeSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.cl = a;\r\n\t\tif (!this.q) {\r\n\t\t\tthis.cl.xl = \"points\";\r\n\t\t}\r\n\t}\r\n\tprotected cl: GeographicShapeSeries = null;\r\n\tau(): void {\r\n\t\tsuper.au();\r\n\t\tif (!this.q) {\r\n\t\t\tthis.cl.y5 = Defaults.aj;\r\n\t\t\tthis.cl.jn = Defaults.p;\r\n\t\t\tthis.cl.x4 = Defaults.o;\r\n\t\t\tthis.cl.x1 = Defaults.d;\r\n\t\t\tthis.cl.xz = Defaults.a;\r\n\t\t}\r\n\t}\r\n\tb5(): void {\r\n\t\tsuper.b5();\r\n\t\t(<ScatterPolygonSeries>this.cl.ws).aa3 = this.cl.y7;\r\n\t\t(<ScatterPolygonSeries>this.cl.ws).zw = this.cl.x2;\r\n\t\t(<ScatterPolygonSeries>this.cl.ws).aai = this.cl.yn;\r\n\t\t(<ScatterPolygonSeries>this.cl.ws).zz = this.cl.x4;\r\n\t\t(<ScatterPolygonSeries>this.cl.ws).zi = this.cl.xy;\r\n\t}\r\n\tcq(): void {\r\n\t\t(<ScatterPolygonSeries>this.cl.ws).aai = this.cl.yn;\r\n\t}\r\n\tcs(): void {\r\n\t\t(<ScatterPolygonSeries>this.cl.ws).zz = this.cl.x4;\r\n\t}\r\n\tcn(): void {\r\n\t\t(<ScatterPolygonSeries>this.cl.ws).zi = this.cl.xy;\r\n\t}\r\n\tcr(): void {\r\n\t\t(<ScatterPolygonSeries>this.cl.ws).zr = this.cl.x1;\r\n\t}\r\n\tcm(): void {\r\n\t\t(<ScatterPolygonSeries>this.cl.ws).aaz = this.cl.y4;\r\n\t}\r\n\tco(): void {\r\n\t\t(<ScatterPolygonSeries>this.cl.ws).aa0 = this.cl.y5;\r\n\t}\r\n\tcp(): void {\r\n\t\t(<ScatterPolygonSeries>this.cl.ws).aa2 = this.cl.y6;\r\n\t}\r\n\tct(): void {\r\n\t\t(<ScatterPolygonSeries>this.cl.ws).zw = this.cl.x2;\r\n\t}\r\n\tcu(): void {\r\n\t\t(<ScatterPolygonSeries>this.cl.ws).aa3 = this.cl.y7;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicShapeSeries extends GeographicShapeSeriesBase {\r\n\tstatic $t: Type = markType(GeographicShapeSeries, 'GeographicShapeSeries', (<any>GeographicShapeSeriesBase).$);\r\n\tprotected bi(): Series {\r\n\t\treturn new GeographicShapeSeries();\r\n\t}\r\n\tprotected get_fo(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicShapeSeries).$;\r\n\t}\r\n\tprotected cq(): SeriesView {\r\n\t\treturn new GeographicShapeSeriesView(this);\r\n\t}\r\n\tx3: GeographicShapeSeriesView;\r\n\tqx(a: SeriesView): void {\r\n\t\tsuper.qx(a);\r\n\t\tthis.x3 = <GeographicShapeSeriesView>a;\r\n\t}\r\n\tprotected wr(): Series {\r\n\t\tlet a = new ScatterPolygonSeries();\r\n\t\ta.styleShape = delegateCombine(a.styleShape, runOn(this, this.yk));\r\n\t\ta.propertyUpdated = delegateCombine(a.propertyUpdated, runOn(this, this.yl));\r\n\t\treturn a;\r\n\t}\r\n\tprivate yk(a: any, b: StyleShapeEventArgs): void {\r\n\t\tif (this.styleShape != null) {\r\n\t\t\tthis.styleShape(this, b);\r\n\t\t}\r\n\t}\r\n\tstyleShape: (sender: any, e: StyleShapeEventArgs) => void = null;\r\n\tprivate yl(a: any, b: PropertyUpdatedEventArgs): void {\r\n\t\tlet c = typeCast<ScatterPolygonSeries>((<any>ScatterPolygonSeries).$, this.ws);\r\n\t\tif (c == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\tx2: StyleSelector;\r\n\ty7: Style;\r\n\tx1: MarkerType;\r\n\tx0: MarkerOutlineMode;\r\n\txz: MarkerFillMode;\r\n\tyn: DataTemplate;\r\n\ty4: Brush;\r\n\ty5: Brush;\r\n\ty6: Style;\r\n\tx4: number;\r\n\til(): number {\r\n\t\treturn this.x4;\r\n\t}\r\n\tvf(): Brush {\r\n\t\treturn this.y2;\r\n\t}\r\n\tvg(): Brush {\r\n\t\treturn this.y3;\r\n\t}\r\n\tst(): DataTemplate {\r\n\t\treturn this.ym;\r\n\t}\r\n\tl8(): string {\r\n\t\tlet a = typeCast<ScatterPolygonSeries>((<any>ScatterPolygonSeries).$, this.ws);\r\n\t\tif (a == null) {\r\n\t\t\treturn \"Unknown\";\r\n\t\t}\r\n\t\treturn a.l8();\r\n\t}\r\n\txy: CollisionAvoidanceType;\r\n\tprotected q5(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.q5(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicShapeSeries.$$p[6]:\r\n\t\t\t(<ScatterPolygonSeries>this.ws).zp = this.x0;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[5]:\r\n\t\t\t(<ScatterPolygonSeries>this.ws).zl = this.xz;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[9]:\r\n\t\t\tthis.x3.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[10]:\r\n\t\t\tthis.x3.cs();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[4]:\r\n\t\t\tthis.x3.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[11]:\r\n\t\t\tthis.x3.cr();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[3]:\r\n\t\t\tthis.x3.cm();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[7]:\r\n\t\t\tthis.x3.co();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[8]:\r\n\t\t\tthis.x3.cp();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[13]:\r\n\t\t\tthis.x3.ct();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[12]:\r\n\t\t\tthis.x3.cu();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprotected jj(): number {\r\n\t\treturn 0.7;\r\n\t}\r\n\tym: DataTemplate;\r\n\ty2: Brush;\r\n\ty3: Brush;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicShapeSeries, 'raisePropertyChanged', [ 'ActualMarkerBrush:y2:yo', [ (<any>Brush).$ ], 'ActualMarkerOutline:y3:yp', [ (<any>Brush).$ ], 'ActualMarkerTemplate:ym:yq', [ (<any>DataTemplate).$, null ], 'MarkerBrush:y4:yr', [ (<any>Brush).$ ], 'MarkerCollisionAvoidance:xy:ys', [ CollisionAvoidanceType_$type, enumGetBox<CollisionAvoidanceType>(CollisionAvoidanceType_$type, 0) ], 'MarkerFillMode:xz:yt', [ MarkerFillMode_$type, enumGetBox<MarkerFillMode>(MarkerFillMode_$type, 0) ], 'MarkerOutlineMode:x0:yu', [ MarkerOutlineMode_$type, enumGetBox<MarkerOutlineMode>(MarkerOutlineMode_$type, 0) ], 'MarkerOutline:y5:yv', [ (<any>Brush).$ ], 'MarkerStyle:y6:yw', [ (<any>Style).$ ], 'MarkerTemplate:yn:yx', [ (<any>DataTemplate).$, null ], 'MarkerThickness:x4:yy', [ 1, DeviceUtils.g(2) ], 'MarkerType:x1:yz', [ MarkerType_$type, enumGetBox<MarkerType>(MarkerType_$type, 2) ], 'ShapeStyle:y7:y0', [ (<any>Style).$, null ], 'ShapeStyleSelector:x2:y1', [ (<any>StyleSelector).$, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { MarkerType, MarkerType_$type } from \"igniteui-charts/MarkerType\";\r\nimport { MarkerOutlineMode, MarkerOutlineMode_$type } from \"igniteui-charts/MarkerOutlineMode\";\r\nimport { MarkerFillMode, MarkerFillMode_$type } from \"igniteui-charts/MarkerFillMode\";\r\nimport { CollisionAvoidanceType, CollisionAvoidanceType_$type } from \"igniteui-charts/CollisionAvoidanceType\";\r\nimport { IgcStyleShapeEventArgs } from \"igniteui-charts/igc-style-shape-event-args\";\r\nimport { IgcGeographicShapeSeriesBaseComponent } from \"./igc-geographic-shape-series-base-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicShapeSeries } from \"./GeographicShapeSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString, brushToString, stringToBrush } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\nimport { Style } from \"igniteui-core/Style\";\r\nimport { DataTemplate } from \"igniteui-core/DataTemplate\";\r\n\r\n/**\r\n * Series class which renders polygons as Paths, in a geographic context, based on lists of points in the ItemsSource.\r\n*/\r\nexport class IgcGeographicShapeSeriesComponent extends IgcGeographicShapeSeriesBaseComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicShapeSeries\r\n{\r\n\treturn new GeographicShapeSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicShapeSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicShapeSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicShapeSeriesComponent._observedAttributesIgcGeographicShapeSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicShapeSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicShapeSeriesComponent._observedAttributesIgcGeographicShapeSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicShapeSeriesComponent._observedAttributesIgcGeographicShapeSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-shape-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicShapeSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicShapeSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicShapeSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicShapeSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a polygon shape.\r\n\t*/\r\n\tget isPolygon() : boolean {\r\n\t\treturn (this.i.fo as boolean);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the fill brush.\r\n\t*/\r\n\tget shapeFill() : string {\r\n\t\treturn this.i.y7 ? (this.i.y7.fill as string) : null;\r\n\t}\r\n\tset shapeFill(v: string) {\r\n\t\tthis.ensureShapeStyle();\r\n\t                                        this.i.y7.fill = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the stroke brush.\r\n\t*/\r\n\tget shapeStroke() : string {\r\n\t\treturn this.i.y7 ? (this.i.y7.stroke as string) : null;\r\n\t}\r\n\tset shapeStroke(v: string) {\r\n\t\tthis.ensureShapeStyle();\r\n\t                                        this.i.y7.stroke = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the stroke thickness.\r\n\t*/\r\n\tget shapeStrokeThickness() : number {\r\n\t\treturn this.i.y7 ? (this.i.y7.strokeThickness as number) : NaN;\r\n\t}\r\n\tset shapeStrokeThickness(v: number) {\r\n\t                                        this.ensureShapeStyle();\r\n\t\tthis.i.y7.strokeThickness = +v;\r\n\t                                        this._a(\"shapeStrokeThickness\", this.i.y7.strokeThickness);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the opacity.\r\n\t*/\r\n\tget shapeOpacity() : number {\r\n\t\treturn this.i.y7 ? (this.i.y7.opacity as number) : NaN;\r\n\t}\r\n\tset shapeOpacity(v: number) {\r\n\t                                        this.ensureShapeStyle();\r\n\t\tthis.i.y7.opacity = +v;\r\n\t                                        this._a(\"shapeOpacity\", this.i.y7.opacity);\r\n\t}\r\n\tensureShapeStyle() {\r\n\tif (this.i.y7) {\r\n\t                                            return;\r\n\t                                        }\r\n\t                                        this.i.y7 = new Style();\r\n\t\r\n\t                                }\r\n\t/**\r\n\t * Gets or sets the marker type for the current series object.\r\n\t * If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.\r\n\t*/\r\n\tget markerType() : MarkerType {\r\n\t\treturn this.i.x1;\r\n\t}\r\n\tset markerType(v: MarkerType) {\r\n\t\tthis.i.x1 = ensureEnum<MarkerType>(MarkerType_$type, v);\r\n\t                                        this._a(\"markerType\", enumToString<MarkerType>(MarkerType_$type, this.i.x1));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the marker outline is based on the marker brush of the series rather than the marker outlines collection.\r\n\t*/\r\n\tget markerOutlineMode() : MarkerOutlineMode {\r\n\t\treturn this.i.x0;\r\n\t}\r\n\tset markerOutlineMode(v: MarkerOutlineMode) {\r\n\t\tthis.i.x0 = ensureEnum<MarkerOutlineMode>(MarkerOutlineMode_$type, v);\r\n\t                                        this._a(\"markerOutlineMode\", enumToString<MarkerOutlineMode>(MarkerOutlineMode_$type, this.i.x0));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the marker brush is based on the marker outline of the series rather than the marker brushes collection.\r\n\t*/\r\n\tget markerFillMode() : MarkerFillMode {\r\n\t\treturn this.i.xz;\r\n\t}\r\n\tset markerFillMode(v: MarkerFillMode) {\r\n\t\tthis.i.xz = ensureEnum<MarkerFillMode>(MarkerFillMode_$type, v);\r\n\t                                        this._a(\"markerFillMode\", enumToString<MarkerFillMode>(MarkerFillMode_$type, this.i.xz));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the MarkerTemplate for the current series object.\r\n\t*/\r\n\tget markerTemplate() : IgDataTemplate {\r\n\t\treturn (this.i.yn as IgDataTemplate);\r\n\t}\r\n\tset markerTemplate(v: IgDataTemplate) {\r\n\t\tthis.i.yn = ((v as any) as DataTemplate);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush that specifies how the current series object's marker interiors are painted.\r\n\t*/\r\n\tget markerBrush() : string {\r\n\t\treturn brushToString(this.i.y4);\r\n\t}\r\n\tset markerBrush(v: string) {\r\n\t\tthis.i.y4 = stringToBrush(v);\r\n\t                                        this._a(\"markerBrush\", brushToString(this.i.y4));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush that specifies how the current series object's marker outlines are painted.\r\n\t*/\r\n\tget markerOutline() : string {\r\n\t\treturn brushToString(this.i.y5);\r\n\t}\r\n\tset markerOutline(v: string) {\r\n\t\tthis.i.y5 = stringToBrush(v);\r\n\t                                        this._a(\"markerOutline\", brushToString(this.i.y5));\r\n\t}\r\n\t/**\r\n\t * Gets or sets thickness of the marker outline\r\n\t*/\r\n\tget markerThickness() : number {\r\n\t\treturn (this.i.x4 as number);\r\n\t}\r\n\tset markerThickness(v: number) {\r\n\t\tthis.i.x4 = +v;\r\n\t                                        this._a(\"markerThickness\", this.i.x4);\r\n\t}\r\n\t/**\r\n\t * The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision.\r\n\t*/\r\n\tget markerCollisionAvoidance() : CollisionAvoidanceType {\r\n\t\treturn this.i.xy;\r\n\t}\r\n\tset markerCollisionAvoidance(v: CollisionAvoidanceType) {\r\n\t\tthis.i.xy = ensureEnum<CollisionAvoidanceType>(CollisionAvoidanceType_$type, v);\r\n\t                                        this._a(\"markerCollisionAvoidance\", enumToString<CollisionAvoidanceType>(CollisionAvoidanceType_$type, this.i.xy));\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker template for the current series object.\r\n\t*/\r\n\tget actualMarkerTemplate() : IgDataTemplate {\r\n\t\treturn (this.i.ym as IgDataTemplate);\r\n\t}\r\n\tset actualMarkerTemplate(v: IgDataTemplate) {\r\n\t\tthis.i.ym = ((v as any) as DataTemplate);\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker brush for the current series object.\r\n\t*/\r\n\tget actualMarkerBrush() : string {\r\n\t\treturn brushToString(this.i.y2);\r\n\t}\r\n\tset actualMarkerBrush(v: string) {\r\n\t\tthis.i.y2 = stringToBrush(v);\r\n\t                                        this._a(\"actualMarkerBrush\", brushToString(this.i.y2));\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker outline for the current series object.\r\n\t*/\r\n\tget actualMarkerOutline() : string {\r\n\t\treturn brushToString(this.i.y3);\r\n\t}\r\n\tset actualMarkerOutline(v: string) {\r\n\t\tthis.i.y3 = stringToBrush(v);\r\n\t                                        this._a(\"actualMarkerOutline\", brushToString(this.i.y3));\r\n\t}\r\n\t\r\n\t    private _styleShape: (s: IgcGeographicShapeSeriesComponent, e: IgcStyleShapeEventArgs) => void = null;\r\n\t    private _styleShape_wrapped: any = null;\r\n\t\r\n\tpublic get styleShape(): (s: IgcGeographicShapeSeriesComponent, e: IgcStyleShapeEventArgs) => void {\r\n\treturn this._styleShape;\r\n\t}\r\n\t    public set styleShape(ev: (s: IgcGeographicShapeSeriesComponent, e: IgcStyleShapeEventArgs) => void) {\r\n\t        if (this._styleShape_wrapped !== null) {\r\n\t            this.i.styleShape = delegateRemove(this.i.styleShape, this._styleShape_wrapped);\r\n\t            this._styleShape_wrapped = null;\r\n\t            this._styleShape = null;\r\n\t        }\r\n\t\r\n\t        this._styleShape = ev;\r\n\t        this._styleShape_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcStyleShapeEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeStyleShape) {\r\n\t                        (this as any).beforeStyleShape(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._styleShape) {\r\n\t    this._styleShape(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.styleShape = delegateCombine(this.i.styleShape, this._styleShape_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterPolygonSeriesModule } from 'igniteui-charts/igc-scatter-polygon-series-module';\r\n\r\nimport { IgcGeographicShapeSeriesComponent } from './igc-geographic-shape-series-component';\r\nimport { GeographicShapeSeries } from './GeographicShapeSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicShapeSeriesModule {\r\n    public static register(): void {\r\nIgcScatterPolygonSeriesModule.register();\r\n        IgcGeographicShapeSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicShapeSeriesComponent\", IgcGeographicShapeSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicShapeSeries\", (<any>GeographicShapeSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { ScatterSeries } from \"igniteui-charts/ScatterSeries\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterBase } from \"igniteui-charts/ScatterBase\";\r\nimport { GeographicMarkerSeries } from \"./GeographicMarkerSeries\";\r\nimport { MarkerSeries } from \"igniteui-charts/MarkerSeries\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\nimport { Base, Type, markType, String_$type, enumGetBox, EnumUtil, Boolean_$type, typeGetValue, Number_$type, runOn, delegateCombine, delegateRemove, markDep } from \"igniteui-core/type\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { CollisionAvoidanceType, CollisionAvoidanceType_$type } from \"igniteui-charts/CollisionAvoidanceType\";\r\nimport { ScatterItemSearchMode, ScatterItemSearchMode_$type } from \"igniteui-charts/ScatterItemSearchMode\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { AssigningScatterStyleEventArgs } from \"igniteui-charts/AssigningScatterStyleEventArgs\";\r\nimport { AssigningScatterMarkerStyleEventArgs } from \"igniteui-charts/AssigningScatterMarkerStyleEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicSymbolSeriesView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicSymbolSeriesView, 'GeographicSymbolSeriesView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicSymbolSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ch = a;\r\n\t}\r\n\tprivate ch: GeographicSymbolSeries = null;\r\n\tau(): void {\r\n\t\tsuper.au();\r\n\t\tif (!this.q) {\r\n\t\t}\r\n\t}\r\n\tb5(): void {\r\n\t\tlet a = <ScatterSeries>this.ch.ws;\r\n\t\tsuper.b5();\r\n\t\ta.aal = this.ch.yg;\r\n\t\ta.aat = this.ch.ye;\r\n\t\ta.w2 = this.ch.w2;\r\n\t\ta.xu = this.ch.xi;\r\n\t\ta.xb = this.ch.w3;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<ScatterSeries>this.ch.ws).aal = this.ch.yg;\r\n\t}\r\n\tci(): void {\r\n\t\t(<ScatterSeries>this.ch.ws).aat = this.ch.ye;\r\n\t}\r\n\tcp(): void {\r\n\t\t(<ScatterSeries>this.ch.ws).w2 = this.ch.w2;\r\n\t}\r\n\tcn(): void {\r\n\t\t(<ScatterSeries>this.ch.ws).xu = this.ch.xi;\r\n\t}\r\n\tco(): void {\r\n\t\t(<ScatterSeries>this.ch.ws).xb = this.ch.w3;\r\n\t}\r\n\tcq(): void {\r\n\t\t(<ScatterSeries>this.ch.ws).z1 = this.ch.w4;\r\n\t}\r\n\tcs(): void {\r\n\t\t(<ScatterSeries>this.ch.ws).xAxis = (<XamGeographicMap>this.ch.c9).v8;\r\n\t}\r\n\tct(): void {\r\n\t\t(<ScatterSeries>this.ch.ws).yAxis = (<XamGeographicMap>this.ch.c9).wa;\r\n\t}\r\n\tcr(): void {\r\n\t\tlet a = <ScatterSeries>this.ch.ws;\r\n\t\tif (this.ch.c9 == null) {\r\n\t\t\ta.xAxis = null;\r\n\t\t\ta.yAxis = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.xAxis = (<XamGeographicMap>this.ch.c9).v8;\r\n\t\ta.yAxis = (<XamGeographicMap>this.ch.c9).wa;\r\n\t}\r\n\tcl(): void {\r\n\t\t(<ScatterSeries>this.ch.ws).yl = this.ch.x0;\r\n\t}\r\n\tck(): void {\r\n\t\t(<ScatterSeries>this.ch.ws).yb = this.ch.xw;\r\n\t}\r\n\tcm(): void {\r\n\t\t(<ScatterSeries>this.ch.ws).yc = this.ch.xx;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicSymbolSeries extends GeographicMarkerSeries {\r\n\tstatic $t: Type = markType(GeographicSymbolSeries, 'GeographicSymbolSeries', (<any>GeographicMarkerSeries).$);\r\n\tprotected bi(): Series {\r\n\t\treturn new GeographicSymbolSeries();\r\n\t}\r\n\tprotected get_eg(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicSymbolSeries).$;\r\n\t}\r\n\tprotected cq(): SeriesView {\r\n\t\treturn new GeographicSymbolSeriesView(this);\r\n\t}\r\n\tqx(a: SeriesView): void {\r\n\t\tsuper.qx(a);\r\n\t\tthis.x3 = <GeographicSymbolSeriesView>a;\r\n\t}\r\n\tx3: GeographicSymbolSeriesView;\r\n\tprotected jj(): number {\r\n\t\treturn 0.7;\r\n\t}\r\n\tprotected wr(): Series {\r\n\t\treturn new ScatterSeries();\r\n\t}\r\n\tprivate x2: ScatterSeries = null;\r\n\tye: string;\r\n\tyg: string;\r\n\tx0: CollisionAvoidanceType;\r\n\tx7: boolean;\r\n\tx6: boolean;\r\n\tprotected x5: boolean = false;\r\n\tprotected x4: boolean = false;\r\n\tprotected get_fc(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tassigningScatterStyle: (sender: any, args: AssigningScatterStyleEventArgs) => void = null;\r\n\tassigningScatterMarkerStyle: (sender: any, args: AssigningScatterMarkerStyleEventArgs) => void = null;\r\n\tx1: ScatterItemSearchMode;\r\n\tx9: number;\r\n\tprotected q5(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.q5(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.x3.cr();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[5]:\r\n\t\t\tthis.x3.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[4]:\r\n\t\t\tthis.x3.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[6]:\r\n\t\t\tthis.x3.cl();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"XAxis\":\r\n\t\t\tthis.x3.cs();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"YAxis\":\r\n\t\t\tthis.x3.ct();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[1]:\r\n\t\t\t(<ScatterBase>this.ws).zh = this.x7;\r\n\t\t\tthis.x5 = this.x7;\r\n\t\t\tif (this.x7) {\r\n\t\t\t\tlet e = (<ScatterBase>this.ws);\r\n\t\t\t\te.assigningScatterStyle = delegateCombine(e.assigningScatterStyle, runOn(this, this.yl));\r\n\t\t\t} else {\r\n\t\t\t\tlet f = (<ScatterBase>this.ws);\r\n\t\t\t\tf.assigningScatterStyle = delegateRemove(f.assigningScatterStyle, runOn(this, this.yl));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[0]:\r\n\t\t\t(<ScatterBase>this.ws).zg = this.x6;\r\n\t\t\tthis.x4 = this.x6;\r\n\t\t\tif (this.x7) {\r\n\t\t\t\tlet g = (<ScatterBase>this.ws);\r\n\t\t\t\tg.assigningScatterMarkerStyle = delegateCombine(g.assigningScatterMarkerStyle, runOn(this, this.yk));\r\n\t\t\t} else {\r\n\t\t\t\tlet h = (<ScatterBase>this.ws);\r\n\t\t\t\th.assigningScatterMarkerStyle = delegateRemove(h.assigningScatterMarkerStyle, runOn(this, this.yk));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[2]:\r\n\t\t\t(<ScatterBase>this.ws).y0 = this.x1;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[3]:\r\n\t\t\t(<ScatterBase>this.ws).z0 = this.x9;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate yl(a: any, b: AssigningScatterStyleEventArgs): void {\r\n\t\tif (this.assigningScatterStyle != null) {\r\n\t\t\tthis.assigningScatterStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate yk(a: any, b: AssigningScatterMarkerStyleEventArgs): void {\r\n\t\tif (this.assigningScatterMarkerStyle != null) {\r\n\t\t\tthis.assigningScatterMarkerStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tx8: boolean;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicSymbolSeries, 'raisePropertyChanged', [ 'IsCustomScatterMarkerStyleAllowed:x6:ym', [ 0, false ], 'IsCustomScatterStyleAllowed:x7:yn', [ 0, false ], 'ItemSearchMode:x1:yo', [ ScatterItemSearchMode_$type, enumGetBox<ScatterItemSearchMode>(ScatterItemSearchMode_$type, 0) ], 'ItemSearchThreshold:x9:yp', [ 1, 10000 ], 'LatitudeMemberPath:ye:yq', [ 2, null ], 'LongitudeMemberPath:yg:yr', [ 2, null ], 'MarkerCollisionAvoidance:x0:ys', [ CollisionAvoidanceType_$type, enumGetBox<CollisionAvoidanceType>(CollisionAvoidanceType_$type, 0) ], 'UseLightweightMarkers:x8:yt', [ 0, false ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { CollisionAvoidanceType, CollisionAvoidanceType_$type } from \"igniteui-charts/CollisionAvoidanceType\";\r\nimport { ScatterItemSearchMode, ScatterItemSearchMode_$type } from \"igniteui-charts/ScatterItemSearchMode\";\r\nimport { IgcAssigningScatterStyleEventArgs } from \"igniteui-charts/igc-assigning-scatter-style-event-args\";\r\nimport { IgcAssigningScatterMarkerStyleEventArgs } from \"igniteui-charts/igc-assigning-scatter-marker-style-event-args\";\r\nimport { IgcGeographicMarkerSeriesComponent } from \"./igc-geographic-marker-series-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicSymbolSeries } from \"./GeographicSymbolSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class for a geographic map with points marked at given locations.\r\n * This is the geographic equivalent of a ScatterSeries.\r\n*/\r\nexport class IgcGeographicSymbolSeriesComponent extends IgcGeographicMarkerSeriesComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicSymbolSeries\r\n{\r\n\treturn new GeographicSymbolSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicSymbolSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicSymbolSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicSymbolSeriesComponent._observedAttributesIgcGeographicSymbolSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicSymbolSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicSymbolSeriesComponent._observedAttributesIgcGeographicSymbolSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicSymbolSeriesComponent._observedAttributesIgcGeographicSymbolSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-symbol-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicSymbolSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicSymbolSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicSymbolSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicSymbolSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the series has only marker as visuals\r\n\t*/\r\n\tget hasOnlyMarkers() : boolean {\r\n\t\treturn (this.i.eg as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the latitude coordinate of the symbol.\r\n\t*/\r\n\tget latitudeMemberPath() : string {\r\n\t\treturn (this.i.ye as string);\r\n\t}\r\n\tset latitudeMemberPath(v: string) {\r\n\t\tthis.i.ye = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the longitude coordinate of the symbol.\r\n\t*/\r\n\tget longitudeMemberPath() : string {\r\n\t\treturn (this.i.yg as string);\r\n\t}\r\n\tset longitudeMemberPath(v: string) {\r\n\t\tthis.i.yg = v;\r\n\t}\r\n\t/**\r\n\t * The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision.\r\n\t*/\r\n\tget markerCollisionAvoidance() : CollisionAvoidanceType {\r\n\t\treturn this.i.x0;\r\n\t}\r\n\tset markerCollisionAvoidance(v: CollisionAvoidanceType) {\r\n\t\tthis.i.x0 = ensureEnum<CollisionAvoidanceType>(CollisionAvoidanceType_$type, v);\r\n\t                                        this._a(\"markerCollisionAvoidance\", enumToString<CollisionAvoidanceType>(CollisionAvoidanceType_$type, this.i.x0));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Scatter series should allow custom style overrides of its individual visuals.\r\n\t*/\r\n\tget isCustomScatterStyleAllowed() : boolean {\r\n\t\treturn (this.i.x7 as boolean);\r\n\t}\r\n\tset isCustomScatterStyleAllowed(v: boolean) {\r\n\t\tthis.i.x7 = ensureBool(v);\r\n\t                                        this._a(\"isCustomScatterStyleAllowed\", this.i.x7);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Scatter series should allow custom style overrides of its individual marker visuals.\r\n\t*/\r\n\tget isCustomScatterMarkerStyleAllowed() : boolean {\r\n\t\treturn (this.i.x6 as boolean);\r\n\t}\r\n\tset isCustomScatterMarkerStyleAllowed(v: boolean) {\r\n\t\tthis.i.x6 = ensureBool(v);\r\n\t                                        this._a(\"isCustomScatterMarkerStyleAllowed\", this.i.x6);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the mode the series will use to find the closest point to the cursor.\r\n\t*/\r\n\tget itemSearchMode() : ScatterItemSearchMode {\r\n\t\treturn this.i.x1;\r\n\t}\r\n\tset itemSearchMode(v: ScatterItemSearchMode) {\r\n\t\tthis.i.x1 = ensureEnum<ScatterItemSearchMode>(ScatterItemSearchMode_$type, v);\r\n\t                                        this._a(\"itemSearchMode\", enumToString<ScatterItemSearchMode>(ScatterItemSearchMode_$type, this.i.x1));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the threshold to use when searching for items using ItemSearchMode.\r\n\t*/\r\n\tget itemSearchThreshold() : number {\r\n\t\treturn (this.i.x9 as number);\r\n\t}\r\n\tset itemSearchThreshold(v: number) {\r\n\t\tthis.i.x9 = +v;\r\n\t                                        this._a(\"itemSearchThreshold\", this.i.x9);\r\n\t}\r\n\t\r\n\t    private _assigningScatterStyle: (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void = null;\r\n\t    private _assigningScatterStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Category Style\r\n\t*/\r\n\t\r\n\tpublic get assigningScatterStyle(): (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void {\r\n\treturn this._assigningScatterStyle;\r\n\t}\r\n\t    public set assigningScatterStyle(ev: (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void) {\r\n\t        if (this._assigningScatterStyle_wrapped !== null) {\r\n\t            this.i.assigningScatterStyle = delegateRemove(this.i.assigningScatterStyle, this._assigningScatterStyle_wrapped);\r\n\t            this._assigningScatterStyle_wrapped = null;\r\n\t            this._assigningScatterStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningScatterStyle = ev;\r\n\t        this._assigningScatterStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningScatterStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningScatterStyle) {\r\n\t                        (this as any).beforeAssigningScatterStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningScatterStyle) {\r\n\t    this._assigningScatterStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningScatterStyle = delegateCombine(this.i.assigningScatterStyle, this._assigningScatterStyle_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _assigningScatterMarkerStyle: (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void = null;\r\n\t    private _assigningScatterMarkerStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Scatter Marker Style\r\n\t*/\r\n\t\r\n\tpublic get assigningScatterMarkerStyle(): (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void {\r\n\treturn this._assigningScatterMarkerStyle;\r\n\t}\r\n\t    public set assigningScatterMarkerStyle(ev: (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void) {\r\n\t        if (this._assigningScatterMarkerStyle_wrapped !== null) {\r\n\t            this.i.assigningScatterMarkerStyle = delegateRemove(this.i.assigningScatterMarkerStyle, this._assigningScatterMarkerStyle_wrapped);\r\n\t            this._assigningScatterMarkerStyle_wrapped = null;\r\n\t            this._assigningScatterMarkerStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningScatterMarkerStyle = ev;\r\n\t        this._assigningScatterMarkerStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningScatterMarkerStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningScatterMarkerStyle) {\r\n\t                        (this as any).beforeAssigningScatterMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningScatterMarkerStyle) {\r\n\t    this._assigningScatterMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningScatterMarkerStyle = delegateCombine(this.i.assigningScatterMarkerStyle, this._assigningScatterMarkerStyle_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterSeriesModule } from 'igniteui-charts/igc-scatter-series-module';\r\n\r\nimport { IgcGeographicSymbolSeriesComponent } from './igc-geographic-symbol-series-component';\r\nimport { GeographicSymbolSeries } from './GeographicSymbolSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicSymbolSeriesModule {\r\n    public static register(): void {\r\nIgcScatterSeriesModule.register();\r\n        IgcGeographicSymbolSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicSymbolSeriesComponent\", IgcGeographicSymbolSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicSymbolSeries\", (<any>GeographicSymbolSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { TileSeries } from \"./TileSeries\";\r\nimport { GeographicShapeSeriesBase } from \"./GeographicShapeSeriesBase\";\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { Base, Type, EventArgs, runOn, delegateRemove, delegateCombine, markType } from \"igniteui-core/type\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ImageTilesReadyEventArgs } from \"./ImageTilesReadyEventArgs\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicTileSeries extends GeographicShapeSeriesBase {\r\n\tstatic $t: Type = markType(GeographicTileSeries, 'GeographicTileSeries', (<any>GeographicShapeSeriesBase).$);\r\n\tprotected bi(): Series {\r\n\t\treturn new GeographicTileSeries();\r\n\t}\r\n\tprotected get_f1(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicTileSeries).$;\r\n\t}\r\n\tget x0(): GeographicMapImagery {\r\n\t\treturn this.xz;\r\n\t}\r\n\tset x0(a: GeographicMapImagery) {\r\n\t\tlet b: boolean = a != this.x0;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.x0;\r\n\t\t\tthis.xz = a;\r\n\t\t\tthis.raisePropertyChanged(\"TileImagery\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate xz: GeographicMapImagery = null;\r\n\tx4(): void {\r\n\t\tif (this.x0 != null) {\r\n\t\t\tthis.x0.clearTileCache();\r\n\t\t}\r\n\t}\r\n\tprotected q5(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.q5(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"TileImagery\":\r\n\t\t\tif (this.ws != null) {\r\n\t\t\t\t(<TileSeries>this.ws).zl = this.x0;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate xy: TileSeries = null;\r\n\tprotected wx(): void {\r\n\t\tsuper.wx();\r\n\t\t(<TileSeries>this.ws).zl = this.x0;\r\n\t\tif (this.xy != null) {\r\n\t\t\tlet a = this.xy;\r\n\t\t\ta.imageTilesReady = delegateRemove(a.imageTilesReady, runOn(this, this.x3));\r\n\t\t}\r\n\t\tthis.xy = <TileSeries>this.ws;\r\n\t\tif (this.xy != null) {\r\n\t\t\tlet b = this.xy;\r\n\t\t\tb.imageTilesReady = delegateCombine(b.imageTilesReady, runOn(this, this.x3));\r\n\t\t}\r\n\t}\r\n\tprotected wr(): Series {\r\n\t\treturn new TileSeries();\r\n\t}\r\n\timageTilesReady: (sender: any, e: ImageTilesReadyEventArgs) => void = null;\r\n\tprivate x3(a: any, b: EventArgs): void {\r\n\t\tif (this.imageTilesReady != null) {\r\n\t\t\tthis.imageTilesReady(this, new ImageTilesReadyEventArgs());\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { IgcImageTilesReadyEventArgs } from \"./igc-image-tiles-ready-event-args\";\r\nimport { IgcGeographicShapeSeriesBaseComponent } from \"./igc-geographic-shape-series-base-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicTileSeries } from \"./GeographicTileSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class used for displaying a tile set, and using shapes to define the areas that should be rendered.\r\n*/\r\nexport class IgcGeographicTileSeriesComponent extends IgcGeographicShapeSeriesBaseComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicTileSeries\r\n{\r\n\treturn new GeographicTileSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicTileSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicTileSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicTileSeriesComponent._observedAttributesIgcGeographicTileSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicTileSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicTileSeriesComponent._observedAttributesIgcGeographicTileSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicTileSeriesComponent._observedAttributesIgcGeographicTileSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-tile-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicTileSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicTileSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicTileSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicTileSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a tile imagery.\r\n\t*/\r\n\tget isTile() : boolean {\r\n\t\treturn (this.i.f1 as boolean);\r\n\t}\r\n\t/**\r\n\t * The MapImagery which is used to provide the tiles for display.\r\n\t*/\r\n\tget tileImagery() : IgcGeographicMapImagery {\r\n\t                                        const r = this.i.x0;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset tileImagery(v: IgcGeographicMapImagery) {\r\n\t\tv == null ? this.i.x0 = null : this.i.x0 = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.tileImagery && (this.tileImagery as any).name && (this.tileImagery as any).name == name) { return this.tileImagery; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t/**\r\n\t * Removes all cached tile Imagery from the\r\n\t\r\n\t*/\r\n\tpublic clearTileCache() {\r\n\t\tthis.i.x4();\r\n\t}\r\n\t\r\n\t    private _imageTilesReady: (s: IgcGeographicTileSeriesComponent, e: IgcImageTilesReadyEventArgs) => void = null;\r\n\t    private _imageTilesReady_wrapped: any = null;\r\n\t/**\r\n\t * This event is fired whenever the image tiles transition from a loading state (e.g. some are fading in) to a loaded state.\r\n\t*/\r\n\t\r\n\tpublic get imageTilesReady(): (s: IgcGeographicTileSeriesComponent, e: IgcImageTilesReadyEventArgs) => void {\r\n\treturn this._imageTilesReady;\r\n\t}\r\n\t    public set imageTilesReady(ev: (s: IgcGeographicTileSeriesComponent, e: IgcImageTilesReadyEventArgs) => void) {\r\n\t        if (this._imageTilesReady_wrapped !== null) {\r\n\t            this.i.imageTilesReady = delegateRemove(this.i.imageTilesReady, this._imageTilesReady_wrapped);\r\n\t            this._imageTilesReady_wrapped = null;\r\n\t            this._imageTilesReady = null;\r\n\t        }\r\n\t\r\n\t        this._imageTilesReady = ev;\r\n\t        this._imageTilesReady_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcImageTilesReadyEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeImageTilesReady) {\r\n\t                        (this as any).beforeImageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._imageTilesReady) {\r\n\t    this._imageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.imageTilesReady = delegateCombine(this.i.imageTilesReady, this._imageTilesReady_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcTileSeriesModule } from './igc-tile-series-module';\r\n\r\nimport { IgcGeographicTileSeriesComponent } from './igc-geographic-tile-series-component';\r\nimport { GeographicTileSeries } from './GeographicTileSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicTileSeriesModule {\r\n    public static register(): void {\r\nIgcTileSeriesModule.register();\r\n        IgcGeographicTileSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicTileSeriesComponent\", IgcGeographicTileSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicTileSeries\", (<any>GeographicTileSeries).$type);\r\n    }\r\n}\r\n","import { IgRect } from \"igniteui-core/IgRect\"\r\nimport { IgSize } from \"igniteui-core/IgSize\"\r\nimport { IgPoint } from \"igniteui-core/IgPoint\"\r\nimport { IgDataTemplate } from \"igniteui-core/IgDataTemplate\"\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicXYTriangulatingSeries } from \"./GeographicXYTriangulatingSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, initializePropertiesFromCss, NamePatcher } from \"igniteui-core/componentUtil\";\r\nimport { IgcTriangulationDataSource } from \"igniteui-core/igc-triangulation-data-source\";\r\nimport { IEnumerable } from \"igniteui-core/type\";\r\nimport { RegisterElementHelper } from 'igniteui-core/module-manager';\r\n\r\n/**\r\n * Base class for geographic series which triangulate XY data prior to rendering.\r\n*/\r\nexport abstract class IgcGeographicXYTriangulatingSeriesComponent extends IgcGeographicMapSeriesHostComponent {\r\n\r\n\r\n    public get i(): GeographicXYTriangulatingSeries {\r\n        return this._implementation;\r\n    }\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    private static _observedAttributesIgcGeographicXYTriangulatingSeriesComponent: string[] = null;\r\n    static get observedAttributes() {\r\n        if (IgcGeographicXYTriangulatingSeriesComponent._observedAttributesIgcGeographicXYTriangulatingSeriesComponent == null) {\r\n            let names = getAllPropertyNames(IgcGeographicXYTriangulatingSeriesComponent);\r\n            for (let i = 0; i < names.length; i++) {\r\n                names[i] = toSpinal(names[i]);\r\n            }\r\n            IgcGeographicXYTriangulatingSeriesComponent._observedAttributesIgcGeographicXYTriangulatingSeriesComponent = names;\r\n        }\r\n        return IgcGeographicXYTriangulatingSeriesComponent._observedAttributesIgcGeographicXYTriangulatingSeriesComponent;\r\n    }\r\n\r\n    private _triangulationDataSource: string;\r\n\t/**\r\n\t * Gets or sets the string path specifying the location of the Itf file.\r\n\t*/\r\n    set triangulationDataSource(value: string) {\r\n        this._triangulationDataSource = value;\r\n        this.updateTriangulationDataSource();\r\n    }\r\n    get triangulationDataSource(): string {\r\n        return this._triangulationDataSource;\r\n    }\r\n\r\n    private _cachedTriangulationDataSource: IgcTriangulationDataSource;\r\n    private updateTriangulationDataSource() {\r\n        if (this._cachedTriangulationDataSource == null) {\r\n            this._cachedTriangulationDataSource = new IgcTriangulationDataSource();\r\n            this.onTriangulationDataSourceImportCompleted = this.onTriangulationDataSourceImportCompleted.bind(this);\r\n            this._cachedTriangulationDataSource.importCompleted = this.onTriangulationDataSourceImportCompleted;\r\n        }\r\n\r\n       \tthis._cachedTriangulationDataSource.source = this._triangulationDataSource;\r\n    }\r\n\r\n    private onTriangulationDataSourceImportCompleted(s: any, e: any) {\r\n        this.dataSource = this._cachedTriangulationDataSource.getPointData();\r\n        this.trianglesSource = <any[]><any>this._cachedTriangulationDataSource.getTriangleData();\r\n    }\r\n\r\n\t\t/**\r\n\t * The name of the property from which to extract the Longitude for each item in the ItemsSource.\r\n\t*/\r\n\tget longitudeMemberPath() : string {\r\n\t\treturn (this.i.w4 as string);\r\n\t}\r\n\tset longitudeMemberPath(v: string) {\r\n\t\tthis.i.w4 = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property from which to extract the Latitude for each item in the ItemsSource.\r\n\t*/\r\n\tget latitudeMemberPath() : string {\r\n\t\treturn (this.i.w2 as string);\r\n\t}\r\n\tset latitudeMemberPath(v: string) {\r\n\t\tthis.i.w2 = v;\r\n\t}\r\n\t/**\r\n\t * The source of triangulation data.\r\n\t * This property is optional.  If it is left as null, the triangulation will be created based on the items in the ItemsSource.  Triangulation is a demanding operation, so the runtime performance will be better when specifying a TriangulationSource, especially when a large number of data items are present.\r\n\t*/\r\n\tget trianglesSource() : any[] {\r\n\t\treturn (this.i.w1 as any) as any[];\r\n\t}\r\n\tset trianglesSource(v: any[]) {\r\n\t                                        this.i.w1 = (v as any) as IEnumerable;\r\n\t}\r\n\t/**\r\n\t * The name of the property of the TrianglesSource items which, for each triangle, contains the index of the first vertex point in the ItemsSource.\r\n\t*/\r\n\tget triangleVertexMemberPath1() : string {\r\n\t\treturn (this.i.w7 as string);\r\n\t}\r\n\tset triangleVertexMemberPath1(v: string) {\r\n\t\tthis.i.w7 = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of the TrianglesSource items which, for each triangle, contains the index of the second vertex point in the ItemsSource.\r\n\t*/\r\n\tget triangleVertexMemberPath2() : string {\r\n\t\treturn (this.i.w9 as string);\r\n\t}\r\n\tset triangleVertexMemberPath2(v: string) {\r\n\t\tthis.i.w9 = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of the TrianglesSource items which, for each triangle, contains the index of the third vertex point in the ItemsSource.\r\n\t*/\r\n\tget triangleVertexMemberPath3() : string {\r\n\t\treturn (this.i.xb as string);\r\n\t}\r\n\tset triangleVertexMemberPath3(v: string) {\r\n\t\tthis.i.xb = v;\r\n\t}\r\n\r\n    \r\n\r\n    \r\n\r\n\t\r\n\r\n    \r\n\r\n    //@@ZoneRunner\r\n    \r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { ImageTilesReadyEventArgs as ImageTilesReadyEventArgs_internal } from \"./ImageTilesReadyEventArgs\";\r\n\r\nexport class IgcImageTilesReadyEventArgs\r\n{\r\n\r\nprotected createImplementation() : ImageTilesReadyEventArgs_internal\r\n{\r\n\treturn new ImageTilesReadyEventArgs_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : ImageTilesReadyEventArgs_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { OpenStreetMapImagery as OpenStreetMapImagery_internal } from \"./OpenStreetMapImagery\";\r\n\r\n/**\r\n * UI element class used to display OpenStreetMap imagery in the IgxGeographicMap.Component\r\n*/\r\nexport class IgcOpenStreetMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : OpenStreetMapImagery_internal\r\n{\r\n\treturn new OpenStreetMapImagery_internal();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : OpenStreetMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t/**\r\n\t * Gets or sets the tile path URL.\r\n\t*/\r\n\tget tilePath() : string {\r\n\t\treturn (this.i.tilePath as string);\r\n\t}\r\n\tset tilePath(v: string) {\r\n\t\tthis.i.tilePath = v;\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcOpenStreetMapImagery } from './igc-open-street-map-imagery';\r\nimport { OpenStreetMapImagery } from './OpenStreetMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcOpenStreetMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcOpenStreetMapImagery\", IgcOpenStreetMapImagery);\r\n        TypeRegistrar.register(\"OpenStreetMapImagery\", (<any>OpenStreetMapImagery).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { ITileGenerator, ITileGenerator_$type } from \"igniteui-core/ITileGenerator\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { TileGeneratorTileSource } from \"igniteui-core/TileGeneratorTileSource\";\r\nimport { Base, Type, runOn, delegateCombine, markType, markDep } from \"igniteui-core/type\";\r\nimport { DownloadingMultiScaleImageEventArgs } from \"igniteui-core/DownloadingMultiScaleImageEventArgs\";\r\nimport { CancellingMultiScaleImageEventArgs } from \"igniteui-core/CancellingMultiScaleImageEventArgs\";\r\nimport { TileImageCreatedEventArgs } from \"igniteui-core/TileImageCreatedEventArgs\";\r\nimport { TileImageZoomChangingEventArgs } from \"igniteui-core/TileImageZoomChangingEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { IMapRenderDeferralHandler } from \"igniteui-core/IMapRenderDeferralHandler\";\r\nimport { stringReplace } from \"igniteui-core/string\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TileGeneratorMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(TileGeneratorMapImagery, 'TileGeneratorMapImagery', (<any>GeographicMapImagery).$);\r\n\tconstructor() {\r\n\t\tsuper(new TileGeneratorTileSource());\r\n\t\tthis.downloadingImage = delegateCombine(this.downloadingImage, runOn(this, this.br));\r\n\t\tthis.cancellingImage = delegateCombine(this.cancellingImage, runOn(this, this.bq));\r\n\t}\r\n\tprivate bq(a: any, b: CancellingMultiScaleImageEventArgs): void {\r\n\t\tlet c = b.uri.toString().split('/');\r\n\t\tlet d = parseInt(stringReplace(c[3], \"/\", \"\"));\r\n\t\tlet e = parseInt(stringReplace(c[4], \"/\", \"\"));\r\n\t\tlet f = parseInt(stringReplace(stringReplace(c[5], \"/\", \"\"), \".png\", \"\"));\r\n\t\tif (this.tileGenerator != null) {\r\n\t\t\tthis.tileGenerator.cancelTile(d, e, f);\r\n\t\t}\r\n\t}\r\n\tprivate br(a: any, b: DownloadingMultiScaleImageEventArgs): void {\r\n\t\tlet c = b.uri.toString().split('/');\r\n\t\tlet d = parseInt(stringReplace(c[3], \"/\", \"\"));\r\n\t\tlet e = parseInt(stringReplace(c[4], \"/\", \"\"));\r\n\t\tlet f = parseInt(stringReplace(stringReplace(c[5], \"/\", \"\"), \".png\", \"\"));\r\n\t\tb.uri = null;\r\n\t\tlet img_ = b.image;\r\n\t\tif (this.tileGenerator != null) {\r\n\t\t\tthis.tileGenerator.getTile(d, e, f, (g: any, h: TileImageCreatedEventArgs) => this.deferralHandler.deferAction(() => img_.src = h.url), (g: any, h: TileImageCreatedEventArgs) => {\r\n\t\t\t}, (g: any, h: TileImageZoomChangingEventArgs) => {\r\n\t\t\t}, img_);\r\n\t\t}\r\n\t}\r\n\ttileGenerator: ITileGenerator;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, TileGeneratorMapImagery, 'ba', [ 'TileGenerator', [ ITileGenerator_$type, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { TileGeneratorMapImagery as TileGeneratorMapImagery_internal } from \"./TileGeneratorMapImagery\";\r\nimport { ITileGenerator } from \"igniteui-core/ITileGenerator\";\r\n\r\n/**\r\n * Represents a CustomMapImagery MapImagery\r\n*/\r\nexport class IgcTileGeneratorMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : TileGeneratorMapImagery_internal\r\n{\r\n\treturn new TileGeneratorMapImagery_internal();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : TileGeneratorMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t/**\r\n\t * Gets or sets the culture name for this tile source.\r\n\t*/\r\n\tget tileGenerator() : ITileGenerator {\r\n\t\treturn this.i.tileGenerator as ITileGenerator;\r\n\t}\r\n\tset tileGenerator(v: ITileGenerator) {\r\n\t                                        this.i.tileGenerator = v;\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcTileGeneratorMapImagery } from './igc-tile-generator-map-imagery';\r\nimport { TileGeneratorMapImagery } from './TileGeneratorMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcTileGeneratorMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcTileGeneratorMapImagery\", IgcTileGeneratorMapImagery);\r\n        TypeRegistrar.register(\"TileGeneratorMapImagery\", (<any>TileGeneratorMapImagery).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { IgcShapeSeriesBaseComponent } from \"igniteui-charts/igc-shape-series-base-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { TileSeries } from \"./TileSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Represents a tile series class that can render imagery tiles\r\n*/\r\nexport class IgcTileSeriesComponent extends IgcShapeSeriesBaseComponent\r\n{\r\n\r\nprotected createImplementation() : TileSeries\r\n{\r\n\treturn new TileSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : TileSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcTileSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcTileSeriesComponent._observedAttributesIgcTileSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcTileSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcTileSeriesComponent._observedAttributesIgcTileSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcTileSeriesComponent._observedAttributesIgcTileSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-tile-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcTileSeriesComponent._isElementRegistered) {\r\n\t                        IgcTileSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcTileSeriesComponent.htmlTagName,\r\n\t                            IgcTileSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a tile imagery.\r\n\t*/\r\n\tget isTile() : boolean {\r\n\t\treturn (this.i.f1 as boolean);\r\n\t}\r\n\t/**\r\n\t * The MapImagery which is used to provide the tiles for display.\r\n\t*/\r\n\tget tileImagery() : IgcGeographicMapImagery {\r\n\t                                        const r = this.i.zl;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset tileImagery(v: IgcGeographicMapImagery) {\r\n\t\tv == null ? this.i.zl = null : this.i.zl = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.tileImagery && (this.tileImagery as any).name && (this.tileImagery as any).name == name) { return this.tileImagery; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t/**\r\n\t * Defers rendering of the series\r\n\t\r\n\t*/\r\n\tpublic deferredRefresh() {\r\n\t\tthis.i.deferredRefresh();\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcTileSeriesComponent } from './igc-tile-series-component';\r\nimport { TileSeries } from './TileSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcTileSeriesModule {\r\n    public static register(): void {\r\n        IgcTileSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcTileSeriesComponent\", IgcTileSeriesComponent);\r\n        TypeRegistrar.register(\"TileSeries\", (<any>TileSeries).$type);\r\n    }\r\n}\r\n"],"names":["GeographicMapSeriesHost","qc","super","this","ws","constructor","wq","wr","get_fa","ko","a","b","c","nb","mb","get_kg","ky","set_kg","ox","d9","d","e","ai","bm","wx","get_hasMarkers","hasMarkers","hostedSeries_","externalObject","createFromInternal","Prefix","Postfix","_implementation","pd","wt","b5","de","dg","df","dh","kl","ku","j8","j6","i3","v6","wh","an","wi","ao","wj","wk","iz","v2","i1","v4","v7","i4","v3","i0","v5","i2","j2","iu","iq","km","cq","HostSeriesView","qx","$","wu","wz","h","q5","c9","qq","mw","q8","wl","index","pw","ke","S","actualWindowRectChanged","wy","f","ww","c1","b6","cd","cg","ca","hs_","v_","_visibility","visibility","f6","expectFunctions","cf","b4","cc","b1","b2","je","b9","ii","b3","cb","ce","title","b7","b8","legend","ct","av","vl","width","v2_","rn","rm","a1","r6","get_coercionMethods","_coercionMethods","set_coercionMethods","coercionMethods","pv","kk","o6","$t","i","raisePropertyChanged","oldValue","newValue","b0","at","legendItemVisibility","itemsSource","u9","vp","jh","kb","_opacity","jn","gn","legendItemBadgeShape","bc","u3","u7","GeographicMarkerSeries","propertyUpdated","xg","st","xh","vf","xu","vg","xv","il","w3","l8","propertyName","xs","ya","x9","$$p","yb","xw","yc","xx","w1","w0","w2","xi","xb","z1","w4","B","g","GeographicShapeSeriesBase","w8","w7","assigningShapeStyle","assigningShapeMarkerStyle","w6","GeographicShapeSeriesBaseView","get_fc","get_eb","ci","ck","cj","xr","xa","xo","xq","w9","xn","x8","xc","xd","importCompleted","xp","j","count","ext_","w5","getPointData","get_g5","set_g5","ch","yl","xl","v8","wa","x5","ImageTilesReadyEventArgs","ImagesChangedEventArgs","MapBackgroundTilingMode","MapBackgroundTilingMode_$type","MapResizeBehavior","MapResizeBehavior_$type","TileSeries","ShapeSeriesBase","bi","get_f1","zj","zi","imageTilesReady","zm","zn","ab","TileSeriesView","zh","get_xt","zl","zk","propertyChanged","zq","qh","zr","deferralHandler","type","XamGeographicMap","geographicMap","zt","dd","dk","be","w","qj","di","register","unRegister","deferredRefresh","deferAction","jx","setTimeout","window","sk","dj","ro","zs","getViewInfo","p0","p1","hl","item","a3","d3","y0","isEmpty","height","o3","IMapRenderDeferralHandler","ShapeSeriesViewBase","da","dl","GeometryGroup","dc","db","au","q","Defaults","add","c5","c6","c4","co","cm","cu","clear","as","windowRect","createElement","get2DCanvasContext","RenderingContext","CanvasViewRenderer","setAttribute","bx","toString","bd","imagesChanged","bf","a8","k","aa","r","clip","Math","round","left","top","o","getNativeElement","z","a6","SphericalMercatorVerticalScaler","VerticalLinearScaler","getMercatorUnscaledValue","p","getMercatorScaledValue1","af","values_","Array","isArray","v","x","y","m","n","s","t","u","ac","ah","ag","sin","log","aj","p3","ak","l6","p4","l5","am","Rect","aq","getMercatorScaledValue3","getMercatorScaledValue2","static","exp","asin","SphericalMercatorHorizontalScaler","HorizontalLinearScaler","l","SeriesViewer","wm","we","x4","wb","v9","wd","x0","$type","NaN","x7","x6","empty","bottom","backgroundContent","OpenStreetMapImagery","$ret","NumericXAxis","nm","NumericYAxis","xf","xm","no","provideContainer","provideRenderer","fv","hb","fh","fi","wf","wg","l_op_Inequality","p8","yd","yj","cr","right","getZoomRectFromGeoRect","getZoomFromGeographicRect","v1","ScalerParams","v0","ek","intersect","getZoomFromGeographicPoints","yf","vo","en","x1","l9","x2","e5","x3","GeographicMapImagery","clearTileCache","ga","xk","ee","series","xj","rj","get_e9","vm","vw","wp","floor","ceil","abs","ew","mt","Tuple$2","hf","MathUtil","vn","ye","c7","XamGeographicMapView","xe","pr","p2","q7","hm","q6","min","fz","cs","wn","isHorizontalWrappingEnabled","fu","fr","wo","fs","wv","rh","he","rd","c2","getFontInfo","fo","up","fw","getFontBrush","fx","qz","ItfConverter","triangulationSource","points","triangles","qn","m6","rc","ChartVisualData","axes","add1","_inner","name","contentArea","RectData","centralArea","plotArea","vs","yk","DependencyProperty","PropertyMetadata","Control","ap","cancellingImage","downloadingImage","bb","GeographicMapImageryView","al","a5","a9","a4","a2","referer","bj","userAgent","bg","ba","geographicMapProperty","a7","bs","bn","XamMultiScaleImage","Size","bz","GeographicXYTriangulatingSeriesView","trianglesSource","cl","cn","GeographicScatterAreaSeriesView","cp","yz","yn","SeriesViewerView","fn","fp","uj","bk","bw","el","get_ap","d4","BrushCollection","du","ae","dv","fy","remove","ft","d1","fd","ad","fe","_stroke","fq","OpenStreetMapTileSource","tilePath","tilePathProperty","bq","setTilePathUrl","br","GeographicXYTriangulatingSeries","GeographicScatterAreaSeries","get_es","triangulationStatusChanged","xt","ym","sb","ScatterAreaSeries","ColorScale","BingMapsImageryStyle","IgcSubDomainsCollection","IgCollection","list","length","_createInnerColl","coll","SyncableObservableCollection$2","compare","ext","int","comp","equals","createTo","createFrom","BingMapsImageryStyle_$type","SubDomainsCollection","ObservableCollection$1","_rest","specialize","BingMapsMapImageryView","subDomains","actualTilePath","actualSubDomains","cultureName","BingMapsMapImagery","BingMapsTileSource","_pendingBingRequest_","_isInitialized","by","getResponseCompleted","bind","bp","actualBingImageryRestUri","isInitialized","bingImageryRestUri","requestMapSettings","bv","isDeferredLoad","string","apiKey","Uri","isWellFormedUriString","imageryStyle","url_","submit","data_","resourceSets_","JSON","parse","resourceSets","resources_","resources","imageUrl_","subDomains_","List$1","imageUrlSubdomains","collectionChanged","IgcBingMapsMapImagery","createImplementation","_subDomains","_actualSubDomains","innerColl","_fromInner","_setSyncTarget","_fromOuter","syncColl","SyncableObservableCollection$1","IgcBingMapsMapImageryModule","registerCons","IgcCustomMapImagery","_getTileImageUri","_getTileImageUri_wrapped","getTileImageUri","ev","outerArgs","_provideImplementation","beforeGetTileImageUri","CustomMapImagery","IgcCustomMapImageryModule","GeographicContourLineSeriesView","yx","GeographicContourLineSeries","get_fh","ScatterContourSeries","vx","jf","vz","ValueBrushScale","ContourValueResolver","C","IgcGeographicContourLineSeriesComponent","_triangulationStatusChanged","_triangulationStatusChanged_wrapped","connectedCallback","_attached","_flushQueuedAttributes","disconnectedCallback","observedAttributes","_observedAttributesIgcGeographicContourLineSeriesComponent","names","_isElementRegistered","registerElement","htmlTagName","isLineContour","valueMemberPath","fillScale","_createFromInternal","_stylingContainer","_styling","actualFillScale","valueResolver","I","findByName","container","component","parent","_inStyling","beforeTriangulationStatusChanged","IgcGeographicContourLineSeriesModule","IgcScatterContourSeriesModule","GeographicHighDensityScatterSeriesView","HighDensityScatterSeries","y8","z6","z5","xz","GeographicHighDensityScatterSeries","ji","get_fm","progressiveLoadStatusChanged","currentStatus","Color","IgcGeographicHighDensityScatterSeriesComponent","_progressiveLoadStatusChanged","_progressiveLoadStatusChanged_wrapped","_observedAttributesIgcGeographicHighDensityScatterSeriesComponent","isPixel","fm","latitudeMemberPath","longitudeMemberPath","useBruteForce","_a","progressiveLoad","mouseOverEnabled","heatMinimum","heatMaximum","heatMinimumColor","heatMaximumColor","pointExtent","progressiveStatus","beforeProgressiveLoadStatusChanged","IgcGeographicHighDensityScatterSeriesModule","IgcHighDensityScatterSeriesModule","ArcGISOnlineMapImagery","ArcGISOnlineTileSource","bu","bt","_pendingTokenRequest_","_pendingMapServerRequest_","userToken","getResponseCompleted_MapServerResponse","getResponseCompleted_TokenResponse","mapServerUri","mapServerUriProperty","userName","userNameProperty","password","passwordProperty","userTokenProperty","isMapPublic","isMapPublicProperty","defaultTokenTimeout","tokenGenerationEndPoint","refererUri","acquireNewToken","substr","token","tileInfo","levelOfDetail","lods","IgcArcGISOnlineMapImagery","IgcArcGISOnlineMapImageryModule","IgcGeographicMapComponent","value","_height","style","notifyContainerResized","_width","_chart","undefined","_series","_innerColl","addListener","sender","_seriesAdapter","action","NotifyCollectionChangedAction","Add","addManualItem","newItems","Remove","removeManualItemAt","oldStartingIndex","Replace","insertManualItem","newStartingIndex","Reset","clearManualItems","contentSeries","actualSeries","_dataSource","_disconnected","_defaultTooltips","_imageTilesReady","_imageTilesReady_wrapped","ensureStylablePatched","Object","getPrototypeOf","_renderer","document","DataChartStylingDefaults","_container","updateRoot","setStyleProperty","nativeElement","_wrapper","chart","owner","_provideRenderer","provideData","parentElement","_ensureDefaultTooltip","_ensureTooltipCreated","MutationObserver","mutation","updateContentChildren","observe","childList","addSizeWatcher","destroy","dataSource","bindData","currSeries","children","push","notifyContentChanged","onDetachedFromUI","onAttachedToUI","classList","appendChild","rootWrapper","display","afterContentInit","isRegistered","create","onContentReady","_onDefaultTooltipsReady","createTooltip","ele","wrapper","updateToolTip","hideToolTip","showDefaultTooltip","self","isSubContent","removeChild","context","_observedAttributesIgcGeographicMapComponent","zoomable","resizeBehavior","backgroundTilingMode","useWorldRectForZoomBounds","suppressZoomResetOnWorldRectChange","worldRect","actualWorldRect","xAxis","yAxis","isMap","e9","windowScale","actualWindowScale","zoomIsReady","getCurrentActualWorldRect","iv","geographic","updateZoomWindow","zoomWindow","updateWorldRect","convertGeographicToZoom","extraPixelPadding","northWest","southEast","getGeographicFromZoom","getGeographicPoint","pixelCoordinate","getPixelPoint","geographicCoordinate","getWindowPoint","styleUpdated","getActualWindowScaleHorizontal","getActualWindowScaleVertical","exportVisualData","zoomToGeographic","beforeImageTilesReady","IgcGeographicMapCoreModule","IgcOpenStreetMapImageryModule","IgcImagesChangedEventArgs","onImplementationCreated","_initializeAdapters","IgcGeographicMapImagery","internal","externalName","_imagesChanged","_imagesChanged_wrapped","_cancellingImage","_cancellingImage_wrapped","_downloadingImage","_downloadingImage_wrapped","opacity","findEphemera","indexOf","beforeImagesChanged","beforeCancellingImage","beforeDownloadingImage","IgcGeographicMapModule","IgcGeographicShapeSeriesModule","IgcGeographicPolylineSeriesModule","IgcTileGeneratorMapImageryModule","IgcHeatTileGeneratorModule","IgcGeographicTileSeriesModule","IgcSizeScaleModule","IgcValueBrushScaleModule","IgcCustomPaletteColorScaleModule","IgcGeographicProportionalSymbolSeriesModule","IgcGeographicSymbolSeriesModule","IgcGeographicScatterAreaSeriesModule","IgcShapeDataSourceModule","IgcGeographicMapSeriesHostComponent","_observedAttributesIgcGeographicMapSeriesHostComponent","isGeographic","fa","visibleFromScale","notifyIndexedPropertiesChanged","getItemValue","memberPathName","getMemberPathValue","getItem","world","getPreviousOrExactIndex","skipUnknowns","getNextOrExactIndex","getSeriesValue","useInterpolation","getSeriesValuePosition","getSeriesValueBoundingBox","getSeriesValueMarkerBoundingBox","getSeriesHighValue","getSeriesHighValuePosition","getSeriesLowValue","getSeriesLowValuePosition","getSeriesValuePositionFromSeriesPixel","mouse","getSeriesValueFromSeriesPixel","getItemSpan","renderSeries","animate","IgcGeographicMarkerSeriesComponent","_observedAttributesIgcGeographicMarkerSeriesComponent","markerType","markerThickness","markerOutlineMode","markerFillMode","markerTemplate","markerBrush","markerOutline","maximumMarkers","actualMarkerTemplate","actualMarkerBrush","actualMarkerOutline","GeographicPolylineSeriesView","xy","GeographicPolylineSeries","get_fp","styleShape","ScatterPolylineSeries","Style","StyleSelector","IgcGeographicPolylineSeriesComponent","_styleShape","_styleShape_wrapped","_observedAttributesIgcGeographicPolylineSeriesComponent","isPolyline","shapeFill","fill","ensureShapeStyle","shapeStroke","stroke","shapeStrokeThickness","strokeThickness","shapeOpacity","beforeStyleShape","IgcScatterPolylineSeriesModule","GeographicProportionalSymbolSeriesView","aal","yr","aat","yp","act","adj","yw","acj","ac9","ac4","acg","acr","acs","acy","acx","cv","cw","cy","cz","cx","c0","GeographicProportionalSymbolSeries","get_eg","assigningScatterStyle","assigningScatterMarkerStyle","jj","BubbleSeries","y1","zg","z0","BrushScale","ScatterItemSearchMode","SizeScale","IgcGeographicProportionalSymbolSeriesComponent","_assigningScatterStyle","_assigningScatterStyle_wrapped","_assigningScatterMarkerStyle","_assigningScatterMarkerStyle_wrapped","_observedAttributesIgcGeographicProportionalSymbolSeriesComponent","hasOnlyMarkers","eg","radiusMemberPath","radiusScale","labelMemberPath","fillMemberPath","fillScaleUseGlobalValues","markerOutlineUsesFillScale","markerOutlineBrightness","markerBrushBrightness","radiusScaleUseGlobalValues","isCustomScatterStyleAllowed","isCustomScatterMarkerStyleAllowed","itemSearchMode","itemSearchThreshold","beforeAssigningScatterStyle","beforeAssigningScatterMarkerStyle","IgcBubbleSeriesModule","IgcGeographicScatterAreaSeriesComponent","_observedAttributesIgcGeographicScatterAreaSeriesComponent","isArea","es","colorMemberPath","colorScale","actualColorScale","updateActualColorScale","IgcScatterAreaSeriesModule","IgcGeographicShapeSeriesBaseComponent","_currData","_onImportCompleted","_assigningShapeStyle","_assigningShapeStyle_wrapped","_assigningShapeMarkerStyle","_assigningShapeMarkerStyle_wrapped","_observedAttributesIgcGeographicShapeSeriesBaseComponent","shapeDataSource","_shapeDataSource","updateShapeDataSource","databaseSource","_databaseSource","onUpdateDataSource","data","_cachedShapeDataSource","onShapeDataSourceImportCompleted","shapefileSource","dataBind","shapeMemberPath","isCustomShapeStyleAllowed","isCustomShapeMarkerStyleAllowed","itemSearchPointsThreshold","shapefileDataSource","setNativeElement","shapeFilterResolution","beforeAssigningShapeStyle","beforeAssigningShapeMarkerStyle","GeographicShapeSeriesView","y5","aa3","y7","zw","aai","zz","aaz","y4","aa0","aa2","y6","GeographicShapeSeries","get_fo","ScatterPolygonSeries","y2","y3","zp","Brush","DataTemplate","CollisionAvoidanceType","MarkerFillMode","MarkerOutlineMode","DeviceUtils","MarkerType","IgcGeographicShapeSeriesComponent","_observedAttributesIgcGeographicShapeSeriesComponent","isPolygon","markerCollisionAvoidance","IgcScatterPolygonSeriesModule","GeographicSymbolSeriesView","yg","GeographicSymbolSeries","ScatterSeries","IgcGeographicSymbolSeriesComponent","_observedAttributesIgcGeographicSymbolSeriesComponent","IgcScatterSeriesModule","GeographicTileSeries","IgcGeographicTileSeriesComponent","_observedAttributesIgcGeographicTileSeriesComponent","isTile","f1","tileImagery","IgcTileSeriesModule","IgcGeographicXYTriangulatingSeriesComponent","_observedAttributesIgcGeographicXYTriangulatingSeriesComponent","triangulationDataSource","_triangulationDataSource","updateTriangulationDataSource","_cachedTriangulationDataSource","onTriangulationDataSourceImportCompleted","source","getTriangleData","triangleVertexMemberPath1","triangleVertexMemberPath2","triangleVertexMemberPath3","IgcImageTilesReadyEventArgs","IgcOpenStreetMapImagery","TileGeneratorMapImagery","TileGeneratorTileSource","uri","split","parseInt","tileGenerator","cancelTile","img_","image","getTile","src","url","ITileGenerator","IgcTileGeneratorMapImagery","IgcTileSeriesComponent","_observedAttributesIgcTileSeriesComponent"],"sourceRoot":""}